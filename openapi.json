{
  "openapi": "3.0.0",
  "info": {
    "title": "Shutterstock API Reference",
    "description": "The Shutterstock API provides access to Shutterstock's library of media, as well as information about customers' accounts and the contributors that provide the media.",
    "version": "1.0.0"
  },
  "paths": {
    "/v2/images/search": {
      "get": {
        "parameters": [
          {
            "description": "Show images added on the specified date, in the format YYYY-MM-DD",
            "in": "query",
            "name": "added_date",
            "schema": {
              "type": "string",
              "format": "date"
            }
          },
          {
            "description": "Show images added on or after the specified date, in the format YYYY-MM-DD",
            "in": "query",
            "name": "added_date_start",
            "schema": {
              "type": "string",
              "format": "date"
            }
          },
          {
            "description": "Show images added before the specified date, in the format YYYY-MM-DD",
            "in": "query",
            "name": "added_date_end",
            "schema": {
              "type": "string",
              "format": "date"
            }
          },
          {
            "description": "Show images with the specified Shutterstock-defined category; specify a category name or ID",
            "in": "query",
            "name": "category",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Specify a hexadecimal color in the format '#4F21EA'; the API groups it into one of 15 color categories and returns images that primarily use that color category",
            "in": "query",
            "name": "color",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Show images with the specified contributor names or IDs, allows multiple",
            "in": "query",
            "name": "contributor",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "description": "(Deprecated; use height_from and height_to instead) Show images with the specified height",
            "in": "query",
            "name": "height",
            "deprecated": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "description": "Show images with the specified height or larger, in pixels",
            "in": "query",
            "name": "height_from",
            "schema": {
              "type": "integer"
            }
          },
          {
            "description": "Show images with the specified height or smaller, in pixels",
            "in": "query",
            "name": "height_to",
            "schema": {
              "type": "integer"
            }
          },
          {
            "description": "Show images of the specified type",
            "in": "query",
            "name": "image_type",
            "schema": {
              "type": "array",
              "items": {
                "enum": [
                  "photo",
                  "illustration",
                  "vector"
                ],
                "type": "string"
              }
            }
          },
          {
            "description": "Set query and result language (uses Accept-Language header if not set)",
            "in": "query",
            "name": "language",
            "schema": {
              "type": "string",
              "enum": [
                "cs",
                "da",
                "de",
                "en",
                "es",
                "fi",
                "fr",
                "hu",
                "it",
                "ja",
                "ko",
                "nb",
                "nl",
                "pl",
                "pt",
                "ru",
                "sv",
                "th",
                "tr",
                "zh"
              ]
            }
          },
          {
            "description": "Show only images with the specified license",
            "in": "query",
            "name": "license",
            "schema": {
              "type": "array",
              "items": {
                "default": "commercial",
                "enum": [
                  "commercial",
                  "editorial",
                  "enhanced",
                  "sensitive",
                  "NOT enhanced",
                  "NOT sensitive"
                ],
                "type": "string"
              }
            }
          },
          {
            "description": "Show image results with the specified model IDs",
            "in": "query",
            "name": "model",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "description": "Show image results with horizontal or vertical orientation",
            "in": "query",
            "name": "orientation",
            "schema": {
              "type": "string",
              "enum": [
                "horizontal",
                "vertical"
              ]
            }
          },
          {
            "description": "Page number",
            "in": "query",
            "name": "page",
            "schema": {
              "type": "integer",
              "minimum": 1,
              "default": 1
            }
          },
          {
            "description": "Number of results per page, defaults to 20",
            "in": "query",
            "name": "per_page",
            "schema": {
              "type": "integer",
              "minimum": 0,
              "maximum": 500,
              "default": 20
            }
          },
          {
            "description": "Show images of people with a signed model release",
            "in": "query",
            "name": "people_model_released",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "description": "Show images that feature people of the specified age category",
            "in": "query",
            "name": "people_age",
            "schema": {
              "type": "string",
              "enum": [
                "infants",
                "children",
                "teenagers",
                "20s",
                "30s",
                "40s",
                "50s",
                "60s",
                "older"
              ]
            }
          },
          {
            "description": "Show images with people of the specified ethnicity",
            "in": "query",
            "name": "people_ethnicity",
            "schema": {
              "type": "string",
              "enum": [
                "african",
                "african_american",
                "black",
                "brazilian",
                "chinese",
                "caucasian",
                "east_asian",
                "hispanic",
                "japanese",
                "middle_eastern",
                "native_american",
                "pacific_islander",
                "south_asian",
                "southeast_asian",
                "other"
              ]
            }
          },
          {
            "description": "Show images with people of the specified gender",
            "in": "query",
            "name": "people_gender",
            "schema": {
              "type": "string",
              "enum": [
                "male",
                "female",
                "both"
              ]
            }
          },
          {
            "description": "Show images with the specified number of people",
            "in": "query",
            "name": "people_number",
            "schema": {
              "type": "integer",
              "minimum": 0,
              "maximum": 4
            }
          },
          {
            "description": "One or more search terms separated by spaces; you can use NOT to filter out images that match a term",
            "in": "query",
            "name": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Enable or disable safe search",
            "in": "query",
            "name": "safe",
            "schema": {
              "type": "boolean",
              "default": true
            }
          },
          {
            "description": "Sort by",
            "in": "query",
            "name": "sort",
            "schema": {
              "type": "string",
              "enum": [
                "newest",
                "popular",
                "relevance",
                "random"
              ],
              "default": "popular"
            }
          },
          {
            "description": "Spellcheck the search query and return results on suggested spellings",
            "in": "query",
            "name": "spellcheck_query",
            "schema": {
              "type": "boolean",
              "default": true
            }
          },
          {
            "description": "Amount of detail to render in the response",
            "in": "query",
            "name": "view",
            "schema": {
              "type": "string",
              "enum": [
                "minimal",
                "full"
              ],
              "default": "minimal"
            }
          },
          {
            "description": "(Deprecated; use width_from and width_to instead) Show images with the specified width",
            "in": "query",
            "name": "width",
            "deprecated": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "description": "Show images with the specified width or larger, in pixels",
            "in": "query",
            "name": "width_from",
            "schema": {
              "type": "integer"
            }
          },
          {
            "description": "Show images with the specified width or smaller, in pixels",
            "in": "query",
            "name": "width_to",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ImageSearchResults"
                },
                "examples": {
                  "response": {
                    "value": {
                      "page": 1,
                      "per_page": 1,
                      "total_count": 193097419,
                      "search_id": "p5S6QwRikdFJTHXwsoiqTg",
                      "data": [
                        {
                          "id": "1120280123",
                          "aspect": 1.6667,
                          "assets": {
                            "preview": {
                              "height": 269,
                              "url": "https://image.shutterstock.com/display_pic_with_logo/3673637/1120280123/stock-vector-minimal-geometric-background-dynamic-shapes-composition-eps-vector-1120280123.jpg",
                              "width": 450
                            },
                            "small_thumb": {
                              "height": 60,
                              "url": "https://thumb10.shutterstock.com/thumb_small/3673637/1120280123/stock-vector-minimal-geometric-background-dynamic-shapes-composition-eps-vector-1120280123.jpg",
                              "width": 100
                            },
                            "large_thumb": {
                              "height": 90,
                              "url": "https://thumb10.shutterstock.com/thumb_large/3673637/1120280123/stock-vector-minimal-geometric-background-dynamic-shapes-composition-eps-vector-1120280123.jpg",
                              "width": 150
                            },
                            "huge_thumb": {
                              "height": 260,
                              "url": "https://image.shutterstock.com/image-vector/minimal-geometric-background-dynamic-shapes-260nw-1120280123.jpg",
                              "width": 435
                            }
                          },
                          "contributor": {
                            "id": "3673637"
                          },
                          "description": "Minimal geometric background. Dynamic shapes composition. Eps10 vector.",
                          "image_type": "vector",
                          "media_type": "image",
                          "url": "https://www.shutterstock.com/image-photo/1120280123"
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "basic": []
          },
          {
            "customer_accessCode": []
          }
        ],
        "tags": [
          "images"
        ],
        "x-code-samples": [
          {
            "lang": "shell",
            "source": "curl -X GET https://api.shutterstock.com/v2/images/search \\\r\n-H \"Accept: application/json\" \\\r\n-H \"Authorization: Bearer $SHUTTERSTOCK_API_TOKEN\" \\\r\n-G \\\r\n--data-urlencode \"query=Vienna\" \\\r\n--data-urlencode \"orientation=horizontal\" \\\r\n--data-urlencode \"sort=popular\"\r\n"
          },
          {
            "lang": "javascript--nodejs",
            "source": "const sstk = require('shutterstock-api');\r\n\r\nsstk.setAccessToken(process.env.SHUTTERSTOCK_API_TOKEN);\r\n\r\nconst api = new sstk.ImagesApi();\r\n\r\nconst queryParams = {\r\n  query: 'New York',\r\n  sort: 'popular',\r\n  orientation: 'horizontal'\r\n};\r\n\r\napi.searchImages(queryParams)\r\n.then(function({data}) {\r\n  console.log(data);\r\n})\r\n.catch(function(error) {\r\n  console.error(error);\r\n});\r\n"
          },
          {
            "lang": "php",
            "source": "$queryFields = [\r\n  \"query\" => \"New York\",\r\n  \"sort\" => \"popular\",\r\n  \"orientation\" => \"horizontal\"\r\n];\r\n\r\n$options = [\r\n  CURLOPT_URL => \"https://api.shutterstock.com/v2/images/search?\" . http_build_query($queryFields),\r\n  CURLOPT_USERAGENT => \"php/curl\",\r\n  CURLOPT_HTTPHEADER => [\r\n    \"Authorization: Bearer $SHUTTERSTOCK_API_TOKEN\"\r\n  ],\r\n  CURLOPT_RETURNTRANSFER => 1\r\n];\r\n\r\n$handle = curl_init();\r\ncurl_setopt_array($handle, $options);\r\n$response = curl_exec($handle);\r\ncurl_close($handle);\r\n\r\n$decodedResponse = json_decode($response);\r\nprint_r($decodedResponse);\r\n"
          }
        ],
        "operationId": "searchImages",
        "summary": "Search for images",
        "description": "This endpoint searches for images. If you specify more than one search parameter, the API uses an AND condition. Array parameters can be specified multiple times; in this case, the API uses an AND or an OR condition with those values, depending on the parameter. You can also filter search terms out in the `query` parameter by prefixing the term with NOT."
      }
    },
    "/v2/images/{id}": {
      "get": {
        "parameters": [
          {
            "description": "Image ID",
            "in": "path",
            "name": "id",
            "required": true,
            "example": "465011609",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Amount of detail to render in the response",
            "in": "query",
            "name": "view",
            "schema": {
              "type": "string",
              "enum": [
                "minimal",
                "full"
              ],
              "default": "full"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Image"
                },
                "examples": {
                  "response": {
                    "value": {
                      "id": "465011609",
                      "added_date": "2016-08-07",
                      "aspect": 0.8501,
                      "assets": {
                        "huge_jpg": {
                          "display_name": "Huge",
                          "dpi": 300,
                          "file_size": 6980608,
                          "format": "jpg",
                          "height": 4902,
                          "is_licensable": true,
                          "width": 4167
                        },
                        "vector_eps": {
                          "display_name": "Vector",
                          "format": "eps",
                          "is_licensable": true
                        },
                        "preview": {
                          "height": 450,
                          "url": "https://image.shutterstock.com/display_pic_with_logo/1384888/465011609/stock-vector-happy-mid-autumn-festival-background-with-golden-glitter-moon-and-hand-drawn-moon-rabbits-vector-465011609.jpg",
                          "width": 382
                        },
                        "small_thumb": {
                          "height": 100,
                          "url": "https://thumb7.shutterstock.com/thumb_small/1384888/465011609/stock-vector-happy-mid-autumn-festival-background-with-golden-glitter-moon-and-hand-drawn-moon-rabbits-vector-465011609.jpg",
                          "width": 85
                        },
                        "large_thumb": {
                          "height": 150,
                          "url": "https://thumb7.shutterstock.com/thumb_large/1384888/465011609/stock-vector-happy-mid-autumn-festival-background-with-golden-glitter-moon-and-hand-drawn-moon-rabbits-vector-465011609.jpg",
                          "width": 128
                        },
                        "huge_thumb": {
                          "height": 260,
                          "url": "https://image.shutterstock.com/image-vector/happy-mid-autumn-festival-background-260nw-465011609.jpg",
                          "width": 221
                        }
                      },
                      "categories": [
                        {
                          "id": "8",
                          "name": "Holidays"
                        },
                        {
                          "id": "11",
                          "name": "The Arts"
                        }
                      ],
                      "contributor": {
                        "id": "1384888"
                      },
                      "description": "Happy Mid Autumn Festival background with golden glitter Moon and hand drawn Moon Rabbits. Vector illustration",
                      "image_type": "vector",
                      "is_adult": false,
                      "is_illustration": true,
                      "has_property_release": true,
                      "keywords": [
                        "abstract",
                        "art",
                        "artistic",
                        "asian",
                        "autumn",
                        "background",
                        "bunny",
                        "calligraphy",
                        "celebration",
                        "china"
                      ],
                      "media_type": "image",
                      "url": "https://www.shutterstock.com/image-photo/465011609"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "basic": []
          },
          {
            "customer_accessCode": []
          }
        ],
        "tags": [
          "images"
        ],
        "operationId": "getImage",
        "summary": "Get details about images",
        "description": "This endpoint shows information about an image, including a URL to a preview image and the sizes that it is available in."
      }
    },
    "/v2/images/categories": {
      "get": {
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CategoryDataList"
                },
                "examples": {
                  "response": {
                    "value": {
                      "data": [
                        {
                          "id": "15",
                          "name": "Science"
                        },
                        {
                          "id": "17",
                          "name": "Signs/Symbols"
                        },
                        {
                          "id": "18",
                          "name": "Sports/Recreation"
                        },
                        {
                          "id": "16",
                          "name": "Technology"
                        },
                        {
                          "id": "0",
                          "name": "Transportation"
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "basic": []
          },
          {
            "customer_accessCode": []
          }
        ],
        "tags": [
          "images"
        ],
        "operationId": "getImageCategories",
        "summary": "List image categories",
        "description": "This endpoint lists the categories (Shutterstock-assigned genres) that images can belong to."
      }
    },
    "/v2/images/{id}/similar": {
      "get": {
        "parameters": [
          {
            "description": "Image ID",
            "in": "path",
            "name": "id",
            "required": true,
            "example": "465011609",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Page number",
            "in": "query",
            "name": "page",
            "schema": {
              "type": "integer",
              "minimum": 1,
              "default": 1
            }
          },
          {
            "description": "Number of results per page, defaults to 20",
            "in": "query",
            "name": "per_page",
            "schema": {
              "type": "integer",
              "minimum": 1,
              "maximum": 500,
              "default": 20
            }
          },
          {
            "description": "Amount of detail to render in the response",
            "in": "query",
            "name": "view",
            "schema": {
              "type": "string",
              "enum": [
                "minimal",
                "full"
              ],
              "default": "minimal"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ImageSearchResults"
                },
                "examples": {
                  "response": {
                    "value": {
                      "page": 1,
                      "per_page": 1,
                      "total_count": 200,
                      "search_id": "",
                      "data": [
                        {
                          "id": "224429596",
                          "aspect": 1,
                          "assets": {
                            "preview": {
                              "height": 450,
                              "url": "https://image.shutterstock.com/display_pic_with_logo/302287/224429596/stock-vector-happy-halloween-vector-224429596.jpg",
                              "width": 450
                            },
                            "small_thumb": {
                              "height": 100,
                              "url": "https://thumb1.shutterstock.com/thumb_small/302287/224429596/stock-vector-happy-halloween-vector-224429596.jpg",
                              "width": 100
                            },
                            "large_thumb": {
                              "height": 150,
                              "url": "https://thumb1.shutterstock.com/thumb_large/302287/224429596/stock-vector-happy-halloween-vector-224429596.jpg",
                              "width": 150
                            },
                            "huge_thumb": {
                              "height": 260,
                              "url": "https://image.shutterstock.com/image-vector/happy-halloween-vector-260nw-224429596.jpg",
                              "width": 260
                            }
                          },
                          "contributor": {
                            "id": "302287"
                          },
                          "description": "Happy Halloween - vector",
                          "image_type": "vector",
                          "media_type": "image"
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "basic": []
          },
          {
            "customer_accessCode": []
          }
        ],
        "tags": [
          "images"
        ],
        "operationId": "getSimilarImages",
        "summary": "List similar images",
        "description": "This endpoint returns images that are visually similar to an image that you specify."
      }
    },
    "/v2/images/licenses": {
      "post": {
        "parameters": [
          {
            "description": "Subscription ID to use to license the image",
            "in": "query",
            "name": "subscription_id",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Image format, defaults to jpg",
            "in": "query",
            "name": "format",
            "schema": {
              "type": "string",
              "enum": [
                "eps",
                "jpg"
              ],
              "default": "jpg"
            }
          },
          {
            "description": "Image size",
            "in": "query",
            "name": "size",
            "schema": {
              "type": "string",
              "enum": [
                "small",
                "medium",
                "huge",
                "vector"
              ],
              "default": "huge"
            }
          },
          {
            "description": "Search ID that was provided in the results of an image search",
            "in": "query",
            "name": "search_id",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LicenseImageResultDataList"
                },
                "examples": {
                  "response": {
                    "value": {
                      "data": [
                        {
                          "image_id": "547233985",
                          "download": {
                            "url": "https://download.shutterstock.com/gatekeeper/[random-characters]/shutterstock_547233985.jpg"
                          },
                          "allotment_charge": 1
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "customer_accessCode": [
              "licenses.create",
              "purchases.view"
            ]
          }
        ],
        "x-code-samples": [
          {
            "lang": "shell",
            "source": "DATA='{\r\n  \"images\": [\r\n    {\r\n      \"image_id\": \"59656357\"\r\n      \"format\": \"jpg\"\r\n    },\r\n    {\r\n      \"image_id\": \"1079756147\"\r\n      \"format\": \"jpg\",\r\n    }\r\n    ]\r\n  }'\r\n\r\ncurl -X POST 'https://api.shutterstock.com/v2/images/licenses?subscription_id='$SUBSCRIPTION_ID \\\r\n-H \"Authorization: Bearer $SHUTTERSTOCK_API_TOKEN\" \\\r\n-H 'Content-Type: application/json' \\\r\n-d \"$DATA\"\r\n"
          },
          {
            "lang": "javascript--nodejs",
            "source": "const sstk = require('shutterstock-api');\r\n\r\nsstk.setAccessToken(process.env.SHUTTERSTOCK_API_TOKEN);\r\n\r\nconst api = new sstk.ImagesApi();\r\n\r\nconst body = {\r\n  images: [\r\n    {\r\n      image_id: \"419235589\",\r\n      format: \"jpg\"\r\n    },\r\n    {\r\n      image_id: \"1079756147\",\r\n      format: \"jpg\",\r\n    }\r\n  ]\r\n};\r\n\r\nconst queryParams = {\r\n  subscription_id: process.env.SHUTTERSTOCK_SUBSCRIPTION_ID,\r\n  format: 'jpg',\r\n  size: 'huge'\r\n};\r\n\r\napi.licenseImages(body, queryParams)\r\n.then(function({data}) {\r\n  console.log(data);\r\n})\r\n.catch(function(error) {\r\n  console.error(error);\r\n});\r\n"
          },
          {
            "lang": "php",
            "source": "$body = [\r\n  \"images\" => [\r\n    [\r\n      \"image_id\" => \"539753938\",\r\n      \"format\" => \"jpg\"\r\n    ],\r\n    [\r\n      \"image_id\" => \"558282247\",\r\n      \"format\" => \"jpg\"\r\n    ]\r\n  ]\r\n];\r\n$encodedBody = json_encode($body);\r\n\r\n$options = [\r\n  CURLOPT_URL => \"https://api.shutterstock.com/v2/images/licenses?subscription_id=$SUBSCRIPTION_ID\",\r\n  CURLOPT_CUSTOMREQUEST => \"POST\",\r\n  CURLOPT_POSTFIELDS => $encodedBody,\r\n  CURLOPT_USERAGENT => \"php/curl\",\r\n  CURLOPT_HTTPHEADER => [\r\n    \"Authorization: Bearer $SHUTTERSTOCK_API_TOKEN\",\r\n    \"Content-Type: application/json\"\r\n  ],\r\n  CURLOPT_RETURNTRANSFER => 1\r\n];\r\n\r\n$handle = curl_init();\r\ncurl_setopt_array($handle, $options);\r\n$response = curl_exec($handle);\r\ncurl_close($handle);\r\n\r\n$decodedResponse = json_decode($response);\r\nprint_r($decodedResponse);\r\n"
          }
        ],
        "tags": [
          "images"
        ],
        "operationId": "licenseImages",
        "summary": "License images",
        "description": "This endpoint gets licenses for one or more images. You must specify the image IDs in the body parameter and other details like the format, size, and subscription ID either in the query parameter or with each image ID in the body parameter. Values in the body parameter override values in the query parameters.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LicenseImageRequest"
              },
              "examples": {
                "default": {
                  "value": {
                    "images": [
                      {
                        "image_id": "59656357",
                        "format": "jpg",
                        "metadata": {
                          "purchase_order": "123",
                          "job": "456",
                          "client": "Smith Co.",
                          "other": ""
                        }
                      },
                      {
                        "image_id": "75359656",
                        "editorial_acknowledgement": true,
                        "format": "jpg",
                        "metadata": {
                          "purchase_order": "321",
                          "job": "654",
                          "client": "Jones Co.",
                          "other": ""
                        }
                      }
                    ]
                  }
                }
              }
            }
          },
          "description": "List of images to request licenses for and information about each license transaction; these values override the defaults in the query parameters",
          "required": true
        }
      },
      "get": {
        "parameters": [
          {
            "description": "Show licenses for the specified image ID",
            "in": "query",
            "name": "image_id",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Show images that are available with the specified license, such as `standard` or `enhanced`; prepending a `-` sign excludes results from that license",
            "in": "query",
            "name": "license",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Page number",
            "in": "query",
            "name": "page",
            "schema": {
              "type": "integer",
              "minimum": 1,
              "default": 1
            }
          },
          {
            "description": "Number of results per page, defaults to 20",
            "in": "query",
            "name": "per_page",
            "schema": {
              "type": "integer",
              "minimum": 0,
              "maximum": 200,
              "default": 20
            }
          },
          {
            "description": "Sort order",
            "in": "query",
            "name": "sort",
            "schema": {
              "type": "string",
              "enum": [
                "newest",
                "oldest"
              ],
              "default": "newest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DownloadHistoryDataList"
                },
                "examples": {
                  "response": {
                    "value": {
                      "data": [
                        {
                          "id": "i1188641320",
                          "user": {
                            "username": "userone"
                          },
                          "license": "standard",
                          "subscription_id": "s18382630",
                          "download_time": "2016-10-03T15:58:18-04:00",
                          "image": {
                            "id": "114350371",
                            "format": {
                              "size": "huge"
                            }
                          }
                        },
                        {
                          "id": "i1188641335",
                          "user": {
                            "username": "userone"
                          },
                          "license": "standard",
                          "subscription_id": "s18382630",
                          "download_time": "2016-10-03T16:01:12-04:00",
                          "image": {
                            "id": "135658703",
                            "format": {
                              "size": "medium"
                            }
                          }
                        },
                        {
                          "id": "i1188641341",
                          "user": {
                            "username": "userone"
                          },
                          "license": "standard",
                          "subscription_id": "s18382630",
                          "download_time": "2016-10-03T16:01:18-04:00",
                          "image": {
                            "id": "107771801",
                            "format": {
                              "size": "vector"
                            }
                          }
                        }
                      ],
                      "page": 1,
                      "per_page": 3
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "customer_accessCode": [
              "licenses.view"
            ]
          }
        ],
        "tags": [
          "images"
        ],
        "operationId": "getImageLicenseList",
        "summary": "List image licenses",
        "description": "This endpoint lists existing licenses. You can filter the results according to the type of license or the image ID."
      }
    },
    "/v2/images/licenses/{id}/downloads": {
      "post": {
        "parameters": [
          {
            "description": "License ID",
            "in": "path",
            "name": "id",
            "required": true,
            "example": "i1188641347",
            "schema": {
              "type": "string"
            }
          }
        ],
        "x-code-samples": [
          {
            "lang": "shell",
            "source": "DATA='{\r\n  \"size\": \"huge\"\r\n}'\r\n\r\ncurl -X POST https://api.shutterstock.com/v2/images/licenses/i1188641347/downloads \\\r\n-d \"$DATA\" \\\r\n-H \"Content-Type: application/json\" \\\r\n-H \"Accept: application/json\" \\\r\n-H \"Authorization: Bearer $SHUTTERSTOCK_API_TOKEN\""
          },
          {
            "lang": "javascript--nodejs",
            "source": "const sstk = require('shutterstock-api');\r\n\r\nsstk.setAccessToken(process.env.SHUTTERSTOCK_API_TOKEN);\r\n\r\nconst api = new sstk.ImagesApi();\r\n\r\nconst licenseId = ''; // license ID, not image ID\r\n\r\nconst body = {\r\n  \"size\": \"huge\"\r\n};\r\n\r\napi.downloadImage(licenseId, body)\r\n.then(function(data) {\r\n  console.log(data);\r\n})\r\n.catch(function(error) {\r\n  console.error(error);\r\n});\r\n"
          },
          {
            "lang": "php",
            "source": "$body = [\r\n  \"size\" => \"huge\"\r\n];\r\n$encodedBody = json_encode($body);\r\n\r\n$options = [\r\n  CURLOPT_URL => \"https://api.shutterstock.com/v2/images/licenses/i1188641347/downloads\",\r\n  CURLOPT_CUSTOMREQUEST => \"POST\",\r\n  CURLOPT_POSTFIELDS => $encodedBody,\r\n  CURLOPT_USERAGENT => \"php/curl\",\r\n  CURLOPT_HTTPHEADER => [\r\n    \"Authorization: Bearer $SHUTTERSTOCK_API_TOKEN\",\r\n    \"Content-Type: application/json\"\r\n  ],\r\n  CURLOPT_RETURNTRANSFER => 1\r\n];\r\n\r\n$handle = curl_init();\r\ncurl_setopt_array($handle, $options);\r\n$response = curl_exec($handle);\r\ncurl_close($handle);\r\n\r\n$decodedResponse = json_decode($response);\r\nprint_r($decodedResponse);"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Url"
                },
                "examples": {
                  "response": {
                    "value": {
                      "url": "https://download.qa.shutterstock.com/gatekeeper/LzEyMy9odWdlLmpwZyIsIm0iOjEsvdjNsbFNWbVNEQ2FhcHV1VlhhSU9VeUpVIl0/shutterstock_60447496.jpg'"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "customer_accessCode": [
              "licenses.view"
            ]
          }
        ],
        "tags": [
          "images"
        ],
        "operationId": "downloadImage",
        "summary": "Download images",
        "description": "This endpoint redownloads images that you have already received a license for.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RedownloadImage"
              },
              "examples": {
                "default": {
                  "value": {
                    "size": "huge"
                  }
                }
              }
            }
          },
          "description": "Information about the images to redownload",
          "required": true
        }
      }
    },
    "/v2/images": {
      "get": {
        "parameters": [
          {
            "description": "One or more image IDs",
            "in": "query",
            "name": "id",
            "required": true,
            "example": [
              "1110335168",
              "465011609"
            ],
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "description": "Amount of detail to render in the response",
            "in": "query",
            "name": "view",
            "example": "minimal",
            "schema": {
              "type": "string",
              "enum": [
                "minimal",
                "full"
              ],
              "default": "minimal"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ImageDataList"
                },
                "examples": {
                  "response": {
                    "value": {
                      "data": [
                        {
                          "id": "465011609",
                          "aspect": 0.8501,
                          "assets": {
                            "preview": {
                              "height": 450,
                              "url": "https://image.shutterstock.com/display_pic_with_logo/1384888/465011609/stock-vector-happy-mid-autumn-festival-background-with-golden-glitter-moon-and-hand-drawn-moon-rabbits-vector-465011609.jpg",
                              "width": 382
                            },
                            "small_thumb": {
                              "height": 100,
                              "url": "https://thumb7.shutterstock.com/thumb_small/1384888/465011609/stock-vector-happy-mid-autumn-festival-background-with-golden-glitter-moon-and-hand-drawn-moon-rabbits-vector-465011609.jpg",
                              "width": 85
                            },
                            "large_thumb": {
                              "height": 150,
                              "url": "https://thumb7.shutterstock.com/thumb_large/1384888/465011609/stock-vector-happy-mid-autumn-festival-background-with-golden-glitter-moon-and-hand-drawn-moon-rabbits-vector-465011609.jpg",
                              "width": 128
                            },
                            "huge_thumb": {
                              "height": 260,
                              "url": "https://image.shutterstock.com/image-vector/happy-mid-autumn-festival-background-260nw-465011609.jpg",
                              "width": 221
                            }
                          },
                          "contributor": {
                            "id": "1384888"
                          },
                          "description": "Happy Mid Autumn Festival background with golden glitter Moon and hand drawn Moon Rabbits. Vector illustration",
                          "image_type": "vector",
                          "media_type": "image",
                          "url": "https://www.shutterstock.com/image-photo/465011609"
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "basic": []
          },
          {
            "customer_accessCode": []
          }
        ],
        "tags": [
          "images"
        ],
        "operationId": "getImageList",
        "summary": "List images",
        "description": "This endpoint lists information about one or more images, including the available sizes. Only accounts with subscriptions can use it."
      },
      "post": {
        "responses": {
          "201": {
            "description": "201 Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ImageCreateResponse"
                },
                "examples": {
                  "response": {
                    "value": {
                      "id": "Udb14e1c3540bdbf82b4b3fe12d3a44f2"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "413": {
            "description": "Payload Too Large"
          }
        },
        "security": [
          {
            "basic": []
          },
          {
            "customer_accessCode": []
          }
        ],
        "tags": [
          "images"
        ],
        "x-code-samples": [
          {
            "lang": "shell",
            "source": "curl -X POST 'https://api.shutterstock.com/v2/images' \\\r\n-H \"Authorization: Bearer $SHUTTERSTOCK_API_TOKEN\" \\\r\n-H 'Content-Type: application/json' \\\r\n-d \"{\\\"base64_image\\\":\\\"`base64 myImage.jpg -w 0`\\\"}\"\r\n"
          },
          {
            "lang": "javascript--nodejs",
            "source": "const sstk = require('shutterstock-api');\r\n\r\nsstk.setAccessToken(process.env.SHUTTERSTOCK_API_TOKEN);\r\n\r\nconst api = new sstk.ImagesApi();\r\n\r\nconst imageFile = fs.readFileSync('./myImage.jpg');\r\nconst base64File = Buffer.from(imageFile).toString('base64');\r\n\r\nconst body = new sstk.ImageCreateRequest(base64File);\r\n\r\nconst queryParams = {\r\n  page: 1,\r\n  per_page: 20,\r\n  view: 'minimal'\r\n};\r\n\r\napi.uploadEphemeralImage(body)\r\n.then(function(data) {\r\n  console.log(data.id);\r\n  api.getSimilarImages(data.id, queryParams)\r\n  .then(function(similarImageData) {\r\n    console.log(similarImageData)\r\n  })\r\n})\r\n.catch(function(error) {\r\n  console.error(error);\r\n});\r\n"
          },
          {
            "lang": "php",
            "source": "$imageData = file_get_contents(\"myImage.jpg\");\r\n$encodedImageData = base64_encode($imageData);\r\n\r\n$body = [\r\n  \"base64_image\" => $encodedImageData\r\n];\r\n$encodedBody = json_encode($body);\r\n\r\n$options = [\r\n  CURLOPT_URL => \"https://api.shutterstock.com/v2/images\",\r\n  CURLOPT_CUSTOMREQUEST => \"POST\",\r\n  CURLOPT_POSTFIELDS => $encodedBody,\r\n  CURLOPT_USERAGENT => \"php/curl\",\r\n  CURLOPT_HTTPHEADER => [\r\n    \"Authorization: Bearer $SHUTTERSTOCK_API_TOKEN\",\r\n    \"Content-Type: application/json\"\r\n  ],\r\n  CURLOPT_RETURNTRANSFER => 1\r\n];\r\n\r\n$handle = curl_init();\r\ncurl_setopt_array($handle, $options);\r\n$response = curl_exec($handle);\r\ncurl_close($handle);\r\n\r\n$decodedResponse = json_decode($response);\r\nprint_r($decodedResponse);\r\n"
          }
        ],
        "operationId": "uploadEphemeralImage",
        "summary": "Upload images",
        "description": "This endpoint uploads an image for reverse image search. The image must be in JPEG or PNG format.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ImageCreateRequest"
              },
              "examples": {
                "default": {
                  "value": {
                    "base64_image": "R0lGODlhgACAAPcAAEwiBLyaLOzNUNmWFNjOrNSuN7x6PPzqeOTMgfKSDMyuTPzwsdi2dHwuBPzbVu"
                  }
                }
              }
            }
          },
          "description": "The image data in JPEG or PNG format",
          "required": true
        }
      }
    },
    "/v2/images/recommendations": {
      "get": {
        "parameters": [
          {
            "description": "Image IDs",
            "in": "query",
            "name": "id",
            "required": true,
            "example": [
              465011609
            ],
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "description": "Maximum number of results returned in the response",
            "in": "query",
            "name": "max_items",
            "schema": {
              "type": "integer",
              "minimum": 1,
              "maximum": 500,
              "default": 20
            }
          },
          {
            "description": "Restrict results to safe images",
            "in": "query",
            "name": "safe",
            "schema": {
              "type": "boolean",
              "default": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RecommendationDataList"
                },
                "examples": {
                  "response": {
                    "value": {
                      "data": [
                        {
                          "id": "106363526"
                        },
                        {
                          "id": "113284498"
                        },
                        {
                          "id": "107390756"
                        },
                        {
                          "id": "99379946"
                        },
                        {
                          "id": "133918412"
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "basic": []
          },
          {
            "customer_accessCode": []
          }
        ],
        "tags": [
          "images"
        ],
        "operationId": "getImageRecommendations",
        "summary": "List recommended images",
        "description": "This endpoint returns images that customers put in the same collection as the specified image IDs."
      }
    },
    "/v2/images/collections": {
      "post": {
        "responses": {
          "200": {
            "description": "No response was specified"
          },
          "201": {
            "description": "Creation successful",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CollectionCreateResponse"
                },
                "examples": {
                  "response": {
                    "value": {
                      "id": "101202664"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "customer_accessCode": [
              "collections.edit"
            ]
          }
        ],
        "x-code-samples": [
          {
            "lang": "shell",
            "source": "DATA='{\r\n  \"name\": \"My collection\"\r\n}'\r\n\r\ncurl -X POST https://api.shutterstock.com/v2/images/collections \\\r\n-d \"$DATA\" \\\r\n-H \"Content-Type: application/json\" \\\r\n-H \"Accept: application/json\" \\\r\n-H \"Authorization: Bearer $SHUTTERSTOCK_API_TOKEN\""
          },
          {
            "lang": "javascript--nodejs",
            "source": "const sstk = require('shutterstock-api');\r\n\r\nsstk.setAccessToken(process.env.SHUTTERSTOCK_API_TOKEN);\r\n\r\nconst imagesApi = new sstk.ImagesApi();\r\n\r\nconst body = {\r\n  \"name\": \"My collection\"\r\n};\r\n\r\nimagesApi.createLightbox(body)\r\n.then(function() {\r\n  console.log(\"Success!\");\r\n})\r\n.catch(function(error) {\r\n  console.error(error);\r\n});\r\n"
          },
          {
            "lang": "php",
            "source": "$body = [\r\n  \"name\" => \"My collection\"\r\n];\r\n$encodedBody = json_encode($body);\r\n\r\n$options = [\r\n  CURLOPT_URL => \"https://api.shutterstock.com/v2/images/collections\",\r\n  CURLOPT_CUSTOMREQUEST => \"POST\",\r\n  CURLOPT_POSTFIELDS => $encodedBody,\r\n  CURLOPT_USERAGENT => \"php/curl\",\r\n  CURLOPT_HTTPHEADER => [\r\n    \"Authorization: Bearer $SHUTTERSTOCK_API_TOKEN\",\r\n    \"Content-Type: application/json\"\r\n  ],\r\n  CURLOPT_RETURNTRANSFER => 1\r\n];\r\n\r\n$handle = curl_init();\r\ncurl_setopt_array($handle, $options);\r\n$response = curl_exec($handle);\r\ncurl_close($handle);\r\n\r\n$decodedResponse = json_decode($response);\r\nprint_r($decodedResponse);"
          }
        ],
        "tags": [
          "images"
        ],
        "operationId": "createLightbox",
        "summary": "Create image collections",
        "description": "This endpoint creates one or more image collections (lightboxes). To add images to the collections, use `POST /images/collections/{id}/items`.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CollectionCreateRequest"
              },
              "examples": {
                "default": {
                  "value": {
                    "name": "My collection"
                  }
                }
              }
            }
          },
          "description": "The names of the new collections",
          "required": true
        }
      },
      "get": {
        "parameters": [
          {
            "description": "Which sharing information to include in the response, such as a URL to the collection",
            "in": "query",
            "name": "embed",
            "example": "share_code",
            "schema": {
              "type": "array",
              "items": {
                "enum": [
                  "share_code",
                  "share_url"
                ],
                "type": "string"
              }
            }
          },
          {
            "description": "Page number",
            "in": "query",
            "name": "page",
            "example": 1,
            "schema": {
              "type": "integer",
              "minimum": 1,
              "default": 1
            }
          },
          {
            "description": "Number of results per page, defaults to 100",
            "in": "query",
            "name": "per_page",
            "example": 2,
            "schema": {
              "type": "integer",
              "minimum": 1,
              "maximum": 150,
              "default": 100
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CollectionDataList"
                },
                "examples": {
                  "response": {
                    "value": {
                      "data": [
                        {
                          "id": "21663574",
                          "name": "Kittens and puppies",
                          "total_item_count": 0,
                          "items_updated_time": "2018-08-02T07:33:24-04:00"
                        },
                        {
                          "id": "21663571",
                          "name": "young couples",
                          "total_item_count": 0,
                          "items_updated_time": "2018-08-02T07:33:22-04:00"
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "customer_accessCode": [
              "collections.view"
            ]
          }
        ],
        "tags": [
          "images"
        ],
        "operationId": "getLightboxList",
        "summary": "List image collections",
        "description": "This endpoint lists your collections of images and their basic attributes."
      }
    },
    "/v2/images/collections/{id}": {
      "get": {
        "parameters": [
          {
            "description": "Collection ID",
            "in": "path",
            "name": "id",
            "required": true,
            "example": "126351027",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Which sharing information to include in the response, such as a URL to the collection",
            "in": "query",
            "name": "embed",
            "schema": {
              "type": "array",
              "items": {
                "enum": [
                  "share_code",
                  "share_url"
                ],
                "type": "string"
              }
            }
          },
          {
            "description": "Code to retrieve a shared collection",
            "in": "query",
            "name": "share_code",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Collection"
                },
                "examples": {
                  "response": {
                    "value": {
                      "id": "336351027",
                      "name": "My collection",
                      "total_item_count": 1,
                      "items_updated_time": "2017-05-17T16:28:39-04:00",
                      "cover_item": {
                        "id": "954500"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "customer_accessCode": [
              "collections.view"
            ]
          }
        ],
        "tags": [
          "images"
        ],
        "operationId": "getLightbox",
        "summary": "Get the details of image collections",
        "description": "This endpoint gets more detailed information about a collection, including its cover image and timestamps for its creation and most recent update. To get the images in collections, use `GET /images/collections/{id}/items`."
      },
      "post": {
        "parameters": [
          {
            "description": "Collection ID",
            "in": "path",
            "name": "id",
            "required": true,
            "example": "126351027",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "No response was specified"
          },
          "204": {
            "description": "Successfully updated collection"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "customer_accessCode": [
              "collections.edit"
            ]
          }
        ],
        "x-code-samples": [
          {
            "lang": "shell",
            "source": "DATA='{\r\n  \"name\": \"My new collection name\"\r\n}'\r\n\r\ncurl -X POST https://api.shutterstock.com/v2/images/collections/126351027 \\\r\n-d \"$DATA\" \\\r\n-H \"Content-Type: application/json\" \\\r\n-H \"Accept: application/json\" \\\r\n-H \"Authorization: Bearer $SHUTTERSTOCK_API_TOKEN\""
          },
          {
            "lang": "javascript--nodejs",
            "source": "const sstk = require('shutterstock-api');\r\n\r\nsstk.setAccessToken(process.env.SHUTTERSTOCK_API_TOKEN);\r\n\r\nconst imagesApi = new sstk.ImagesApi();\r\n\r\nconst collectionId = \"\"; // Collection ID\r\n\r\nconst body = {\r\n  \"name\": \"My new collection name\"\r\n};\r\n\r\nimagesApi.renameLightbox(collectionId, body)\r\n.then(function() {\r\n  console.log(\"Success!\");\r\n})\r\n.catch(function(error) {\r\n  console.error(error);\r\n});\r\n"
          },
          {
            "lang": "php",
            "source": "$body = [\r\n  \"name\" => \"My new collection name\"\r\n];\r\n$encodedBody = json_encode($body);\r\n\r\n$options = [\r\n  CURLOPT_URL => \"https://api.shutterstock.com/v2/images/collections/126351027\",\r\n  CURLOPT_CUSTOMREQUEST => \"POST\",\r\n  CURLOPT_POSTFIELDS => $encodedBody,\r\n  CURLOPT_USERAGENT => \"php/curl\",\r\n  CURLOPT_HTTPHEADER => [\r\n    \"Authorization: Bearer $SHUTTERSTOCK_API_TOKEN\",\r\n    \"Content-Type: application/json\"\r\n  ],\r\n  CURLOPT_RETURNTRANSFER => 1\r\n];\r\n\r\n$handle = curl_init();\r\ncurl_setopt_array($handle, $options);\r\n$response = curl_exec($handle);\r\ncurl_close($handle);\r\n\r\n$decodedResponse = json_decode($response);\r\nprint_r($decodedResponse);"
          }
        ],
        "tags": [
          "images"
        ],
        "operationId": "renameLightbox",
        "summary": "Rename image collections",
        "description": "This endpoint sets a new name for an image collection.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CollectionUpdateRequest"
              },
              "examples": {
                "default": {
                  "value": {
                    "name": "My new collection name"
                  }
                }
              }
            }
          },
          "description": "The new name for the collection",
          "required": true
        }
      },
      "delete": {
        "parameters": [
          {
            "description": "Collection ID",
            "in": "path",
            "name": "id",
            "required": true,
            "example": "136351027",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "No response was specified"
          },
          "204": {
            "description": "Successfully deleted collection"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "customer_accessCode": [
              "collections.edit"
            ]
          }
        ],
        "x-code-samples": [
          {
            "lang": "shell",
            "source": "curl -X DELETE https://api.shutterstock.com/v2/images/collections/136351027 \\\r\n-H \"Accept: application/json\" \\\r\n-H \"Authorization: Bearer $SHUTTERSTOCK_API_TOKEN\""
          },
          {
            "lang": "javascript--nodejs",
            "source": "const sstk = require('shutterstock-api');\r\n\r\nsstk.setAccessToken(process.env.SHUTTERSTOCK_API_TOKEN);\r\n\r\nconst imagesApi = new sstk.ImagesApi();\r\n\r\nconst collectionId = \"\"; // Collection ID\r\n\r\nimagesApi.deleteLightbox(collectionId)\r\n.then(function() {\r\n  console.log(\"Success!\");\r\n})\r\n.catch(function(error) {\r\n  console.error(error);\r\n});"
          },
          {
            "lang": "php",
            "source": "$options = [\r\n  CURLOPT_URL => \"https://api.shutterstock.com/v2/images/collections/136351027\",\r\n  CURLOPT_USERAGENT => \"php/curl\",\r\n  CURLOPT_CUSTOMREQUEST => \"DELETE\",\r\n  CURLOPT_HTTPHEADER => [\r\n    \"Authorization: Bearer $SHUTTERSTOCK_API_TOKEN\"\r\n  ],\r\n  CURLOPT_RETURNTRANSFER => 1\r\n];\r\n\r\n$handle = curl_init();\r\ncurl_setopt_array($handle, $options);\r\n$response = curl_exec($handle);\r\ncurl_close($handle);\r\n\r\n$decodedResponse = json_decode($response);\r\nprint_r($decodedResponse);"
          }
        ],
        "tags": [
          "images"
        ],
        "operationId": "deleteLightbox",
        "summary": "Delete image collections",
        "description": "This endpoint deletes an image collection."
      }
    },
    "/v2/images/collections/{id}/items": {
      "post": {
        "parameters": [
          {
            "description": "Collection ID",
            "in": "path",
            "name": "id",
            "required": true,
            "example": "126351027",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "No response was specified"
          },
          "204": {
            "description": "Successfully added collection items"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "customer_accessCode": [
              "collections.edit"
            ]
          }
        ],
        "x-code-samples": [
          {
            "lang": "shell",
            "source": "DATA='{\r\n  \"items\": [\r\n    {\r\n      \"id\": \"49572945\",\r\n      \"media_type\": \"image\"\r\n    }\r\n  ]\r\n}'\r\n\r\ncurl -X POST https://api.shutterstock.com/v2/images/collections/126351027/items \\\r\n-d \"$DATA\" \\\r\n-H \"Content-Type: application/json\" \\\r\n-H \"Accept: application/json\" \\\r\n-H \"Authorization: Bearer $SHUTTERSTOCK_API_TOKEN\""
          },
          {
            "lang": "javascript--nodejs",
            "source": "const sstk = require('shutterstock-api');\r\n\r\nsstk.setAccessToken(process.env.SHUTTERSTOCK_API_TOKEN);\r\n\r\nconst imagesApi = new sstk.ImagesApi();\r\n\r\nconst collectionId = \"\"; // Collection ID\r\n\r\nconst body = {\r\n  \"items\": [\r\n    {\r\n      \"id\": \"495863218\",\r\n      \"media_type\": \"image\"\r\n    }\r\n  ]\r\n};\r\n\r\nimagesApi.addLightboxItems(collectionId, body)\r\n.then(function() {\r\n  console.log(\"Success!\");\r\n})\r\n.catch(function(error) {\r\n  console.error(error);\r\n});\r\n"
          },
          {
            "lang": "php",
            "source": "$body = [\r\n  \"items\" => [\r\n    [\r\n      \"id\" => \"49572945\",\r\n      \"media_type\" => \"image\"\r\n    ]\r\n  ]\r\n];\r\n$encodedBody = json_encode($body);\r\n\r\n$options = [\r\n  CURLOPT_URL => \"https://api.shutterstock.com/v2/images/collections/126351027/items\",\r\n  CURLOPT_CUSTOMREQUEST => \"POST\",\r\n  CURLOPT_POSTFIELDS => $encodedBody,\r\n  CURLOPT_USERAGENT => \"php/curl\",\r\n  CURLOPT_HTTPHEADER => [\r\n    \"Authorization: Bearer $SHUTTERSTOCK_API_TOKEN\",\r\n    \"Content-Type: application/json\"\r\n  ],\r\n  CURLOPT_RETURNTRANSFER => 1\r\n];\r\n\r\n$handle = curl_init();\r\ncurl_setopt_array($handle, $options);\r\n$response = curl_exec($handle);\r\ncurl_close($handle);\r\n\r\n$decodedResponse = json_decode($response);\r\nprint_r($decodedResponse);"
          }
        ],
        "tags": [
          "images"
        ],
        "operationId": "addLightboxItems",
        "summary": "Add images to collections",
        "description": "This endpoint adds one or more images to a collection by image IDs.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CollectionItemRequest"
              },
              "examples": {
                "default": {
                  "value": {
                    "items": [
                      {
                        "id": "49572945",
                        "media_type": "image"
                      }
                    ]
                  }
                }
              }
            }
          },
          "description": "Array of image IDs to add to the collection",
          "required": true
        }
      },
      "get": {
        "parameters": [
          {
            "description": "Collection ID",
            "in": "path",
            "name": "id",
            "required": true,
            "example": "126351027",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Code to retrieve the contents of a shared collection",
            "in": "query",
            "name": "share_code",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Page number",
            "in": "query",
            "name": "page",
            "schema": {
              "type": "integer",
              "minimum": 1,
              "default": 1
            }
          },
          {
            "description": "Number of results per page, defaults to 100",
            "in": "query",
            "name": "per_page",
            "schema": {
              "type": "integer",
              "minimum": 1,
              "maximum": 150,
              "default": 100
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CollectionItemDataList"
                },
                "examples": {
                  "response": {
                    "value": {
                      "data": [
                        {
                          "id": "38162050",
                          "added_time": "2016-11-25T16:44:25-05:00"
                        },
                        {
                          "id": "38139676",
                          "added_time": "2016-11-25T16:44:22-05:00"
                        },
                        {
                          "id": "787905",
                          "added_time": "2016-11-25T16:44:19-05:00"
                        },
                        {
                          "id": "826197",
                          "added_time": "2016-11-25T16:44:16-05:00"
                        },
                        {
                          "id": "38124508",
                          "added_time": "2016-11-25T16:44:14-05:00"
                        },
                        {
                          "id": "126445388",
                          "added_time": "2016-11-25T16:44:02-05:00"
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "customer_accessCode": [
              "collections.view"
            ]
          }
        ],
        "tags": [
          "images"
        ],
        "operationId": "getLightboxItems",
        "summary": "Get the contents of image collections",
        "description": "This endpoint lists the IDs of images in a collection and the date that each was added."
      },
      "delete": {
        "parameters": [
          {
            "description": "Collection ID",
            "in": "path",
            "name": "id",
            "required": true,
            "example": "126351027",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "One or more image IDs to remove from the collection",
            "in": "query",
            "name": "item_id",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "No response was specified"
          },
          "204": {
            "description": "Successfully removed collection items"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "customer_accessCode": [
              "collections.edit"
            ]
          }
        ],
        "x-code-samples": [
          {
            "lang": "shell",
            "source": "curl -X DELETE https://api.shutterstock.com/v2/images/collections/186726599/items?item_id=495863218 \\\r\n-H \"Accept: application/json\" \\\r\n-H \"Authorization: Bearer $SHUTTERSTOCK_API_TOKEN\""
          },
          {
            "lang": "javascript--nodejs",
            "source": "const sstk = require('shutterstock-api');\r\n\r\nsstk.setAccessToken(process.env.SHUTTERSTOCK_API_TOKEN);\r\n\r\nconst imagesApi = new sstk.ImagesApi();\r\n\r\nconst collectionId = \"\"; // Collection ID\r\n\r\n// Array of images to remove\r\nconst imagesToRemove = {\r\n  item_id: [\r\n    \"\"\r\n  ]\r\n};\r\n\r\nimagesApi.deleteLightboxItems(collectionId, imagesToRemove)\r\n.then(function() {\r\n  console.log(\"Success!\");\r\n})\r\n.catch(function(error) {\r\n  console.error(error);\r\n});"
          },
          {
            "lang": "php",
            "source": "$options = [\r\n  CURLOPT_URL => \"https://api.shutterstock.com/v2/images/collections/126351027/items?item_id=495863218\",\r\n  CURLOPT_USERAGENT => \"php/curl\",\r\n  CURLOPT_CUSTOMREQUEST => \"DELETE\",\r\n  CURLOPT_HTTPHEADER => [\r\n    \"Authorization: Bearer $SHUTTERSTOCK_API_TOKEN\"\r\n  ],\r\n  CURLOPT_RETURNTRANSFER => 1\r\n];\r\n\r\n$handle = curl_init();\r\ncurl_setopt_array($handle, $options);\r\n$response = curl_exec($handle);\r\ncurl_close($handle);\r\n\r\n$decodedResponse = json_decode($response);\r\nprint_r($decodedResponse);"
          }
        ],
        "tags": [
          "images"
        ],
        "operationId": "deleteLightboxItems",
        "summary": "Remove images from collections",
        "description": "This endpoint removes one or more images from a collection."
      }
    },
    "/v2/images/collections/featured": {
      "get": {
        "parameters": [
          {
            "description": "Which sharing information to include in the response, such as a URL to the collection",
            "in": "query",
            "name": "embed",
            "example": "share_url",
            "schema": {
              "type": "string",
              "enum": [
                "share_url"
              ]
            }
          },
          {
            "description": "The types of collections to return",
            "in": "query",
            "name": "type",
            "example": "photo",
            "schema": {
              "type": "array",
              "items": {
                "enum": [
                  "photo",
                  "editorial",
                  "vector"
                ],
                "type": "string"
              }
            }
          },
          {
            "description": "Cover image size, defaults to 1x",
            "in": "query",
            "name": "asset_hint",
            "example": "share_url",
            "schema": {
              "type": "string",
              "enum": [
                "1x",
                "2x"
              ],
              "default": "1x"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FeaturedCollectionDataList"
                },
                "examples": {
                  "response": {
                    "value": {
                      "data": [
                        {
                          "total_item_count": 50,
                          "items_updated_time": "2018-01-30T09:49:22-05:00",
                          "name": "Flower Still Lifes",
                          "id": "73497710",
                          "created_time": "2018-03-06T19:19:02.000Z",
                          "updated_time": "2018-03-06T21:28:06.000Z",
                          "cover_item": {
                            "url": "https://ak.picdn.net/assets/cms/ecedf10e57824db9516560f7523f084b445c1672-shutterstock_104947832.jpg"
                          },
                          "share_url": "http://www.shutterstock.com/collections/73497710-flower-still-lifes.html"
                        },
                        {
                          "total_item_count": 100,
                          "items_updated_time": "2016-05-18T10:49:02-04:00",
                          "name": "Feeling Down",
                          "id": "45566855",
                          "created_time": "2018-03-06T18:54:19.000Z",
                          "updated_time": "2018-03-07T13:58:21.000Z",
                          "cover_item": {
                            "url": "https://ak.picdn.net/assets/cms/3aa67c2b92c7cead79da08b955f409269553fade-shutterstock_343681901.jpg"
                          },
                          "share_url": "http://www.shutterstock.com/collections/45566855-feeling-down.html"
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "customer_accessCode": []
          }
        ],
        "tags": [
          "images"
        ],
        "operationId": "getFeaturedLightboxList",
        "summary": "List featured image collections",
        "description": "This endpoint lists featured collections of specific types and a name and cover image for each collection."
      }
    },
    "/v2/images/collections/featured/{id}": {
      "get": {
        "parameters": [
          {
            "description": "Collection ID",
            "in": "path",
            "name": "id",
            "required": true,
            "example": "136351027",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Which sharing information to include in the response, such as a URL to the collection",
            "in": "query",
            "name": "embed",
            "schema": {
              "type": "string",
              "enum": [
                "share_url"
              ]
            }
          },
          {
            "description": "Cover image size, defaults to 1x",
            "in": "query",
            "name": "asset_hint",
            "schema": {
              "type": "string",
              "enum": [
                "1x",
                "2x"
              ],
              "default": "1x"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FeaturedCollection"
                },
                "examples": {
                  "response": {
                    "value": {
                      "total_item_count": 100,
                      "items_updated_time": "2016-05-18T10:49:02-04:00",
                      "name": "Feeling Down",
                      "id": "136351027",
                      "created_time": "2018-03-06T18:54:19.000Z",
                      "updated_time": "2018-03-07T13:58:21.000Z",
                      "cover_item": {
                        "url": "https://ak.picdn.net/assets/cms/3aa67c2b92c7ceadd79da08b95d5f409269553fade-shutterstock_343681901.jpg"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Featured collection not found"
          }
        },
        "security": [
          {
            "customer_accessCode": []
          }
        ],
        "tags": [
          "images"
        ],
        "operationId": "getFeaturedLightbox",
        "summary": "Get the details of featured image collections",
        "description": "This endpoint gets more detailed information about a featured collection, including its cover image and timestamps for its creation and most recent update. To get the images, use `GET /images/collections/featured/{id}/items`."
      }
    },
    "/v2/images/collections/featured/{id}/items": {
      "get": {
        "parameters": [
          {
            "description": "Collection ID",
            "in": "path",
            "name": "id",
            "required": true,
            "example": "136351027",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Page number",
            "in": "query",
            "name": "page",
            "schema": {
              "type": "integer",
              "minimum": 1,
              "default": 1
            }
          },
          {
            "description": "Number of results per page, defaults to 100",
            "in": "query",
            "name": "per_page",
            "schema": {
              "type": "integer",
              "minimum": 1,
              "maximum": 150,
              "default": 100
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CollectionItemDataList"
                },
                "examples": {
                  "response": {
                    "value": {
                      "data": [
                        {
                          "id": "2931777093",
                          "added_time": "2016-05-18T10:49:02-04:00"
                        },
                        {
                          "id": "4101383321",
                          "added_time": "2016-05-18T10:39:06-04:00"
                        },
                        {
                          "id": "1821077001",
                          "added_time": "2016-05-18T10:31:04-04:00"
                        },
                        {
                          "id": "3451984902",
                          "added_time": "2016-05-18T10:21:54-04:00"
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Featured collection not found"
          }
        },
        "security": [
          {
            "customer_accessCode": []
          }
        ],
        "tags": [
          "images"
        ],
        "operationId": "getFeaturedLightboxItems",
        "summary": "Get the contents of featured image collections",
        "description": "This endpoint lists the IDs of images in a featured collection and the date that each was added."
      }
    },
    "/v2/videos/search": {
      "get": {
        "parameters": [
          {
            "description": "Show videos added on the specified date, in the format YYYY-MM-DD",
            "in": "query",
            "name": "added_date",
            "schema": {
              "type": "string",
              "format": "date"
            }
          },
          {
            "description": "Show videos added on or after the specified date, in the format YYYY-MM-DD",
            "in": "query",
            "name": "added_date_start",
            "schema": {
              "type": "string",
              "format": "date"
            }
          },
          {
            "description": "Show videos added before the specified date, in the format YYYY-MM-DD",
            "in": "query",
            "name": "added_date_end",
            "schema": {
              "type": "string",
              "format": "date"
            }
          },
          {
            "description": "Show videos with the specified aspect ratio",
            "in": "query",
            "name": "aspect_ratio",
            "schema": {
              "type": "string",
              "enum": [
                "4_3",
                "16_9",
                "nonstandard"
              ]
            }
          },
          {
            "description": "Show images with the specified Shutterstock-defined category; specify a category name or ID",
            "in": "query",
            "name": "category",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Show videos with the specified artist names or IDs",
            "in": "query",
            "name": "contributor",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "description": "(Deprecated; use duration_from and duration_to instead) Show videos with the specified duration (seconds)",
            "in": "query",
            "name": "duration",
            "deprecated": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "description": "Show videos with the specified duration or longer (seconds)",
            "in": "query",
            "name": "duration_from",
            "schema": {
              "type": "integer"
            }
          },
          {
            "description": "Show videos with the specified duration or shorter (seconds)",
            "in": "query",
            "name": "duration_to",
            "schema": {
              "type": "integer"
            }
          },
          {
            "description": "(Deprecated; use fps_from and fps_to instead) Show videos with the specified frames per second",
            "in": "query",
            "name": "fps",
            "deprecated": true,
            "schema": {
              "type": "number"
            }
          },
          {
            "description": "Show videos with the specified frames per second or more",
            "in": "query",
            "name": "fps_from",
            "schema": {
              "type": "number"
            }
          },
          {
            "description": "Show videos with the specified frames per second or fewer",
            "in": "query",
            "name": "fps_to",
            "schema": {
              "type": "number"
            }
          },
          {
            "description": "Set query and result language (uses Accept-Language header if not set)",
            "in": "query",
            "name": "language",
            "schema": {
              "type": "string",
              "enum": [
                "cs",
                "da",
                "de",
                "en",
                "es",
                "fi",
                "fr",
                "hu",
                "it",
                "ja",
                "ko",
                "nb",
                "nl",
                "pl",
                "pt",
                "ru",
                "sv",
                "th",
                "tr",
                "zh"
              ]
            }
          },
          {
            "description": "Show only videos with the specified license or licenses",
            "in": "query",
            "name": "license",
            "explode": true,
            "example": [
              "commercial",
              "editorial"
            ],
            "schema": {
              "type": "array",
              "items": {
                "default": "commercial",
                "enum": [
                  "commercial",
                  "editorial"
                ],
                "type": "string"
              }
            }
          },
          {
            "description": "Show videos with each of the specified models",
            "in": "query",
            "name": "model",
            "example": [
              "442583",
              "434750"
            ],
            "explode": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "description": "Page number",
            "in": "query",
            "name": "page",
            "schema": {
              "type": "integer",
              "minimum": 1,
              "default": 1
            }
          },
          {
            "description": "Number of results per page",
            "in": "query",
            "name": "per_page",
            "schema": {
              "type": "integer",
              "minimum": 0,
              "maximum": 500,
              "default": 20
            }
          },
          {
            "description": "Show videos that feature people of the specified age range",
            "in": "query",
            "name": "people_age",
            "schema": {
              "type": "string",
              "enum": [
                "infants",
                "children",
                "teenagers",
                "20s",
                "30s",
                "40s",
                "50s",
                "60s",
                "older"
              ]
            }
          },
          {
            "description": "Show videos with people of the specified ethnicity",
            "in": "query",
            "name": "people_ethnicity",
            "schema": {
              "type": "string",
              "enum": [
                "african",
                "african_american",
                "black",
                "brazilian",
                "chinese",
                "caucasian",
                "east_asian",
                "hispanic",
                "japanese",
                "middle_eastern",
                "native_american",
                "pacific_islander",
                "south_asian",
                "southeast_asian",
                "other"
              ]
            }
          },
          {
            "description": "Show videos with people with the specified gender",
            "in": "query",
            "name": "people_gender",
            "schema": {
              "type": "string",
              "enum": [
                "male",
                "female",
                "both"
              ]
            }
          },
          {
            "description": "Show videos with the specified number of people",
            "in": "query",
            "name": "people_number",
            "schema": {
              "type": "integer",
              "minimum": 0,
              "maximum": 4
            }
          },
          {
            "description": "Show only videos of people with a signed model release",
            "in": "query",
            "name": "people_model_released",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "description": "One or more search terms separated by spaces; you can use NOT to filter out videos that match a term",
            "in": "query",
            "name": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Show videos with the specified resolution",
            "in": "query",
            "name": "resolution",
            "schema": {
              "type": "string",
              "enum": [
                "4k",
                "standard_definition",
                "high_definition"
              ]
            }
          },
          {
            "description": "Enable or disable safe search",
            "in": "query",
            "name": "safe",
            "schema": {
              "type": "boolean",
              "default": true
            }
          },
          {
            "description": "Sort by one of these categories",
            "in": "query",
            "name": "sort",
            "schema": {
              "type": "string",
              "enum": [
                "newest",
                "popular",
                "relevance",
                "random"
              ],
              "default": "popular"
            }
          },
          {
            "description": "Amount of detail to render in the response",
            "in": "query",
            "name": "view",
            "schema": {
              "type": "string",
              "enum": [
                "minimal",
                "full"
              ],
              "default": "minimal"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/VideoSearchResults"
                },
                "examples": {
                  "response": {
                    "value": {
                      "page": 1,
                      "per_page": 1,
                      "total_count": 9488747,
                      "search_id": "4LseqIiX-nIW7_vx8-jhWQ",
                      "data": [
                        {
                          "media_type": "video",
                          "id": "33248488",
                          "description": "The Concept of: Digitalization of Information Flow Moving Through Rack Servers in Data Center. Shot on RED EPIC-W 8K Helium Cinema Camera.",
                          "aspect": 1.778,
                          "duration": 19,
                          "contributor": {
                            "id": "178456"
                          },
                          "aspect_ratio": "16:9",
                          "assets": {
                            "thumb_webm": {
                              "url": "https://ak8.picdn.net/shutterstock/videos/33248488/thumb/stock-footage-the-concept-of-digitalization-of-information-flow-moving-through-rack-servers-in-data-center-shot.webm"
                            },
                            "thumb_mp4": {
                              "url": "https://ak8.picdn.net/shutterstock/videos/33248488/thumb/stock-footage-the-concept-of-digitalization-of-information-flow-moving-through-rack-servers-in-data-center-shot.mp4"
                            },
                            "preview_webm": {
                              "url": "https://ak8.picdn.net/shutterstock/videos/33248488/preview/stock-footage-the-concept-of-digitalization-of-information-flow-moving-through-rack-servers-in-data-center-shot.webm"
                            },
                            "preview_mp4": {
                              "url": "https://ak8.picdn.net/shutterstock/videos/33248488/preview/stock-footage-the-concept-of-digitalization-of-information-flow-moving-through-rack-servers-in-data-center-shot.mp4"
                            },
                            "thumb_jpg": {
                              "url": "https://ak8.picdn.net/shutterstock/videos/33248488/thumb/12.jpg"
                            },
                            "preview_jpg": {
                              "url": "https://ak8.picdn.net/shutterstock/videos/33248488/thumb/12.jpg"
                            }
                          },
                          "url": "https://www.shutterstock.com/video/clip-33248488"
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not found"
          }
        },
        "security": [
          {
            "basic": []
          },
          {
            "customer_accessCode": []
          }
        ],
        "tags": [
          "videos"
        ],
        "x-code-samples": [
          {
            "lang": "shell",
            "source": "curl -X GET \"https://api.shutterstock.com/v2/videos/search\" \\\r\n--header \"Authorization: Bearer $SHUTTERSTOCK_API_TOKEN\" \\\r\n-G \\\r\n--data-urlencode \"query=hot air balloon\" \\\r\n--data-urlencode \"duration_from=30\" \\\r\n--data-urlencode \"sort=popular\"\r\n"
          },
          {
            "lang": "javascript--nodejs",
            "source": "const sstk = require('shutterstock-api');\r\n\r\nsstk.setAccessToken(process.env.SHUTTERSTOCK_API_TOKEN);\r\n\r\nconst api = new sstk.VideosApi();\r\n\r\nconst queryParams = {\r\n  query: 'hot air balloon',\r\n  duration_from: 30,\r\n  sort: 'popular'\r\n};\r\n\r\napi.searchVideos(queryParams).then(function({data}) {\r\n  console.log(data);\r\n})\r\n.catch(function(error) {\r\n  console.error(error);\r\n});\r\n"
          },
          {
            "lang": "php",
            "source": "$queryFields = [\r\n  \"query\" => \"hot air balloon\",\r\n  \"duration_from\" => 30,\r\n  \"sort\" => \"popular\"\r\n];\r\n\r\n$options = [\r\n  CURLOPT_URL => \"https://api.shutterstock.com/v2/videos/search?\" . http_build_query($queryFields),\r\n  CURLOPT_USERAGENT => \"php/curl\",\r\n  CURLOPT_HTTPHEADER => [\r\n    \"Authorization: Bearer $SHUTTERSTOCK_API_TOKEN\"\r\n  ],\r\n  CURLOPT_RETURNTRANSFER => 1\r\n];\r\n\r\n$handle = curl_init();\r\ncurl_setopt_array($handle, $options);\r\n$response = curl_exec($handle);\r\ncurl_close($handle);\r\n\r\n$decodedResponse = json_decode($response);\r\nprint_r($decodedResponse);\r\n"
          }
        ],
        "operationId": "searchVideos",
        "summary": "Search for videos",
        "description": "This endpoint searches for videos. If you specify more than one search parameter, the API uses an AND condition. Array parameters can be specified multiple times; in this case, the API uses an AND or an OR condition with those values, depending on the parameter. You can also filter search terms out in the `query` parameter by prefixing the term with NOT."
      }
    },
    "/v2/videos": {
      "get": {
        "parameters": [
          {
            "description": "One or more video IDs",
            "in": "query",
            "name": "id",
            "required": true,
            "example": [
              "639703",
              "993721"
            ],
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "description": "Amount of detail to render in the response",
            "in": "query",
            "name": "view",
            "schema": {
              "type": "string",
              "enum": [
                "minimal",
                "full"
              ],
              "default": "minimal"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/VideoDataList"
                },
                "examples": {
                  "response": {
                    "value": {
                      "data": [
                        {
                          "media_type": "video",
                          "id": "639703",
                          "description": "A family of African Forest Elephants play in the mud in the jungle of the Congo River basin.",
                          "aspect": 1.481,
                          "duration": 11,
                          "contributor": {
                            "id": "335419"
                          },
                          "aspect_ratio": "3:2",
                          "assets": {
                            "thumb_webm": {
                              "url": "https://ak3.picdn.net/shutterstock/videos/639703/thumb/stock-footage-a-family-of-african-forest-elephants-play-in-the-mud-in-the-jungle-of-the-congo-river-basin.webm"
                            },
                            "thumb_mp4": {
                              "url": "https://ak3.picdn.net/shutterstock/videos/639703/thumb/stock-footage-a-family-of-african-forest-elephants-play-in-the-mud-in-the-jungle-of-the-congo-river-basin.mp4"
                            },
                            "preview_webm": {
                              "url": "https://ak3.picdn.net/shutterstock/videos/639703/preview/stock-footage-a-family-of-african-forest-elephants-play-in-the-mud-in-the-jungle-of-the-congo-river-basin.webm"
                            },
                            "preview_mp4": {
                              "url": "https://ak3.picdn.net/shutterstock/videos/639703/preview/stock-footage-a-family-of-african-forest-elephants-play-in-the-mud-in-the-jungle-of-the-congo-river-basin.mp4"
                            },
                            "thumb_jpg": {
                              "url": "https://ak3.picdn.net/shutterstock/videos/639703/thumb/1.jpg"
                            },
                            "preview_jpg": {
                              "url": "https://ak3.picdn.net/shutterstock/videos/639703/thumb/1.jpg"
                            }
                          },
                          "url": "https://www.shutterstock.com/video/clip-639703"
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "basic": []
          },
          {
            "customer_accessCode": []
          }
        ],
        "tags": [
          "videos"
        ],
        "operationId": "getVideoList",
        "summary": "List videos",
        "description": "This endpoint lists information about one or more videos, including the aspect ratio and URLs to previews."
      }
    },
    "/v2/videos/{id}": {
      "get": {
        "parameters": [
          {
            "description": "Video ID",
            "in": "path",
            "name": "id",
            "required": true,
            "example": "30867073",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Amount of detail to render in the response",
            "in": "query",
            "name": "view",
            "schema": {
              "type": "string",
              "enum": [
                "minimal",
                "full"
              ],
              "default": "full"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Video"
                },
                "examples": {
                  "response": {
                    "value": {
                      "media_type": "video",
                      "id": "30867073",
                      "description": "Fans cheering for sports team on the bleachers of a professional stadium",
                      "aspect": 1.896,
                      "duration": 19,
                      "categories": [
                        {
                          "name": "People",
                          "id": "13"
                        },
                        {
                          "name": "Sports/Recreation",
                          "id": "18"
                        }
                      ],
                      "keywords": [
                        "4k resolution",
                        "adult",
                        "adults only",
                        "american football - sport",
                        "applauding",
                        "arms raised"
                      ],
                      "has_model_release": true,
                      "has_property_release": true,
                      "models": [
                        {
                          "id": "22793203"
                        }
                      ],
                      "contributor": {
                        "id": "907171"
                      },
                      "is_adult": false,
                      "aspect_ratio": "1.90:1",
                      "added_date": "2017-09-18",
                      "assets": {
                        "thumb_webm": {
                          "url": "https://ak3.picdn.net/shutterstock/videos/30867073/thumb/stock-footage-fans-cheering-for-sports-team-on-the-bleachers-of-a-professional-stadium.webm"
                        },
                        "thumb_mp4": {
                          "url": "https://ak3.picdn.net/shutterstock/videos/30867073/thumb/stock-footage-fans-cheering-for-sports-team-on-the-bleachers-of-a-professional-stadium.mp4"
                        },
                        "preview_webm": {
                          "url": "https://ak3.picdn.net/shutterstock/videos/30867073/preview/stock-footage-fans-cheering-for-sports-team-on-the-bleachers-of-a-professional-stadium.webm"
                        },
                        "preview_mp4": {
                          "url": "https://ak3.picdn.net/shutterstock/videos/30867073/preview/stock-footage-fans-cheering-for-sports-team-on-the-bleachers-of-a-professional-stadium.mp4"
                        },
                        "thumb_jpgs": {
                          "urls": [
                            "https://ak3.picdn.net/shutterstock/videos/30867073/thumb/1.jpg",
                            "https://ak3.picdn.net/shutterstock/videos/30867073/thumb/2.jpg",
                            "https://ak3.picdn.net/shutterstock/videos/30867073/thumb/3.jpg",
                            "https://ak3.picdn.net/shutterstock/videos/30867073/thumb/12.jpg"
                          ]
                        },
                        "thumb_jpg": {
                          "url": "https://ak3.picdn.net/shutterstock/videos/30867073/thumb/1.jpg"
                        },
                        "preview_jpg": {
                          "url": "https://ak3.picdn.net/shutterstock/videos/30867073/thumb/1.jpg"
                        },
                        "sd": {
                          "height": 480,
                          "width": 910,
                          "fps": 25,
                          "format": "mov",
                          "file_size": 18221056,
                          "display_name": "Standard Definition MPEG",
                          "is_licensable": true
                        },
                        "hd": {
                          "height": 1080,
                          "width": 2046,
                          "fps": 25,
                          "format": "mov",
                          "file_size": 92101632,
                          "display_name": "HD MPEG",
                          "is_licensable": true
                        },
                        "web": {
                          "height": 240,
                          "width": 454,
                          "fps": 25,
                          "format": "mov",
                          "file_size": 6441984,
                          "display_name": "Low Resolution MPEG",
                          "is_licensable": true
                        },
                        "4k": {
                          "height": 2160,
                          "width": 4096,
                          "fps": 25,
                          "format": "apch",
                          "file_size": 1859655680,
                          "display_name": "Original UltraHD 4K",
                          "is_licensable": true
                        }
                      },
                      "url": "https://www.shutterstock.com/video/clip-30867073"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not found"
          }
        },
        "security": [
          {
            "basic": []
          },
          {
            "customer_accessCode": []
          }
        ],
        "tags": [
          "videos"
        ],
        "operationId": "getVideo",
        "summary": "Get details about videos",
        "description": "This endpoint shows information about a video, including URLs to previews and the sizes that it is available in."
      }
    },
    "/v2/videos/licenses": {
      "post": {
        "parameters": [
          {
            "description": "The subscription ID to use for licensing",
            "in": "query",
            "name": "subscription_id",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The size of the video to license",
            "in": "query",
            "name": "size",
            "schema": {
              "type": "string",
              "enum": [
                "web",
                "sd",
                "hd",
                "4k"
              ],
              "default": "web"
            }
          },
          {
            "description": "The Search ID that led to this licensing event",
            "in": "query",
            "name": "search_id",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LicenseVideoResultDataList"
                },
                "examples": {
                  "response": {
                    "value": {
                      "data": [
                        {
                          "video_id": "2140697",
                          "download": {
                            "url": "https://download.shutterstock.com/gatekeeper/W3siZSI6MTQ5NzAyNjU1MiwiayI6InZpZGVvLzIxNDA2OTcvc2QubW92IiwibSI6IjEiLCJkIjoic2h1dHRlcnN0b2NrLW1lZGlhIn0sInVsOFY1dElzb3lWZHNxb3JyWlJjS1dyb016TSJd/shutterstock_v2140697.mov"
                          },
                          "allotment_charge": 1
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "customer_accessCode": [
              "licenses.create",
              "purchases.view"
            ]
          }
        ],
        "tags": [
          "videos"
        ],
        "x-code-samples": [
          {
            "lang": "shell",
            "source": "DATA='{\r\n  \"videos\": [\r\n    {\r\n      \"video_id\": \"2140697\",\r\n      \"size\": \"hd\"\r\n    },\r\n    {\r\n      \"video_id\": \"5613314\",\r\n      \"size\": \"4k\"\r\n    }\r\n  ]\r\n}'\r\n\r\ncurl -X POST 'https://api.shutterstock.com/v2/videos/licenses?subscription_id='$SUBSCRIPTION_ID \\\r\n-d \"$DATA\" \\\r\n-H \"Content-Type: application/json\" \\\r\n-H \"Accept: application/json\" \\\r\n-H \"Authorization: Bearer $SHUTTERSTOCK_API_TOKEN\"\r\n"
          },
          {
            "lang": "javascript--nodejs",
            "source": "const sstk = require('shutterstock-api');\r\n\r\nsstk.setAccessToken(process.env.SHUTTERSTOCK_API_TOKEN);\r\n\r\nconst api = new sstk.VideosApi();\r\n\r\nconst body = {\r\n  videos: [\r\n    {\r\n      video_id: \"419235589\"\r\n    },\r\n    {\r\n      video_id: \"1079756147\"\r\n    }\r\n  ]\r\n};\r\n\r\nconst queryParams = {\r\n  subscription_id: SHUTTERSTOCK_SUBSCRIPTION_ID,\r\n  size: 'web'\r\n};\r\n\r\napi.searchVideos(body, queryParams)\r\n.then(function({data}) {\r\n  console.log(data);\r\n})\r\n.catch(function(error) {\r\n  console.error(error);\r\n});\r\n"
          },
          {
            "lang": "php",
            "source": "$body = [\r\n  \"videos\" => [\r\n    [\r\n      \"video_id\" => \"2140697\",\r\n      \"format\" => \"hd\"\r\n    ],\r\n    [\r\n      \"video_id\" => \"5613314\",\r\n      \"format\" => \"4k\"\r\n    ]\r\n  ]\r\n];\r\n$encodedBody = json_encode($body);\r\n\r\n$options = [\r\n  CURLOPT_URL => \"https://api.shutterstock.com/v2/videos/licenses?subscription_id=$SUBSCRIPTION_ID\",\r\n  CURLOPT_CUSTOMREQUEST => \"POST\",\r\n  CURLOPT_POSTFIELDS => $encodedBody,\r\n  CURLOPT_USERAGENT => \"php/curl\",\r\n  CURLOPT_HTTPHEADER => [\r\n    \"Authorization: Bearer $SHUTTERSTOCK_API_TOKEN\",\r\n    \"Content-Type: application/json\"\r\n  ],\r\n  CURLOPT_RETURNTRANSFER => 1\r\n];\r\n\r\n$handle = curl_init();\r\ncurl_setopt_array($handle, $options);\r\n$response = curl_exec($handle);\r\ncurl_close($handle);\r\n\r\n$decodedResponse = json_decode($response);\r\nprint_r($decodedResponse);\r\n"
          }
        ],
        "operationId": "licenseVideos",
        "summary": "License videos",
        "description": "This endpoint gets licenses for one or more videos. You must specify the video IDs in the body parameter and the size and subscription ID either in the query parameter or with each video ID in the body parameter. Values in the body parameter override values in the query parameters.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LicenseVideoRequest"
              },
              "examples": {
                "default": {
                  "value": {
                    "videos": [
                      {
                        "video_id": "2140697",
                        "size": "hd",
                        "subscription_id": "s8906043"
                      },
                      {
                        "video_id": "5613314",
                        "size": "4k",
                        "subscription_id": "s8241443"
                      }
                    ]
                  }
                }
              }
            }
          },
          "description": "List of videos to request licenses for and information about each license transaction; these values override the defaults in the query parameters",
          "required": true
        }
      },
      "get": {
        "parameters": [
          {
            "description": "Show licenses for the specified video ID",
            "in": "query",
            "name": "video_id",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Show videos that are available with the specified license, such as `standard` or `enhanced`; prepending a `-` sign excludes results from that license",
            "in": "query",
            "name": "license",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Page number",
            "in": "query",
            "name": "page",
            "schema": {
              "type": "integer",
              "minimum": 1,
              "default": 1
            }
          },
          {
            "description": "Number of results per page",
            "in": "query",
            "name": "per_page",
            "schema": {
              "type": "integer",
              "minimum": 1,
              "maximum": 200,
              "default": 20
            }
          },
          {
            "description": "Sort by oldest or newest videos first",
            "in": "query",
            "name": "sort",
            "schema": {
              "type": "string",
              "enum": [
                "newest",
                "oldest"
              ],
              "default": "newest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DownloadHistoryDataList"
                },
                "examples": {
                  "response": {
                    "value": {
                      "data": [
                        {
                          "id": "v3286346",
                          "user": {
                            "username": "myusername"
                          },
                          "license": "footage_premier",
                          "subscription_id": "s8907043",
                          "download_time": "2018-05-24T14:26:25-04:00",
                          "metadata": {
                            "client": "client3",
                            "other": "other4",
                            "job": "job2",
                            "purchase_order": "purchase_order1"
                          },
                          "video": {
                            "id": "2140697",
                            "format": {
                              "size": "sd"
                            }
                          }
                        },
                        {
                          "id": "v3285467",
                          "user": {
                            "username": "myusername"
                          },
                          "license": "footage_premier",
                          "subscription_id": "s8907043",
                          "download_time": "2018-05-23T10:10:24-04:00",
                          "metadata": {
                            "client": "client3",
                            "other": "other4",
                            "job": "job2",
                            "purchase_order": "purchase_order1"
                          },
                          "video": {
                            "id": "2140697",
                            "format": {
                              "size": "sd"
                            }
                          }
                        },
                        {
                          "id": "v3283718",
                          "user": {
                            "username": "myusername"
                          },
                          "license": "footage_premier",
                          "subscription_id": "s8907043",
                          "download_time": "2018-05-22T07:51:17-04:00",
                          "metadata": {
                            "client": "client3",
                            "other": "other4",
                            "job": "job2",
                            "purchase_order": "purchase_order1"
                          },
                          "video": {
                            "id": "2140697",
                            "format": {
                              "size": "sd"
                            }
                          }
                        },
                        {
                          "id": "v3283019",
                          "user": {
                            "username": "myusername"
                          },
                          "license": "footage_premier",
                          "subscription_id": "s8907043",
                          "download_time": "2018-05-21T12:01:07-04:00",
                          "metadata": {
                            "client": "client3",
                            "other": "other4",
                            "job": "job2",
                            "purchase_order": "purchase_order1"
                          },
                          "video": {
                            "id": "2140697",
                            "format": {
                              "size": "sd"
                            }
                          }
                        },
                        {
                          "id": "v3283016",
                          "user": {
                            "username": "myusername"
                          },
                          "license": "footage_premier",
                          "subscription_id": "s8907043",
                          "download_time": "2018-05-21T11:59:43-04:00",
                          "metadata": {
                            "client": "client3",
                            "other": "other4",
                            "job": "job2",
                            "purchase_order": "purchase_order1"
                          },
                          "video": {
                            "id": "2140697",
                            "format": {
                              "size": "sd"
                            }
                          }
                        },
                        {
                          "id": "v3278213",
                          "user": {
                            "username": "myusername"
                          },
                          "license": "footage_premier",
                          "subscription_id": "s8907043",
                          "download_time": "2018-05-15T10:53:10-04:00",
                          "metadata": {
                            "client": "client3",
                            "other": "other4",
                            "job": "job2",
                            "purchase_order": "purchase_order1"
                          },
                          "video": {
                            "id": "2140697",
                            "format": {
                              "size": "sd"
                            }
                          }
                        },
                        {
                          "id": "v3277514",
                          "user": {
                            "username": "myusername"
                          },
                          "license": "footage_premier",
                          "subscription_id": "s8907043",
                          "download_time": "2018-05-14T23:31:59-04:00",
                          "metadata": {
                            "client": "client3",
                            "other": "other4",
                            "job": "job2",
                            "purchase_order": "purchase_order1"
                          },
                          "video": {
                            "id": "2140697",
                            "format": {
                              "size": "sd"
                            }
                          }
                        },
                        {
                          "id": "v3275900",
                          "user": {
                            "username": "myusername"
                          },
                          "license": "footage_premier",
                          "subscription_id": "s8907043",
                          "download_time": "2018-05-14T12:52:40-04:00",
                          "metadata": {
                            "client": "client3",
                            "other": "other4",
                            "job": "job2",
                            "purchase_order": "purchase_order1"
                          },
                          "video": {
                            "id": "2140697",
                            "format": {
                              "size": "sd"
                            }
                          }
                        },
                        {
                          "id": "v3273884",
                          "user": {
                            "username": "myusername"
                          },
                          "license": "footage_premier",
                          "subscription_id": "s8907043",
                          "download_time": "2018-05-10T15:38:20-04:00",
                          "metadata": {
                            "client": "client3",
                            "other": "other4",
                            "job": "job2",
                            "purchase_order": "purchase_order1"
                          },
                          "video": {
                            "id": "2140697",
                            "format": {
                              "size": "sd"
                            }
                          }
                        },
                        {
                          "id": "v3273878",
                          "user": {
                            "username": "myusername"
                          },
                          "license": "footage_premier",
                          "subscription_id": "s8907043",
                          "download_time": "2018-05-10T15:24:28-04:00",
                          "metadata": {
                            "client": "client3",
                            "other": "other4",
                            "job": "job2",
                            "purchase_order": "purchase_order1"
                          },
                          "video": {
                            "id": "2140697",
                            "format": {
                              "size": "sd"
                            }
                          }
                        }
                      ],
                      "page": 1,
                      "per_page": 20
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "customer_accessCode": [
              "licenses.view"
            ]
          }
        ],
        "tags": [
          "videos"
        ],
        "operationId": "getVideoLicenseList",
        "summary": "List video licenses",
        "description": "This endpoint lists existing licenses. You can filter the results according to the type of license or the video ID."
      }
    },
    "/v2/videos/licenses/{id}/downloads": {
      "post": {
        "parameters": [
          {
            "description": "The license ID of the item to (re)download",
            "in": "path",
            "name": "id",
            "required": true,
            "example": "i1188641347",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Url"
                },
                "examples": {
                  "response": {
                    "value": {
                      "url": "https://download1.shutterstock.com/gatekeeper/W3siZSI6MTUzMzMzMzUzMCwiayI6InZpZGVvLzM5NjU4ODEvaGQubW92IiwibSI6MSwiZCI6InNodXR0ZXJzdG9jay1tZWRpYSJ9LCJjZ2lvRU14T09hNWZGTHZsN21iTWVPRVQ3MFEiXQ/shutterstock_v3965881.mov"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "customer_accessCode": [
              "licenses.view"
            ]
          }
        ],
        "x-code-samples": [
          {
            "lang": "shell",
            "source": "DATA='{}'\r\n\r\ncurl -X POST https://api.shutterstock.com/v2/videos/licenses/i1188641347/downloads \\\r\n-d \"$DATA\" \\\r\n-H \"Content-Type: application/json\" \\\r\n-H \"Accept: application/json\" \\\r\n-H \"Authorization: Bearer $SHUTTERSTOCK_API_TOKEN\""
          },
          {
            "lang": "javascript--nodejs",
            "source": "const sstk = require('shutterstock-api');\r\n\r\nsstk.setAccessToken(process.env.SHUTTERSTOCK_API_TOKEN);\r\n\r\nconst videosApi = new sstk.VideosApi();\r\n\r\nconst licenseId = ''; // license ID, not video ID\r\n\r\nconst body = {};\r\n\r\nvideosApi.downloadVideos(licenseId, body)\r\n.then(function(data) {\r\n  console.log(data);\r\n})\r\n.catch(function(error) {\r\n  console.error(error);\r\n});"
          },
          {
            "lang": "php",
            "source": "$body = [];\r\n$encodedBody = json_encode($body);\r\n\r\n$options = [\r\n  CURLOPT_URL => \"https://api.shutterstock.com/v2/videos/licenses/i1188641347/downloads\",\r\n  CURLOPT_CUSTOMREQUEST => \"POST\",\r\n  CURLOPT_POSTFIELDS => $encodedBody,\r\n  CURLOPT_USERAGENT => \"php/curl\",\r\n  CURLOPT_HTTPHEADER => [\r\n    \"Authorization: Bearer $SHUTTERSTOCK_API_TOKEN\",\r\n    \"Content-Type: application/json\"\r\n  ],\r\n  CURLOPT_RETURNTRANSFER => 1\r\n];\r\n\r\n$handle = curl_init();\r\ncurl_setopt_array($handle, $options);\r\n$response = curl_exec($handle);\r\ncurl_close($handle);\r\n\r\n$decodedResponse = json_decode($response);\r\nprint_r($decodedResponse);"
          }
        ],
        "tags": [
          "videos"
        ],
        "operationId": "downloadVideos",
        "summary": "Download videos",
        "description": "This endpoint redownloads videos that you have already received a license for.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RedownloadVideo"
              },
              "examples": {
                "default": {
                  "value": {}
                }
              }
            }
          },
          "description": "Information about the videos to redownload",
          "required": true
        }
      }
    },
    "/v2/videos/collections": {
      "post": {
        "responses": {
          "200": {
            "description": "No response was specified",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CollectionCreateResponse"
                }
              }
            }
          },
          "201": {
            "description": "Successfully created collection",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CollectionCreateResponse"
                },
                "examples": {
                  "response": {
                    "value": {
                      "id": "10120264"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "customer_accessCode": [
              "collections.edit"
            ]
          }
        ],
        "x-code-samples": [
          {
            "lang": "shell",
            "source": "DATA='{\r\n  \"name\": \"New collection name\"\r\n}'\r\n\r\ncurl -X POST https://api.shutterstock.com/v2/videos/collections \\\r\n-d \"$DATA\" \\\r\n-H \"Content-Type: application/json\" \\\r\n-H \"Accept: application/json\" \\\r\n-H \"Authorization: Bearer $SHUTTERSTOCK_API_TOKEN\""
          },
          {
            "lang": "javascript--nodejs",
            "source": "const sstk = require('shutterstock-api');\r\n\r\nsstk.setAccessToken(process.env.SHUTTERSTOCK_API_TOKEN);\r\n\r\nconst videosApi = new sstk.VideosApi();\r\n\r\nconst body = {\r\n  \"name\": \"New collection name\"\r\n};\r\n\r\nvideosApi.createClipbox(body)\r\n.then(function() {\r\n  console.log(\"Success!\");\r\n})\r\n.catch(function(error) {\r\n  console.error(error);\r\n});\r\n"
          },
          {
            "lang": "php",
            "source": "$body = [\r\n  \"name\" => \"New collection name\"\r\n];\r\n$encodedBody = json_encode($body);\r\n\r\n$options = [\r\n  CURLOPT_URL => \"https://api.shutterstock.com/v2/videos/collections\",\r\n  CURLOPT_CUSTOMREQUEST => \"POST\",\r\n  CURLOPT_POSTFIELDS => $encodedBody,\r\n  CURLOPT_USERAGENT => \"php/curl\",\r\n  CURLOPT_HTTPHEADER => [\r\n    \"Authorization: Bearer $SHUTTERSTOCK_API_TOKEN\",\r\n    \"Content-Type: application/json\"\r\n  ],\r\n  CURLOPT_RETURNTRANSFER => 1\r\n];\r\n\r\n$handle = curl_init();\r\ncurl_setopt_array($handle, $options);\r\n$response = curl_exec($handle);\r\ncurl_close($handle);\r\n\r\n$decodedResponse = json_decode($response);\r\nprint_r($decodedResponse);"
          }
        ],
        "tags": [
          "videos"
        ],
        "operationId": "createClipbox",
        "summary": "Create video collections",
        "description": "This endpoint creates one or more collections (clipboxes). To add videos to collections, use `POST /videos/collections/{id}/items`.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CollectionCreateRequest"
              },
              "examples": {
                "default": {
                  "value": {
                    "name": "New collection name"
                  }
                }
              }
            }
          },
          "description": "Collection metadata",
          "required": true
        }
      },
      "get": {
        "parameters": [
          {
            "description": "Page number",
            "in": "query",
            "name": "page",
            "schema": {
              "type": "integer",
              "minimum": 1,
              "default": 1
            }
          },
          {
            "description": "Number of results per page",
            "in": "query",
            "name": "per_page",
            "schema": {
              "type": "integer",
              "minimum": 1,
              "maximum": 150,
              "default": 100
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CollectionDataList"
                },
                "examples": {
                  "response": {
                    "value": {
                      "data": [
                        {
                          "name": "kittens and puppies",
                          "updated_time": "2017-07-05T08:51:00-04:00",
                          "id": "17553374",
                          "total_item_count": 0,
                          "created_time": "2017-07-05T08:51:00-04:00"
                        },
                        {
                          "name": "wild life",
                          "updated_time": "2017-07-05T08:51:00-04:00",
                          "id": "17553375",
                          "total_item_count": 0,
                          "created_time": "2017-07-05T08:51:00-04:00"
                        },
                        {
                          "name": "young couples",
                          "updated_time": "2017-07-06T08:50:57-04:00",
                          "id": "17555175",
                          "total_item_count": 2,
                          "created_time": "2017-07-06T08:50:57-04:00"
                        },
                        {
                          "name": "sky timelapses",
                          "updated_time": "2017-07-06T08:50:58-04:00",
                          "id": "17555176",
                          "total_item_count": 2,
                          "created_time": "2017-07-06T08:50:58-04:00"
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "customer_accessCode": [
              "collections.view"
            ]
          }
        ],
        "tags": [
          "videos"
        ],
        "operationId": "getClipboxList",
        "summary": "List video collections",
        "description": "This endpoint lists your collections of videos and their basic attributes."
      }
    },
    "/v2/videos/collections/{id}": {
      "get": {
        "parameters": [
          {
            "description": "The ID of the collection to return",
            "in": "path",
            "name": "id",
            "required": true,
            "example": "17555176",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Collection"
                },
                "examples": {
                  "response": {
                    "value": {
                      "name": "cats and dogs",
                      "updated_time": "2017-07-05T08:51:00-04:00",
                      "id": "17555176",
                      "total_item_count": "0"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "customer_accessCode": [
              "collections.view"
            ]
          }
        ],
        "tags": [
          "videos"
        ],
        "operationId": "getClipbox",
        "summary": "Get the details of video collections",
        "description": "This endpoint gets more detailed information about a collection, including the timestamp for its creation and the number of videos in it. To get the videos in collections, use GET /videos/collections/{id}/items."
      },
      "post": {
        "parameters": [
          {
            "description": "The ID of the collection to rename",
            "in": "path",
            "name": "id",
            "required": true,
            "example": "17555176",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "No response was specified"
          },
          "204": {
            "description": "Successfully updated collection"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "customer_accessCode": [
              "collections.edit"
            ]
          }
        ],
        "x-code-samples": [
          {
            "lang": "shell",
            "source": "curl -X DELETE https://api.shutterstock.com/v2/videos/collections/17555176 \\\r\n-H \"Accept: application/json\" \\\r\n-H \"Authorization: Bearer $SHUTTERSTOCK_API_TOKEN\""
          },
          {
            "lang": "javascript--nodejs",
            "source": "const sstk = require('shutterstock-api');\r\n\r\nsstk.setAccessToken(process.env.SHUTTERSTOCK_API_TOKEN);\r\n\r\nconst videosApi = new sstk.VideosApi();\r\n\r\nconst collectionId = \"\"; // Collection ID\r\n\r\nvideosApi.deleteClipbox(collectionId)\r\n.then(function() {\r\n  console.log(\"Success!\");\r\n})\r\n.catch(function(error) {\r\n  console.error(error);\r\n});"
          },
          {
            "lang": "php",
            "source": "$options = [\r\n  CURLOPT_URL => \"https://api.shutterstock.com/v2/videos/collections/17555176\",\r\n  CURLOPT_USERAGENT => \"php/curl\",\r\n  CURLOPT_HTTPHEADER => [\r\n    \"Authorization: Bearer $SHUTTERSTOCK_API_TOKEN\"\r\n  ],\r\n  CURLOPT_RETURNTRANSFER => 1\r\n];\r\n\r\n$handle = curl_init();\r\ncurl_setopt_array($handle, $options);\r\n$response = curl_exec($handle);\r\ncurl_close($handle);\r\n\r\n$decodedResponse = json_decode($response);\r\nprint_r($decodedResponse);"
          }
        ],
        "tags": [
          "videos"
        ],
        "operationId": "renameClipbox",
        "summary": "Rename video collections",
        "description": "This endpoint sets a new name for a collection.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CollectionUpdateRequest"
              },
              "examples": {
                "default": {
                  "value": {
                    "name": "Updated collection name"
                  }
                }
              }
            }
          },
          "description": "The new name for the collection",
          "required": true
        }
      },
      "delete": {
        "parameters": [
          {
            "description": "The ID of the collection to delete",
            "in": "path",
            "name": "id",
            "required": true,
            "example": "17555176",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "No response was specified"
          },
          "204": {
            "description": "Successfully deleted collection"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "customer_accessCode": [
              "collections.edit"
            ]
          }
        ],
        "x-code-samples": [
          {
            "lang": "shell",
            "source": {
              "$ref": "#/paths/~1v2~1videos~1collections~1%7Bid%7D/post/x-code-samples/0/source"
            }
          },
          {
            "lang": "javascript--nodejs",
            "source": {
              "$ref": "#/paths/~1v2~1videos~1collections~1%7Bid%7D/post/x-code-samples/1/source"
            }
          },
          {
            "lang": "php",
            "source": {
              "$ref": "#/paths/~1v2~1videos~1collections~1%7Bid%7D/post/x-code-samples/2/source"
            }
          }
        ],
        "tags": [
          "videos"
        ],
        "operationId": "deleteClipbox",
        "summary": "Delete video collections",
        "description": "This endpoint deletes a collection."
      }
    },
    "/v2/videos/categories": {
      "get": {
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CategoryDataList"
                },
                "examples": {
                  "response": {
                    "value": {
                      "data": [
                        {
                          "id": "1",
                          "name": "Animals/Wildlife"
                        },
                        {
                          "id": "2",
                          "name": "Buildings/Landmarks"
                        },
                        {
                          "id": "3",
                          "name": "Backgrounds/Textures"
                        },
                        {
                          "id": "4",
                          "name": "Business/Finance"
                        },
                        {
                          "id": "5",
                          "name": "Education"
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "basic": []
          },
          {
            "customer_accessCode": []
          }
        ],
        "tags": [
          "videos"
        ],
        "operationId": "getVideoCategories",
        "summary": "List video categories",
        "description": "This endpoint lists the categories (Shutterstock-assigned genres) that videos can belong to."
      }
    },
    "/v2/videos/collections/{id}/items": {
      "post": {
        "parameters": [
          {
            "description": "The ID of the collection to which items should be added",
            "in": "path",
            "name": "id",
            "required": true,
            "example": "17555176",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "No response was specified"
          },
          "204": {
            "description": "Successfully added collection items"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "customer_accessCode": [
              "collections.edit"
            ]
          }
        ],
        "x-code-samples": [
          {
            "lang": "shell",
            "source": "DATA='{\r\n  \"items\": [\r\n    {\r\n      \"id\": \"10120264\"\r\n    },\r\n    {\r\n      \"id\": \"24419024\"\r\n    }\r\n  ]\r\n}'\r\n\r\ncurl -X POST https://api.shutterstock.com/v2/videos/collections/17555176/items \\\r\n-d \"$DATA\" \\\r\n-H \"Content-Type: application/json\" \\\r\n-H \"Accept: application/json\" \\\r\n-H \"Authorization: Bearer $SHUTTERSTOCK_API_TOKEN\""
          },
          {
            "lang": "javascript--nodejs",
            "source": "const sstk = require('shutterstock-api');\r\n\r\nsstk.setAccessToken(process.env.SHUTTERSTOCK_API_TOKEN);\r\n\r\nconst videosApi = new sstk.VideosApi();\r\n\r\nconst collectionId = \"\"; // Collection ID\r\n\r\n// Array of videos to add\r\nconst body = {\r\n  \"items\": [\r\n    {\r\n      \"id\": \"\",\r\n      \"media_type\": \"video\"\r\n    }\r\n  ]\r\n};\r\n\r\nvideosApi.addLightboxItems(collectionId, body)\r\n.then(function() {\r\n  console.log(\"Success!\");\r\n})\r\n.catch(function(error) {\r\n  console.error(error);\r\n});\r\n"
          },
          {
            "lang": "php",
            "source": "$body = [\r\n  \"items\" => [\r\n    [\r\n      \"id\" => \"10120264\"\r\n    ],\r\n    [\r\n      \"id\" => \"24419024\"\r\n    ]\r\n  ]\r\n];\r\n$encodedBody = json_encode($body);\r\n\r\n$options = [\r\n  CURLOPT_URL => \"https://api.shutterstock.com/v2/videos/collections/17555176/items\",\r\n  CURLOPT_CUSTOMREQUEST => \"POST\",\r\n  CURLOPT_POSTFIELDS => $encodedBody,\r\n  CURLOPT_USERAGENT => \"php/curl\",\r\n  CURLOPT_HTTPHEADER => [\r\n    \"Authorization: Bearer $SHUTTERSTOCK_API_TOKEN\",\r\n    \"Content-Type: application/json\"\r\n  ],\r\n  CURLOPT_RETURNTRANSFER => 1\r\n];\r\n\r\n$handle = curl_init();\r\ncurl_setopt_array($handle, $options);\r\n$response = curl_exec($handle);\r\ncurl_close($handle);\r\n\r\n$decodedResponse = json_decode($response);\r\nprint_r($decodedResponse);"
          }
        ],
        "tags": [
          "videos"
        ],
        "operationId": "addClipboxItems",
        "summary": "Add videos to collections",
        "description": "This endpoint adds one or more videos to a collection by video IDs.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CollectionItemRequest"
              },
              "examples": {
                "default": {
                  "value": {
                    "items": [
                      {
                        "id": "10120264"
                      },
                      {
                        "id": "24419024"
                      }
                    ]
                  }
                }
              }
            }
          },
          "description": "Array of video IDs to add to the collection",
          "required": true
        }
      },
      "get": {
        "parameters": [
          {
            "description": "The ID of the Collection whose items are to be returned",
            "in": "path",
            "name": "id",
            "required": true,
            "example": "17555176",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Page number",
            "in": "query",
            "name": "page",
            "schema": {
              "type": "integer",
              "minimum": 1,
              "default": 1
            }
          },
          {
            "description": "Number of results per page",
            "in": "query",
            "name": "per_page",
            "schema": {
              "type": "integer",
              "minimum": 1,
              "maximum": 150,
              "default": 100
            }
          },
          {
            "description": "Sort order",
            "in": "query",
            "name": "sort",
            "schema": {
              "type": "string",
              "enum": [
                "newest",
                "oldest"
              ],
              "default": "oldest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CollectionItemDataList"
                },
                "examples": {
                  "response": {
                    "value": {
                      "data": [
                        {
                          "added_time": "2017-07-06T14:33:42-04:00",
                          "id": "123123",
                          "media_type": "video"
                        },
                        {
                          "added_time": "2017-07-06T14:33:42-04:00",
                          "id": "654654",
                          "media_type": "video"
                        }
                      ],
                      "page": 1,
                      "per_page": 100
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "customer_accessCode": [
              "collections.view"
            ]
          }
        ],
        "tags": [
          "videos"
        ],
        "operationId": "getClipboxItems",
        "summary": "Get the contents of video collections",
        "description": "This endpoint lists the IDs of videos in a collection and the date that each was added."
      },
      "delete": {
        "parameters": [
          {
            "description": "The ID of the Collection from which items will be deleted",
            "in": "path",
            "name": "id",
            "required": true,
            "example": "17555176",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "One or more video IDs to remove from the collection",
            "in": "query",
            "name": "item_id",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "No response was specified"
          },
          "204": {
            "description": "Successfully removed collection items"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "customer_accessCode": [
              "collections.edit"
            ]
          }
        ],
        "x-code-samples": [
          {
            "lang": "shell",
            "source": "curl -X DELETE https://api.shutterstock.com/v2/videos/collections/17555176/items \\\r\n-H \"Accept: application/json\" \\\r\n-H \"Authorization: Bearer $SHUTTERSTOCK_API_TOKEN\""
          },
          {
            "lang": "javascript--nodejs",
            "source": "const sstk = require('shutterstock-api');\r\n\r\nsstk.setAccessToken(process.env.SHUTTERSTOCK_API_TOKEN);\r\n\r\nconst videosApi = new sstk.VideosApi();\r\n\r\nconst collectionId = \"\"; // Collection ID\r\n\r\n// Array of videos to remove\r\nconst videosToRemove = {\r\n  item_id: [\r\n    \"\"\r\n  ]\r\n};\r\n\r\nvideosApi.deleteClipboxItems(collectionId, videosToRemove)\r\n.then(function() {\r\n  console.log(\"Success!\");\r\n})\r\n.catch(function(error) {\r\n  console.error(error);\r\n});"
          },
          {
            "lang": "php",
            "source": "$options = [\r\n  CURLOPT_URL => \"https://api.shutterstock.com/v2/videos/collections/17555176/items\",\r\n  CURLOPT_USERAGENT => \"php/curl\",\r\n  CURLOPT_CUSTOMREQUEST => \"DELETE\",\r\n  CURLOPT_HTTPHEADER => [\r\n    \"Authorization: Bearer $SHUTTERSTOCK_API_TOKEN\"\r\n  ],\r\n  CURLOPT_RETURNTRANSFER => 1\r\n];\r\n\r\n$handle = curl_init();\r\ncurl_setopt_array($handle, $options);\r\n$response = curl_exec($handle);\r\ncurl_close($handle);\r\n\r\n$decodedResponse = json_decode($response);\r\nprint_r($decodedResponse);"
          }
        ],
        "tags": [
          "videos"
        ],
        "operationId": "deleteClipboxItems",
        "summary": "Remove videos from collections",
        "description": "This endpoint removes one or more videos from a collection."
      }
    },
    "/v2/videos/{id}/similar": {
      "get": {
        "parameters": [
          {
            "description": "The ID of a video for which similar videos should be returned",
            "in": "path",
            "name": "id",
            "required": true,
            "example": "2140697",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Page number",
            "in": "query",
            "name": "page",
            "schema": {
              "type": "integer",
              "minimum": 1,
              "default": 1
            }
          },
          {
            "description": "Number of results per page",
            "in": "query",
            "name": "per_page",
            "schema": {
              "type": "integer",
              "minimum": 1,
              "maximum": 500,
              "default": 20
            }
          },
          {
            "description": "Amount of detail to render in the response",
            "in": "query",
            "name": "view",
            "schema": {
              "type": "string",
              "enum": [
                "minimal",
                "full"
              ],
              "default": "minimal"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/VideoSearchResults"
                },
                "examples": {
                  "response": {
                    "value": {
                      "page": 1,
                      "per_page": 1,
                      "total_count": 200,
                      "search_id": "",
                      "data": [
                        {
                          "media_type": "video",
                          "id": "6658088",
                          "description": "Caucasian parents wearing casual clothes standing watching ocean waves summer daughters carrying bodyboards surfboards slow motion",
                          "aspect": 1.778,
                          "duration": 23,
                          "contributor": {
                            "id": "87721"
                          },
                          "aspect_ratio": "16:9",
                          "assets": {
                            "thumb_webm": {
                              "url": "https://ak8.picdn.net/shutterstock/videos/6658088/thumb/stock-footage-caucasian-parents-wearing-casual-clothes-standing-watching-ocean-waves-summer-daughters-carrying.webm"
                            },
                            "thumb_mp4": {
                              "url": "https://ak8.picdn.net/shutterstock/videos/6658088/thumb/stock-footage-caucasian-parents-wearing-casual-clothes-standing-watching-ocean-waves-summer-daughters-carrying.mp4"
                            },
                            "preview_webm": {
                              "url": "https://ak8.picdn.net/shutterstock/videos/6658088/preview/stock-footage-caucasian-parents-wearing-casual-clothes-standing-watching-ocean-waves-summer-daughters-carrying.webm"
                            },
                            "preview_mp4": {
                              "url": "https://ak8.picdn.net/shutterstock/videos/6658088/preview/stock-footage-caucasian-parents-wearing-casual-clothes-standing-watching-ocean-waves-summer-daughters-carrying.mp4"
                            },
                            "thumb_jpg": {
                              "url": "https://ak8.picdn.net/shutterstock/videos/6658088/thumb/1.jpg"
                            },
                            "preview_jpg": {
                              "url": "https://ak8.picdn.net/shutterstock/videos/6658088/thumb/1.jpg"
                            }
                          }
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "basic": []
          },
          {
            "customer_accessCode": []
          }
        ],
        "tags": [
          "videos"
        ],
        "operationId": "getSimilarVideos",
        "summary": "List similar videos",
        "description": "This endpoint searches for videos that are similar to a video that you specify."
      }
    },
    "/v2/audio/search": {
      "get": {
        "parameters": [
          {
            "description": "Show tracks with one of the specified artist names or IDs",
            "in": "query",
            "name": "artists",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "description": "(Deprecated; use bpm_from and bpm_to instead) Show tracks with the specified beats per minute",
            "in": "query",
            "name": "bpm",
            "deprecated": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "description": "Show tracks with the specified beats per minute or faster",
            "in": "query",
            "name": "bpm_from",
            "schema": {
              "type": "integer"
            }
          },
          {
            "description": "Show tracks with the specified beats per minute or slower",
            "in": "query",
            "name": "bpm_to",
            "schema": {
              "type": "integer"
            }
          },
          {
            "description": "Show tracks with the specified duration (seconds)",
            "in": "query",
            "name": "duration",
            "schema": {
              "type": "integer"
            }
          },
          {
            "description": "Show tracks with the specified duration or longer (seconds)",
            "in": "query",
            "name": "duration_from",
            "schema": {
              "type": "integer"
            }
          },
          {
            "description": "Show tracks with the specified duration or shorter (seconds)",
            "in": "query",
            "name": "duration_to",
            "schema": {
              "type": "integer"
            }
          },
          {
            "description": "Show tracks with each of the specified genres",
            "in": "query",
            "name": "genre",
            "explode": true,
            "example": [
              "Classical",
              "Holiday"
            ],
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "Blues",
                  "Children",
                  "Classical",
                  "Country",
                  "Dance/Electronic",
                  "Hip-Hop/Rap",
                  "Holiday",
                  "Jazz",
                  "New Age",
                  "Pop/Rock",
                  "R&B/Soul",
                  "Reggae/Ska",
                  "Spiritual",
                  "World/International"
                ]
              }
            }
          },
          {
            "description": "Show instrumental music only",
            "in": "query",
            "name": "is_instrumental",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "description": "Show tracks with each of the specified instruments",
            "in": "query",
            "name": "instruments",
            "explode": true,
            "example": [
              "Trumpet",
              "Percussion"
            ],
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "description": "Show tracks with each of the specified moods",
            "in": "query",
            "name": "moods",
            "explode": true,
            "example": [
              "Confident",
              "Playful"
            ],
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "description": "Page number",
            "in": "query",
            "name": "page",
            "schema": {
              "type": "integer",
              "minimum": 1,
              "default": 1
            }
          },
          {
            "description": "Number of results per page",
            "in": "query",
            "name": "per_page",
            "example": 1,
            "schema": {
              "type": "integer",
              "minimum": 0,
              "maximum": 500,
              "default": 20
            }
          },
          {
            "description": "One or more search terms separated by spaces",
            "in": "query",
            "name": "query",
            "example": "drum",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Sort by",
            "in": "query",
            "name": "sort",
            "schema": {
              "type": "string",
              "enum": [
                "score",
                "ranking_all",
                "artist",
                "title",
                "bpm",
                "freshness",
                "duration"
              ]
            }
          },
          {
            "description": "Sort order, asc or desc",
            "in": "query",
            "name": "sort_order",
            "schema": {
              "type": "string",
              "default": "desc",
              "enum": [
                "asc",
                "desc"
              ]
            }
          },
          {
            "description": "Show tracks with the specified vocal description (male, female)",
            "in": "query",
            "name": "vocal_description",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Amount of detail to render in the response",
            "in": "query",
            "name": "view",
            "example": "full",
            "schema": {
              "type": "string",
              "enum": [
                "minimal",
                "full"
              ],
              "default": "minimal"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AudioSearchResults"
                },
                "examples": {
                  "response": {
                    "value": {
                      "vocal_description": "",
                      "keywords": [
                        "celebratory",
                        "chic",
                        "euphoric",
                        "good times",
                        "hip",
                        "optimistic",
                        "party",
                        "soaring",
                        "upbeat"
                      ],
                      "artists": [
                        {
                          "name": "Klimenko Music"
                        }
                      ],
                      "genres": [
                        "Dance/Electronic",
                        "Electro Pop",
                        "Pop/Rock"
                      ],
                      "instruments": [
                        "Piano",
                        "Synth bass",
                        "Synth drums",
                        "Synthesizer"
                      ],
                      "id": "442583",
                      "isrc": "",
                      "description": "Pulsing and feel-good, featuring soaring synthesizer, groovy synth bass drums and synth drums that create a euphoric, upbeat mood.",
                      "similar_artists": [],
                      "releases": [],
                      "is_instrumental": true,
                      "title": "Another Tomorrow",
                      "is_adult": false,
                      "lyrics": "",
                      "media_type": "audio",
                      "recording_version": "",
                      "moods": [
                        "Bright",
                        "Confident",
                        "Fun",
                        "Happy",
                        "Inspiring",
                        "Optimistic",
                        "Playful",
                        "Sophisticated",
                        "Stylish",
                        "Uplifting"
                      ],
                      "language": "en",
                      "assets": {
                        "clean_audio": {
                          "file_size": 35188408
                        },
                        "preview_mp3": {
                          "file_size": 4400203,
                          "url": "https://ak.picdn.net/shutterstock/audio/442583/preview/preview.mp3"
                        },
                        "preview_ogg": {
                          "file_size": 4453197,
                          "url": "https://ak.picdn.net/shutterstock/audio/442583/preview/preview.ogg"
                        },
                        "waveform": {
                          "file_size": 18778,
                          "url": "https://ak.picdn.net/shutterstock/audio/442583/waveform/waveform.png"
                        }
                      },
                      "contributor": {
                        "id": "2847971"
                      },
                      "duration": 183,
                      "album": {
                        "id": "",
                        "title": ""
                      },
                      "published_time": "2016-08-16T14:30:03-04:00",
                      "updated_time": "2016-08-18T17:59:33-04:00",
                      "bpm": 110,
                      "added_date": "2016-08-16",
                      "url": "https://www.shutterstock.com/music/track/another-tomorrow/442583"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "basic": []
          },
          {
            "customer_accessCode": []
          }
        ],
        "tags": [
          "audio"
        ],
        "x-code-samples": [
          {
            "lang": "shell",
            "source": "curl -X GET \"https://api.shutterstock.com/v2/audio/search\" \\\r\n--header \"Authorization: Bearer $SHUTTERSTOCK_API_TOKEN\" \\\r\n-G \\\r\n--data-urlencode \"query=bluegrass\" \\\r\n--data-urlencode \"duration_from=60\" \\\r\n--data-urlencode \"moods=uplifting\"\r\n"
          },
          {
            "lang": "javascript--nodejs",
            "source": "const sstk = require('shutterstock-api');\r\n\r\nsstk.setAccessToken(process.env.SHUTTERSTOCK_API_TOKEN);\r\n\r\nconst api = new sstk.AudioApi();\r\n\r\nconst queryParams = {\r\n  query: 'bluegrass',\r\n  duration_from: 60,\r\n  moods: ['uplifting']\r\n};\r\n\r\napi.searchAudio(queryParams)\r\n.then(function({data}) {\r\n  console.log(data);\r\n})\r\n.catch(function(error) {\r\n  console.error(error);\r\n});\r\n"
          },
          {
            "lang": "php",
            "source": "$queryFields = [\r\n  \"query\" => \"bluegrass\",\r\n  \"duration_from\" => 60,\r\n  \"moods\" => \"uplifting\"\r\n];\r\n\r\n$options = [\r\n  CURLOPT_URL => \"https://api.shutterstock.com/v2/audio/search?\" . http_build_query($queryFields),\r\n  CURLOPT_USERAGENT => \"php/curl\",\r\n  CURLOPT_HTTPHEADER => [\r\n    \"Authorization: Bearer $SHUTTERSTOCK_API_TOKEN\"\r\n  ],\r\n  CURLOPT_RETURNTRANSFER => 1\r\n];\r\n\r\n$handle = curl_init();\r\ncurl_setopt_array($handle, $options);\r\n$response = curl_exec($handle);\r\ncurl_close($handle);\r\n\r\n$decodedResponse = json_decode($response);\r\nprint_r($decodedResponse);\r\n"
          }
        ],
        "operationId": "searchAudio",
        "summary": "Search for tracks",
        "description": "This endpoint searches for tracks. If you specify more than one search parameter, the API uses an AND condition. Array parameters can be specified multiple times; in this case, the API uses an AND or an OR condition with those values, depending on the parameter."
      }
    },
    "/v2/audio": {
      "get": {
        "parameters": [
          {
            "description": "One or more audio IDs",
            "in": "query",
            "name": "id",
            "required": true,
            "example": [
              "442583",
              "434750"
            ],
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "minItems": 1
            }
          },
          {
            "description": "Amount of detail to render in the response",
            "in": "query",
            "name": "view",
            "example": "full",
            "schema": {
              "type": "string",
              "enum": [
                "minimal",
                "full"
              ],
              "default": "minimal"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AudioDataList"
                },
                "examples": {
                  "response": {
                    "value": {
                      "data": [
                        {
                          "vocal_description": "",
                          "keywords": [
                            "breezy",
                            "celebration",
                            "festive",
                            "good times",
                            "hopeful",
                            "optimistic",
                            "party",
                            "positive",
                            "reflective"
                          ],
                          "artists": [
                            {
                              "name": "Fin Productions"
                            }
                          ],
                          "genres": [
                            "Dance/Electronic",
                            "Electro Pop",
                            "Pop/Rock"
                          ],
                          "instruments": [
                            "Bass",
                            "Drums",
                            "Electric guitar",
                            "Pads",
                            "Percussion",
                            "Synthesizer"
                          ],
                          "id": "434750",
                          "isrc": "",
                          "description": "Pulsing and feel-good, featuring slick electric guitar, synthesizer, bass, electronic drum pads and drums that create a positive, celebratory mood.",
                          "similar_artists": [],
                          "releases": [],
                          "is_instrumental": true,
                          "title": "Fresh Love",
                          "is_adult": false,
                          "lyrics": "",
                          "media_type": "audio",
                          "recording_version": "",
                          "moods": [
                            "Bright",
                            "Confident",
                            "Fun",
                            "Happy",
                            "Inspiring",
                            "Optimistic",
                            "Playful",
                            "Sophisticated",
                            "Stylish",
                            "Uplifting"
                          ],
                          "language": "en",
                          "assets": {
                            "clean_audio": {
                              "file_size": 30760372
                            },
                            "preview_mp3": {
                              "file_size": 3846606,
                              "url": "https://ak.picdn.net/shutterstock/audio/434750/preview/preview.mp3"
                            },
                            "preview_ogg": {
                              "file_size": 4402608,
                              "url": "https://ak.picdn.net/shutterstock/audio/434750/preview/preview.ogg"
                            },
                            "waveform": {
                              "file_size": 19822,
                              "url": "https://ak.picdn.net/shutterstock/audio/434750/waveform/waveform.png"
                            }
                          },
                          "contributor": {
                            "id": "2847971"
                          },
                          "duration": 160,
                          "album": {
                            "id": "",
                            "title": ""
                          },
                          "published_time": "2016-04-12T17:45:29-04:00",
                          "updated_time": "2016-08-18T18:03:11-04:00",
                          "bpm": 100,
                          "added_date": "2016-04-12",
                          "url": "https://www.shutterstock.com/music/track/another-tomorrow/442583"
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "basic": []
          },
          {
            "customer_accessCode": []
          }
        ],
        "tags": [
          "audio"
        ],
        "operationId": "getTrackList",
        "summary": "List audio tracks",
        "description": "This endpoint lists information about one or more audio tracks, including the description and publication date."
      }
    },
    "/v2/audio/{id}": {
      "get": {
        "parameters": [
          {
            "description": "Audio track ID",
            "in": "path",
            "name": "id",
            "required": true,
            "example": "442583",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Amount of detail to render in the response",
            "in": "query",
            "name": "view",
            "example": "full",
            "schema": {
              "type": "string",
              "enum": [
                "minimal",
                "full"
              ],
              "default": "full"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Audio"
                },
                "examples": {
                  "response": {
                    "value": {
                      "vocal_description": "",
                      "keywords": [
                        "celebratory",
                        "chic",
                        "euphoric",
                        "good times",
                        "hip",
                        "optimistic",
                        "party",
                        "soaring",
                        "upbeat"
                      ],
                      "artists": [
                        {
                          "name": "Klimenko Music"
                        }
                      ],
                      "genres": [
                        "Dance/Electronic",
                        "Electro Pop",
                        "Pop/Rock"
                      ],
                      "instruments": [
                        "Piano",
                        "Synth bass",
                        "Synth drums",
                        "Synthesizer"
                      ],
                      "id": "442583",
                      "isrc": "",
                      "description": "Pulsing and feel-good, featuring soaring synthesizer, groovy synth bass drums and synth drums that create a euphoric, upbeat mood.",
                      "similar_artists": [],
                      "releases": [],
                      "is_instrumental": true,
                      "title": "Another Tomorrow",
                      "is_adult": false,
                      "lyrics": "",
                      "media_type": "audio",
                      "recording_version": "",
                      "moods": [
                        "Bright",
                        "Confident",
                        "Fun",
                        "Happy",
                        "Inspiring",
                        "Optimistic",
                        "Playful",
                        "Sophisticated",
                        "Stylish",
                        "Uplifting"
                      ],
                      "language": "en",
                      "assets": {
                        "clean_audio": {
                          "file_size": 35188408
                        },
                        "preview_mp3": {
                          "file_size": 4400203,
                          "url": "https://ak.picdn.net/shutterstock/audio/442583/preview/preview.mp3"
                        },
                        "preview_ogg": {
                          "file_size": 4453197,
                          "url": "https://ak.picdn.net/shutterstock/audio/442583/preview/preview.ogg"
                        },
                        "waveform": {
                          "file_size": 18778,
                          "url": "https://ak.picdn.net/shutterstock/audio/442583/waveform/waveform.png"
                        }
                      },
                      "contributor": {
                        "id": "2847971"
                      },
                      "duration": 183,
                      "album": {
                        "id": "",
                        "title": ""
                      },
                      "published_time": "2016-08-16T14:30:03-04:00",
                      "updated_time": "2016-08-18T17:59:33-04:00",
                      "bpm": 110,
                      "added_date": "2016-08-16",
                      "url": "https://www.shutterstock.com/music/track/another-tomorrow/442583"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "basic": []
          },
          {
            "customer_accessCode": []
          }
        ],
        "tags": [
          "audio"
        ],
        "operationId": "getTrack",
        "summary": "Get details about audio tracks",
        "description": "This endpoint shows information about a track, including its genres, instruments, and other attributes."
      }
    },
    "/v2/audio/licenses": {
      "post": {
        "parameters": [
          {
            "description": "License type",
            "in": "query",
            "name": "license",
            "schema": {
              "type": "string",
              "enum": [
                "audio_standard",
                "audio_enhanced",
                "audio_platform"
              ],
              "default": "audio_standard"
            }
          },
          {
            "description": "The ID of the search that led to licensing this track",
            "in": "query",
            "name": "search_id",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LicenseAudioResultDataList"
                },
                "examples": {
                  "response": {
                    "value": {
                      "data": [
                        {
                          "audio_id": "1",
                          "download": {
                            "url": "http://download2.dev.shutterstock.com/gatekeeper/abc/original.wav"
                          }
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "customer_accessCode": [
              "licenses.create"
            ]
          }
        ],
        "x-code-samples": [
          {
            "lang": "shell",
            "source": "DATA='{\r\n  \"audio\": [\r\n    {\r\n      \"audio_id\": \"591623\",\r\n      \"license\": \"audio_standard\",\r\n      \"metadata\": {\r\n        \"purchase_order\": \"123\",\r\n        \"job\": \"\",\r\n        \"client\": \"\",\r\n        \"other\": \"\"\r\n      }\r\n    }\r\n  ]\r\n}'\r\n\r\ncurl -X POST https://api.shutterstock.com/v2/audio/licenses \\\r\n-d \"$DATA\" \\\r\n-H \"Content-Type: application/json\" \\\r\n-H \"Accept: application/json\" \\\r\n-H \"Authorization: Bearer $SHUTTERSTOCK_API_TOKEN\""
          },
          {
            "lang": "javascript--nodejs",
            "source": "const sstk = require('shutterstock-api');\r\n\r\nsstk.setAccessToken(process.env.SHUTTERSTOCK_API_TOKEN);\r\n\r\nconst audioApi = new sstk.AudioApi();\r\n\r\nconst body = {\r\n  \"audio\": [\r\n    {\r\n      \"audio_id\": \"446348\",\r\n      \"license\": \"premier_music_comp\",\r\n      \"metadata\": {\r\n        \"purchase_order\": \"123\"\r\n      }\r\n    }\r\n  ]\r\n};\r\n\r\naudioApi.licenseTrack(body)\r\n.then(function({data}) {\r\n  console.log(data);\r\n})\r\n.catch(function(error) {\r\n  console.error(error);\r\n});"
          },
          {
            "lang": "php",
            "source": "$body = [\r\n  \"audio\" => [\r\n    [\r\n      \"audio_id\" => \"591623\",\r\n      \"license\" => \"audio_standard\",\r\n      \"metadata\" => [\r\n        \"purchase_order\" => \"123\",\r\n        \"job\" => \"\",\r\n        \"client\" => \"\",\r\n        \"other\" => \"\"\r\n      ]\r\n    ]\r\n  ]\r\n];\r\n$encodedBody = json_encode($body);\r\n\r\n$options = [\r\n  CURLOPT_URL => \"https://api.shutterstock.com/v2/audio/licenses\",\r\n  CURLOPT_CUSTOMREQUEST => \"POST\",\r\n  CURLOPT_POSTFIELDS => $encodedBody,\r\n  CURLOPT_USERAGENT => \"php/curl\",\r\n  CURLOPT_HTTPHEADER => [\r\n    \"Authorization: Bearer $SHUTTERSTOCK_API_TOKEN\",\r\n    \"Content-Type: application/json\"\r\n  ],\r\n  CURLOPT_RETURNTRANSFER => 1\r\n];\r\n\r\n$handle = curl_init();\r\ncurl_setopt_array($handle, $options);\r\n$response = curl_exec($handle);\r\ncurl_close($handle);\r\n\r\n$decodedResponse = json_decode($response);\r\nprint_r($decodedResponse);"
          }
        ],
        "tags": [
          "audio"
        ],
        "operationId": "licenseTrack",
        "summary": "License audio tracks",
        "description": "This endpoint gets licenses for one or more tracks.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LicenseAudioRequest"
              },
              "examples": {
                "default": {
                  "description": "Overwrite content of soundbox with new items",
                  "value": {
                    "audio": [
                      {
                        "audio_id": "591623",
                        "license": "audio_standard",
                        "metadata": {
                          "purchase_order": "123",
                          "job": "",
                          "client": "",
                          "other": ""
                        }
                      }
                    ]
                  }
                }
              }
            }
          },
          "description": "Tracks to license",
          "required": true
        }
      },
      "get": {
        "parameters": [
          {
            "description": "Show licenses for the specified track ID",
            "in": "query",
            "name": "audio_id",
            "example": "1",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DownloadHistoryDataList"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "customer_accessCode": [
              "licenses.view"
            ]
          }
        ],
        "tags": [
          "audio"
        ],
        "operationId": "getAudioLicenseList",
        "summary": "List audio licenses",
        "description": "This endpoint lists existing licenses. You can filter the results according to the track ID to see if you have an existing license for a specific track."
      }
    },
    "/v2/audio/licenses/{id}/downloads": {
      "post": {
        "parameters": [
          {
            "description": "License ID",
            "in": "path",
            "name": "id",
            "required": true,
            "example": "i1188641348",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Url"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "customer_accessCode": [
              "licenses.view"
            ]
          }
        ],
        "x-code-samples": [
          {
            "lang": "shell",
            "source": "curl -X POST https://api.shutterstock.com/v2/audio/licenses/i1188641348/downloads \\\r\n-H \"Accept: application/json\" \\\r\n-H \"Authorization: Bearer $SHUTTERSTOCK_API_TOKEN\""
          },
          {
            "lang": "javascript--nodejs",
            "source": "const sstk = require('shutterstock-api');\r\n\r\nsstk.setAccessToken(process.env.SHUTTERSTOCK_API_TOKEN);\r\n\r\nconst audioApi = new sstk.AudioApi();\r\n\r\nconst licenseId = ''; // license ID, not track ID\r\n\r\naudioApi.downloadTracks(licenseId)\r\n.then(function(data) {\r\n  console.log(data);\r\n})\r\n.catch(function(error) {\r\n  console.error(error);\r\n});\r\n"
          },
          {
            "lang": "php",
            "source": "$options = [\r\n  CURLOPT_URL => \"https://api.shutterstock.com/v2/audio/licenses/i1188641348/downloads\",\r\n  CURLOPT_USERAGENT => \"php/curl\",\r\n  CURLOPT_HTTPHEADER => [\r\n    \"Authorization: Bearer $SHUTTERSTOCK_API_TOKEN\"\r\n  ],\r\n  CURLOPT_RETURNTRANSFER => 1\r\n];\r\n\r\n$handle = curl_init();\r\ncurl_setopt_array($handle, $options);\r\n$response = curl_exec($handle);\r\ncurl_close($handle);\r\n\r\n$decodedResponse = json_decode($response);\r\nprint_r($decodedResponse);"
          }
        ],
        "tags": [
          "audio"
        ],
        "operationId": "downloadTracks",
        "summary": "Download audio tracks",
        "description": "This endpoint redownloads tracks that you have already received a license for."
      }
    },
    "/v2/audio/collections": {
      "post": {
        "responses": {
          "200": {
            "description": "No response was specified",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CollectionCreateResponse"
                }
              }
            }
          },
          "201": {
            "description": "Successfully created collection",
            "content": {
              "application/json": {
                "examples": {
                  "response": {
                    "value": {
                      "id": "48433105"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "customer_accessCode": [
              "collections.edit"
            ]
          }
        ],
        "x-code-samples": [
          {
            "lang": "shell",
            "source": "DATA='{\r\n  \"name\": \"Best rock music\"\r\n}'\r\n\r\ncurl -X POST https://api.shutterstock.com/v2/audio/collections \\\r\n-d \"$DATA\" \\\r\n-H \"Content-Type: application/json\" \\\r\n-H \"Accept: application/json\" \\\r\n-H \"Authorization: Bearer $SHUTTERSTOCK_API_TOKEN\""
          },
          {
            "lang": "javascript--nodejs",
            "source": "const sstk = require('shutterstock-api');\r\n\r\nsstk.setAccessToken(process.env.SHUTTERSTOCK_API_TOKEN);\r\n\r\nconst audioApi = new sstk.AudioApi();\r\n\r\nconst body = {\r\n  \"name\": \"Best rock music\"\r\n};\r\n\r\naudioApi.createSoundbox(body)\r\n.then(function() {\r\n  console.log(\"Success!\");\r\n})\r\n.catch(function(error) {\r\n  console.error(error);\r\n});"
          },
          {
            "lang": "php",
            "source": "$body = [\r\n  \"name\" => \"Best rock music\"\r\n];\r\n$encodedBody = json_encode($body);\r\n\r\n$options = [\r\n  CURLOPT_URL => \"https://api.shutterstock.com/v2/audio/collections\",\r\n  CURLOPT_CUSTOMREQUEST => \"POST\",\r\n  CURLOPT_POSTFIELDS => $encodedBody,\r\n  CURLOPT_USERAGENT => \"php/curl\",\r\n  CURLOPT_HTTPHEADER => [\r\n    \"Authorization: Bearer $SHUTTERSTOCK_API_TOKEN\",\r\n    \"Content-Type: application/json\"\r\n  ],\r\n  CURLOPT_RETURNTRANSFER => 1\r\n];\r\n\r\n$handle = curl_init();\r\ncurl_setopt_array($handle, $options);\r\n$response = curl_exec($handle);\r\ncurl_close($handle);\r\n\r\n$decodedResponse = json_decode($response);\r\nprint_r($decodedResponse);"
          }
        ],
        "tags": [
          "audio"
        ],
        "operationId": "createSoundbox",
        "summary": "Create audio collections",
        "description": "This endpoint creates one or more collections (soundboxes). To add tracks, use `POST /audio/collections/{id}/items`.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CollectionCreateRequest"
              },
              "examples": {
                "default": {
                  "description": "Create a soundbox",
                  "value": {
                    "name": "Best rock music"
                  }
                }
              }
            }
          },
          "description": "Collection metadata",
          "required": true
        }
      },
      "get": {
        "parameters": [
          {
            "description": "Page number",
            "in": "query",
            "name": "page",
            "example": "1",
            "schema": {
              "type": "integer",
              "minimum": 1,
              "default": 1
            }
          },
          {
            "description": "Number of results per page",
            "in": "query",
            "name": "per_page",
            "example": "100",
            "schema": {
              "type": "integer",
              "minimum": 1,
              "maximum": 150,
              "default": 100
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CollectionDataList"
                },
                "examples": {
                  "response": {
                    "value": {
                      "data": [
                        {
                          "name": "Test Collection cdad",
                          "updated_time": "2014-11-05T19:29:56-05:00",
                          "id": "5747953",
                          "total_item_count": 0,
                          "created_time": "2014-11-05T19:29:56-05:00"
                        },
                        {
                          "name": "Test Collection ff5f",
                          "updated_time": "2014-11-05T19:29:56-05:00",
                          "id": "5747955",
                          "total_item_count": 0,
                          "created_time": "2014-11-05T19:29:56-05:00"
                        },
                        {
                          "name": "Updated Collection ebc4",
                          "updated_time": "2014-11-05T19:29:58-05:00",
                          "id": "5747957",
                          "total_item_count": 0,
                          "created_time": "2014-11-05T19:29:58-05:00"
                        },
                        {
                          "name": "Test Collection 0072",
                          "updated_time": "2014-11-05T19:32:13-05:00",
                          "id": "5747971",
                          "total_item_count": 0,
                          "created_time": "2014-11-05T19:32:13-05:00"
                        },
                        {
                          "name": "Test Collection d332",
                          "updated_time": "2014-11-05T19:32:13-05:00",
                          "id": "5747973",
                          "total_item_count": 0,
                          "created_time": "2014-11-05T19:32:13-05:00"
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "customer_accessCode": [
              "collections.view"
            ]
          }
        ],
        "tags": [
          "audio"
        ],
        "operationId": "getSoundboxList",
        "summary": "List audio collections",
        "description": "This endpoint lists your collections of audio tracks and their basic attributes."
      }
    },
    "/v2/audio/collections/{id}": {
      "get": {
        "parameters": [
          {
            "description": "Collection ID",
            "in": "path",
            "name": "id",
            "required": true,
            "example": "48433107",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Collection"
                },
                "examples": {
                  "response": {
                    "value": {
                      "name": "Test Collection c28c",
                      "updated_time": "2016-08-18T18:52:56-04:00",
                      "id": "48433107",
                      "total_item_count": 0
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Collection not found"
          }
        },
        "security": [
          {
            "customer_accessCode": [
              "collections.view"
            ]
          }
        ],
        "tags": [
          "audio"
        ],
        "operationId": "getSoundbox",
        "summary": "Get the details of audio collections",
        "description": "This endpoint gets more detailed information about a collection, including the number of items in it and when it was last updated. To get the tracks in collections, use `GET /audio/collections/{id}/items`."
      },
      "post": {
        "parameters": [
          {
            "description": "Collection ID",
            "in": "path",
            "name": "id",
            "required": true,
            "example": "48433107",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "No response was specified"
          },
          "204": {
            "description": "Successfully updated collection"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "customer_accessCode": [
              "collections.edit"
            ]
          }
        ],
        "x-code-samples": [
          {
            "lang": "shell",
            "source": "DATA='{\r\n  \"name\": \"Best rock music\"\r\n}'\r\n\r\ncurl -X POST https://api.shutterstock.com/v2/audio/collections/48433107 \\\r\n-d \"$DATA\" \\\r\n-H \"Content-Type: application/json\" \\\r\n-H \"Accept: application/json\" \\\r\n-H \"Authorization: Bearer $SHUTTERSTOCK_API_TOKEN\""
          },
          {
            "lang": "javascript--nodejs",
            "source": "const sstk = require('shutterstock-api');\r\n\r\nsstk.setAccessToken(process.env.SHUTTERSTOCK_API_TOKEN);\r\n\r\nconst audioApi = new sstk.AudioApi();\r\n\r\nconst collectionId = \"48433107\";\r\n\r\nconst body = {\r\n  \"name\": \"Best rock music\"\r\n};\r\n\r\naudioApi.renameSoundbox(collectionId, body)\r\n.then(function() {\r\n  console.log(\"Success!\");\r\n})\r\n.catch(function(error) {\r\n  console.error(error);\r\n});\r\n"
          },
          {
            "lang": "php",
            "source": "$body = [\r\n  \"name\" => \"Best rock music\"\r\n];\r\n$encodedBody = json_encode($body);\r\n\r\n$options = [\r\n  CURLOPT_URL => \"https://api.shutterstock.com/v2/audio/collections/48433107\",\r\n  CURLOPT_CUSTOMREQUEST => \"POST\",\r\n  CURLOPT_POSTFIELDS => $encodedBody,\r\n  CURLOPT_USERAGENT => \"php/curl\",\r\n  CURLOPT_HTTPHEADER => [\r\n    \"Authorization: Bearer $SHUTTERSTOCK_API_TOKEN\",\r\n    \"Content-Type: application/json\"\r\n  ],\r\n  CURLOPT_RETURNTRANSFER => 1\r\n];\r\n\r\n$handle = curl_init();\r\ncurl_setopt_array($handle, $options);\r\n$response = curl_exec($handle);\r\ncurl_close($handle);\r\n\r\n$decodedResponse = json_decode($response);\r\nprint_r($decodedResponse);"
          }
        ],
        "tags": [
          "audio"
        ],
        "operationId": "renameSoundbox",
        "summary": "Rename audio collections",
        "description": "This endpoint sets a new name for a collection.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CollectionUpdateRequest"
              },
              "examples": {
                "default": {
                  "description": "Renaming a soundbox",
                  "value": {
                    "name": "Best rock music"
                  }
                }
              }
            }
          },
          "description": "Collection changes",
          "required": true
        }
      },
      "delete": {
        "parameters": [
          {
            "description": "Collection ID",
            "in": "path",
            "name": "id",
            "required": true,
            "example": "48433111",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "No response was specified"
          },
          "204": {
            "description": "Successfully deleted collection"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "customer_accessCode": [
              "collections.edit"
            ]
          }
        ],
        "x-code-samples": [
          {
            "lang": "shell",
            "source": "curl -X DELETE https://api.shutterstock.com/v2/audio/collections/48433111 \\\r\n-H \"Accept: application/json\" \\\r\n-H \"Authorization: Bearer $SHUTTERSTOCK_API_TOKEN\""
          },
          {
            "lang": "javascript--nodejs",
            "source": "const sstk = require('shutterstock-api');\r\n\r\nsstk.setAccessToken(process.env.SHUTTERSTOCK_API_TOKEN);\r\n\r\nconst audioApi = new sstk.AudioApi();\r\n\r\nconst collectionId = \"48433107\";\r\n\r\naudioApi.deleteSoundbox(collectionId)\r\n.then(function() {\r\n  console.log(\"Success!\");\r\n})\r\n.catch(function(error) {\r\n  console.error(error);\r\n});"
          },
          {
            "lang": "php",
            "source": "$options = [\r\n  CURLOPT_URL => \"https://api.shutterstock.com/v2/audio/collections/48433111\",\r\n  CURLOPT_USERAGENT => \"php/curl\",\r\n  CURLOPT_CUSTOMREQUEST => \"DELETE\",\r\n  CURLOPT_HTTPHEADER => [\r\n    \"Authorization: Bearer $SHUTTERSTOCK_API_TOKEN\"\r\n  ],\r\n  CURLOPT_RETURNTRANSFER => 1\r\n];\r\n\r\n$handle = curl_init();\r\ncurl_setopt_array($handle, $options);\r\n$response = curl_exec($handle);\r\ncurl_close($handle);\r\n\r\n$decodedResponse = json_decode($response);\r\nprint_r($decodedResponse);"
          }
        ],
        "tags": [
          "audio"
        ],
        "operationId": "deleteSoundbox",
        "summary": "Delete audio collections",
        "description": "This endpoint deletes a collection."
      }
    },
    "/v2/audio/collections/{id}/items": {
      "post": {
        "parameters": [
          {
            "description": "Collection ID",
            "in": "path",
            "name": "id",
            "required": true,
            "example": "48433115",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "No response was specified"
          },
          "204": {
            "description": "Successfully added collection items"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "customer_accessCode": [
              "collections.edit"
            ]
          }
        ],
        "x-code-samples": [
          {
            "lang": "shell",
            "source": "DATA='{\r\n  \"items\": [\r\n    {\r\n      \"id\": \"442583\"\r\n    },\r\n    {\r\n      \"id\": \"7491192\"\r\n    }\r\n  ]\r\n}'\r\n\r\ncurl -X POST https://api.shutterstock.com/v2/audio/collections/48433115/items \\\r\n-d \"$DATA\" \\\r\n-H \"Content-Type: application/json\" \\\r\n-H \"Accept: application/json\" \\\r\n-H \"Authorization: Bearer $SHUTTERSTOCK_API_TOKEN\""
          },
          {
            "lang": "javascript--nodejs",
            "source": "const sstk = require('shutterstock-api');\r\n\r\nsstk.setAccessToken(process.env.SHUTTERSTOCK_API_TOKEN);\r\n\r\nconst audioApi = new sstk.AudioApi();\r\n\r\nconst collectionId = \"48433115\";\r\n\r\nconst body = {\r\n  \"items\": [\r\n    {\r\n      \"id\": \"442583\"\r\n    },\r\n    {\r\n      \"id\": \"7491192\"\r\n    }\r\n  ]\r\n};\r\n\r\naudioApi.addSoundboxItems(collectionId, body)\r\n.then(function() {\r\n  console.log(\"Success!\");\r\n})\r\n.catch(function(error) {\r\n  console.error(error);\r\n});\r\n"
          },
          {
            "lang": "php",
            "source": "$body = [\r\n  \"items\" => [\r\n    [\r\n      \"id\" => \"442583\"\r\n    ],\r\n    [\r\n      \"id\" => \"7491192\"\r\n    ]\r\n  ]\r\n];\r\n$encodedBody = json_encode($body);\r\n\r\n$options = [\r\n  CURLOPT_URL => \"https://api.shutterstock.com/v2/audio/collections/48433115/items\",\r\n  CURLOPT_CUSTOMREQUEST => \"POST\",\r\n  CURLOPT_POSTFIELDS => $encodedBody,\r\n  CURLOPT_USERAGENT => \"php/curl\",\r\n  CURLOPT_HTTPHEADER => [\r\n    \"Authorization: Bearer $SHUTTERSTOCK_API_TOKEN\",\r\n    \"Content-Type: application/json\"\r\n  ],\r\n  CURLOPT_RETURNTRANSFER => 1\r\n];\r\n\r\n$handle = curl_init();\r\ncurl_setopt_array($handle, $options);\r\n$response = curl_exec($handle);\r\ncurl_close($handle);\r\n\r\n$decodedResponse = json_decode($response);\r\nprint_r($decodedResponse);"
          }
        ],
        "tags": [
          "audio"
        ],
        "operationId": "addSoundboxItems",
        "summary": "Add audio tracks to collections",
        "description": "This endpoint adds one or more tracks to a collection by track IDs.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CollectionItemRequest"
              },
              "examples": {
                "default": {
                  "description": "Adds tracks to a soundbox",
                  "value": {
                    "items": [
                      {
                        "id": "442583"
                      },
                      {
                        "id": "7491192"
                      }
                    ]
                  }
                }
              }
            }
          },
          "description": "List of items to add to collection",
          "required": true
        }
      },
      "get": {
        "parameters": [
          {
            "description": "Collection ID",
            "in": "path",
            "name": "id",
            "required": true,
            "example": "48433113",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Page number",
            "in": "query",
            "name": "page",
            "schema": {
              "type": "integer",
              "minimum": 1,
              "default": 1
            }
          },
          {
            "description": "Number of results per page",
            "in": "query",
            "name": "per_page",
            "schema": {
              "type": "integer",
              "minimum": 1,
              "maximum": 150,
              "default": 100
            }
          },
          {
            "description": "Sort order",
            "in": "query",
            "name": "sort",
            "schema": {
              "type": "string",
              "enum": [
                "newest",
                "oldest"
              ],
              "default": "oldest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CollectionItemDataList"
                },
                "examples": {
                  "response": {
                    "value": {
                      "data": [
                        {
                          "added_time": "2016-08-18T18:52:59-04:00",
                          "id": "76688182",
                          "media_type": "audio"
                        },
                        {
                          "added_time": "2016-08-18T18:52:59-04:00",
                          "id": "40005859",
                          "media_type": "audio"
                        }
                      ],
                      "page": 1,
                      "per_page": 100
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "customer_accessCode": [
              "collections.view"
            ]
          }
        ],
        "tags": [
          "audio"
        ],
        "operationId": "getSoundboxItems",
        "summary": "Get the contents of audio collections",
        "description": "This endpoint lists the IDs of tracks in a collection and the date that each was added."
      },
      "delete": {
        "parameters": [
          {
            "description": "Collection ID",
            "in": "path",
            "name": "id",
            "required": true,
            "example": "48433119",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "One or more item IDs to remove from the collection",
            "in": "query",
            "name": "item_id",
            "example": [
              "76688182",
              "40005859"
            ],
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "No response was specified"
          },
          "204": {
            "description": "Successfully removed collection items"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "customer_accessCode": [
              "collections.edit"
            ]
          }
        ],
        "x-code-samples": [
          {
            "lang": "shell",
            "source": "curl -X DELETE https://api.shutterstock.com/v2/audio/collections/48433119/items?item_id=36345523 \\\r\n-H \"Accept: application/json\" \\\r\n-H \"Authorization: Bearer $SHUTTERSTOCK_API_TOKEN\""
          },
          {
            "lang": "javascript--nodejs",
            "source": "const sstk = require('shutterstock-api');\r\n\r\nsstk.setAccessToken(process.env.SHUTTERSTOCK_API_TOKEN);\r\n\r\nconst audioApi = new sstk.AudioApi();\r\n\r\nconst collectionId = \"\";\r\n\r\n// Array of tracks to remove\r\nconst tracksToRemove = {\r\n  item_id: [\r\n    \"76688182\",\r\n    \"40005859\"\r\n  ]\r\n};\r\n\r\naudioApi.deleteSoundboxItems(collectionId, tracksToRemove)\r\n.then(function() {\r\n  console.log(\"Success!\");\r\n})\r\n.catch(function(error) {\r\n  console.error(error);\r\n});"
          },
          {
            "lang": "php",
            "source": "$options = [\r\n  CURLOPT_URL => \"https://api.shutterstock.com/v2/audio/collections/48433119/items?item_id=495863218\",\r\n  CURLOPT_USERAGENT => \"php/curl\",\r\n  CURLOPT_CUSTOMREQUEST => \"DELETE\",\r\n  CURLOPT_HTTPHEADER => [\r\n    \"Authorization: Bearer $SHUTTERSTOCK_API_TOKEN\"\r\n  ],\r\n  CURLOPT_RETURNTRANSFER => 1\r\n];\r\n\r\n$handle = curl_init();\r\ncurl_setopt_array($handle, $options);\r\n$response = curl_exec($handle);\r\ncurl_close($handle);\r\n\r\n$decodedResponse = json_decode($response);\r\nprint_r($decodedResponse);"
          }
        ],
        "tags": [
          "audio"
        ],
        "operationId": "deleteSoundboxItems",
        "summary": "Remove audio tracks from collections",
        "description": "This endpoint removes one or more tracks from a collection."
      }
    },
    "/v2/editorial/search": {
      "get": {
        "parameters": [
          {
            "description": "One or more search terms separated by spaces",
            "in": "query",
            "name": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Sort by",
            "in": "query",
            "name": "sort",
            "schema": {
              "type": "string",
              "enum": [
                "relevant",
                "newest",
                "oldest"
              ],
              "default": "relevant"
            }
          },
          {
            "description": "Show editorial content within a certain editorial category; specify by category name",
            "in": "query",
            "name": "category",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Show only editorial content that is available for distribution in a certain country; specify with 3-letter country code",
            "in": "query",
            "name": "country",
            "required": true,
            "example": "USA",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Show only editorial content from certain suppliers",
            "in": "query",
            "name": "supplier_code",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "description": "Show only editorial content generated on or after a specific date, in the format of YYYY-MM-DD",
            "in": "query",
            "name": "date_start",
            "schema": {
              "type": "string",
              "format": "date"
            }
          },
          {
            "description": "Show only editorial content generated on or before a specific date, in the format of YYYY-MM-DD",
            "in": "query",
            "name": "date_end",
            "schema": {
              "type": "string",
              "format": "date"
            }
          },
          {
            "description": "Number of results per page, defaults to 20",
            "in": "query",
            "name": "per_page",
            "schema": {
              "type": "integer",
              "minimum": 1,
              "maximum": 50,
              "default": 20
            }
          },
          {
            "description": "The cursor of the page with which to start fetching results; this cursor is returned from previous requests",
            "in": "query",
            "name": "cursor",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EditorialSearchResults"
                },
                "examples": {
                  "response": {
                    "value": {
                      "per_page": 1,
                      "total_count": 1556949,
                      "search_id": "q8igACM5gqQY75owjLoVvw",
                      "next": "eyJ2IjoxLCJzIjoxfQ==",
                      "prev": "",
                      "data": [
                        {
                          "id": "9804979n",
                          "title": "Hong Kong kicks off international e-Sports competition, China - 24 Aug 2018",
                          "caption": "",
                          "description": "Members of the TyLoo e-Sports team from China prepare to face off against the Kinguin e-Sports team from Poland at the ICBC (Asia) e-Sports and Music Festival Hong Kong 2018, Hong Kong, China, 24 August 2018. The festival runs from 24 to 26 August with professional gamers from around the world competing in international e-sports tournaments.",
                          "byline": "ALEX HOFFORD/EPA-EFE/Shutterstock",
                          "keywords": [],
                          "date_taken": "2018-08-24",
                          "categories": [],
                          "aspect": 1.481,
                          "assets": {
                            "thumb_170": {
                              "height": 115,
                              "width": 170,
                              "url": "https://editorial01.shutterstock.com/thumb/9804979n/c4377a53/Shutterstock_9804979n.jpg"
                            },
                            "thumb_220": {
                              "height": 149,
                              "width": 220,
                              "url": "https://editorial01.shutterstock.com/thumb-220/9804979n/c57a68c7/Shutterstock_9804979n.jpg"
                            },
                            "watermark_450": {
                              "height": 304,
                              "width": 450,
                              "url": "https://editorial01.shutterstock.com/wm-preview-450/9804979n/37d19dce/Shutterstock_9804979n.jpg"
                            },
                            "watermark_1500": {
                              "height": 1500,
                              "width": 1040,
                              "url": "https://editorial01.shutterstock.com/wm-preview-1500/9933285a/ab82fea4/Shutterstock_9933285a.jpg"
                            },
                            "original": {
                              "display_name": "Original",
                              "height": 3263,
                              "width": 4831,
                              "is_licensable": true
                            },
                            "small_jpg": {
                              "display_name": "Small",
                              "height": 337,
                              "width": 500,
                              "is_licensable": true
                            },
                            "medium_jpg": {
                              "display_name": "Med",
                              "height": 675,
                              "width": 1000,
                              "is_licensable": true
                            }
                          }
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "406": {
            "description": "Not Acceptable"
          }
        },
        "security": [
          {
            "basic": []
          },
          {
            "customer_accessCode": []
          }
        ],
        "tags": [
          "editorial"
        ],
        "x-code-samples": [
          {
            "lang": "shell",
            "source": "curl -X GET https://api.shutterstock.com/v2/editorial/search \\\r\n-H \"Accept: application/json\" \\\r\n-G \\\r\n-H \"Authorization: Bearer $SHUTTERSTOCK_API_TOKEN\" \\\r\n--data-urlencode \"query=football\" \\\r\n--data-urlencode \"country=USA\" \\\r\n--data-urlencode \"sort=newest\" \\\r\n--data-urlencode \"date_start=2018-10-23\"\r\n"
          },
          {
            "lang": "javascript--nodejs",
            "source": "const sstk = require('shutterstock-api');\r\n\r\nsstk.setAccessToken(process.env.SHUTTERSTOCK_API_TOKEN);\r\n\r\nconst api = new sstk.EditorialApi();\r\n\r\nconst queryParams = {\r\n  query: 'football',\r\n  country: 'USA',\r\n  sort: 'newest',\r\n  date_start: '2018-10-23'\r\n};\r\n\r\nconst country = 'USA';\r\n\r\napi.searchEditorial(country, queryParams)\r\n.then(function({data}) {\r\n  console.log(data);\r\n})\r\n.catch(function(error) {\r\n  console.error(error);\r\n});\r\n"
          },
          {
            "lang": "php",
            "source": "$queryFields = [\r\n  \"query\" => \"football\",\r\n  \"country\" => \"USA\",\r\n  \"date_start\" => \"2018-10-23\",\r\n  \"sort\" => \"newest\"\r\n];\r\n\r\n$options = [\r\n  CURLOPT_URL => \"https://api.shutterstock.com/v2/editorial/search?\" . http_build_query($queryFields),\r\n  CURLOPT_USERAGENT => \"php/curl\",\r\n  CURLOPT_HTTPHEADER => [\r\n    \"Authorization: Bearer $SHUTTERSTOCK_API_TOKEN\"\r\n  ],\r\n  CURLOPT_RETURNTRANSFER => 1\r\n];\r\n\r\n$handle = curl_init();\r\ncurl_setopt_array($handle, $options);\r\n$response = curl_exec($handle);\r\ncurl_close($handle);\r\n\r\n$decodedResponse = json_decode($response);\r\nprint_r($decodedResponse);\r\n"
          }
        ],
        "operationId": "searchEditorial",
        "summary": "Search editorial content",
        "description": "This endpoint searches for editorial images. If you specify more than one search parameter, the API uses an AND condition. Array parameters can be specified multiple times; in this case, the API uses an AND or an OR condition with those values, depending on the parameter. You can also filter search terms out in the `query` parameter by prefixing the term with NOT."
      }
    },
    "/v2/editorial/{id}": {
      "get": {
        "parameters": [
          {
            "description": "Editorial ID",
            "in": "path",
            "name": "id",
            "required": true,
            "example": "9926131a",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Returns only if the content is available for distribution in a certain country; specify with 3-letter country code",
            "in": "query",
            "name": "country",
            "required": true,
            "example": "USA",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EditorialContent"
                },
                "examples": {
                  "response": {
                    "value": {
                      "id": "9767412v",
                      "title": "Tokyo 2020 Olympics mascot Miraitowa and Paralympics mascot Someity debut, Japan - 22 Jul 2018",
                      "caption": "",
                      "description": "Tokyo 2020 Olympics mascot Miraitowa greets with former Japanese prime minister Yoshiko Mori, President of Tokyo 2020 Olympics Committee, as mascots of Tokyo 2020 Olympics and Paralympics debut in Tokyo, Japan, 22 July 2018. Tokyo 2020 Olympics will start on 24 July 2020 and run until 09 August 2020.",
                      "byline": "KIMIMASA MAYAMA/EPA-EFE/Shutterstock",
                      "keywords": [],
                      "date_taken": "2018-07-22",
                      "categories": [],
                      "aspect": 1.33,
                      "assets": {
                        "thumb_170": {
                          "height": 128,
                          "width": 170,
                          "url": "https://editorial01.shutterstock.com/thumb/9767412v/36aeb953/Shutterstock_9767412v.jpg"
                        },
                        "thumb_220": {
                          "height": 165,
                          "width": 220,
                          "url": "https://editorial01.shutterstock.com/thumb-220/9767412v/b786b189/Shutterstock_9767412v.jpg"
                        },
                        "watermark_450": {
                          "height": 338,
                          "width": 450,
                          "url": "https://editorial01.shutterstock.com/wm-preview-450/9767412v/f75b6680/Shutterstock_9767412v.jpg"
                        },
                        "watermark_1500": {
                          "height": 1500,
                          "width": 1040,
                          "url": "https://editorial01.shutterstock.com/wm-preview-1500/9933285a/ab82fea4/Shutterstock_9933285a.jpg"
                        },
                        "original": {
                          "display_name": "Original",
                          "height": 3447,
                          "width": 4586,
                          "is_licensable": true
                        },
                        "small_jpg": {
                          "display_name": "Small",
                          "height": 375,
                          "width": 500,
                          "is_licensable": true
                        },
                        "medium_jpg": {
                          "display_name": "Med",
                          "height": 751,
                          "width": 1000,
                          "is_licensable": true
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "406": {
            "description": "Not Acceptable"
          }
        },
        "security": [
          {
            "basic": []
          },
          {
            "customer_accessCode": []
          }
        ],
        "tags": [
          "editorial"
        ],
        "operationId": "getEditorialImage",
        "summary": "Get editorial content details",
        "description": "This endpoint shows information about an editorial image, including a URL to a preview image and the sizes that it is available in."
      }
    },
    "/v2/editorial/licenses": {
      "post": {
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LicenseEditorialContentResultDataList"
                },
                "examples": {
                  "response": {
                    "value": {
                      "data": [
                        {
                          "editorial_id": "69656358",
                          "download": {
                            "url": "https://s3-eu-west-1.amazonaws.com/api-downloads.rexfeatures.com/[random-characters].jpg?Expires=1524717323"
                          }
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "406": {
            "description": "Not Acceptable"
          }
        },
        "security": [
          {
            "customer_accessCode": [
              "licenses.create"
            ]
          }
        ],
        "x-code-samples": [
          {
            "lang": "shell",
            "source": "DATA='{\r\n  \"editorial\": [\r\n    {\r\n      \"editorial_id\": \"8594090h\",\r\n      \"license\": \"premier_editorial_comp\"\r\n    }\r\n  ],\r\n  \"country\": \"USA\"\r\n}'\r\n\r\ncurl -X POST https://api.shutterstock.com/v2/editorial/licenses \\\r\n-d \"$DATA\" \\\r\n-H \"Content-Type: application/json\" \\\r\n-H \"Accept: application/json\" \\\r\n-H \"Authorization: Bearer $SHUTTERSTOCK_API_TOKEN\""
          },
          {
            "lang": "javascript--nodejs",
            "source": "const sstk = require('shutterstock-api');\r\n\r\nsstk.setAccessToken(process.env.SHUTTERSTOCK_API_TOKEN);\r\n\r\nconst api = new sstk.EditorialApi();\r\n\r\nconst body = {\r\n  editorial: [\r\n    {\r\n      editorial_id: \"8594090h\",\r\n      license: \"premier_editorial_comp\"\r\n    }\r\n  ],\r\n  country: \"USA\"\r\n};\r\n\r\napi.licenseEditorialImage(body)\r\n.then(function({data}) {\r\n  console.log(data);\r\n})\r\n.catch(function(error) {\r\n  console.error(error);\r\n});\r\n"
          },
          {
            "lang": "php",
            "source": "$body = [\r\n  \"editorial\" => [\r\n    [\r\n      \"editorial_id\" => \"8594090h\",\r\n      \"license\" => \"premier_editorial_comp\"\r\n    ]\r\n  ],\r\n  \"country\" => \"USA\"\r\n];\r\n$encodedBody = json_encode($body);\r\n\r\n$options = [\r\n  CURLOPT_URL => \"https://api.shutterstock.com/v2/editorial/licenses\",\r\n  CURLOPT_CUSTOMREQUEST => \"POST\",\r\n  CURLOPT_POSTFIELDS => $encodedBody,\r\n  CURLOPT_USERAGENT => \"php/curl\",\r\n  CURLOPT_HTTPHEADER => [\r\n    \"Authorization: Bearer $SHUTTERSTOCK_API_TOKEN\",\r\n    \"Content-Type: application/json\"\r\n  ],\r\n  CURLOPT_RETURNTRANSFER => 1\r\n];\r\n\r\n$handle = curl_init();\r\ncurl_setopt_array($handle, $options);\r\n$response = curl_exec($handle);\r\ncurl_close($handle);\r\n\r\n$decodedResponse = json_decode($response);\r\nprint_r($decodedResponse);"
          }
        ],
        "tags": [
          "editorial"
        ],
        "operationId": "licenseEditorialImage",
        "summary": "License editorial content",
        "description": "This endpoint gets licenses for one or more editorial images. You must specify the country and one or more editorial images to license.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LicenseEditorialContentRequest"
              },
              "examples": {
                "default": {
                  "value": {
                    "editorial": [
                      {
                        "editorial_id": "8594090h",
                        "license": "premier_editorial_comp"
                      }
                    ],
                    "country": "USA"
                  }
                }
              }
            }
          },
          "description": "License editorial content",
          "required": true
        }
      }
    },
    "/v2/editorial/livefeeds": {
      "get": {
        "parameters": [
          {
            "description": "Returns only livefeeds that are available for distribution in a certain country; specify with 3-letter country code",
            "in": "query",
            "name": "country",
            "required": true,
            "example": "USA",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Page number",
            "in": "query",
            "name": "page",
            "schema": {
              "type": "integer",
              "minimum": 1,
              "default": 1
            }
          },
          {
            "description": "Number of results per page, defaults to 20",
            "in": "query",
            "name": "per_page",
            "schema": {
              "type": "integer",
              "minimum": 1,
              "maximum": 50,
              "default": 20
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EditorialLivefeedList"
                },
                "examples": {
                  "response": {
                    "value": {
                      "page": 1,
                      "per_page": 1,
                      "total_count": 6011,
                      "data": [
                        {
                          "id": "2018%2F10%2F19%2F'Butterfly'%20photocall%2C%20Rome%20Film%20Festival",
                          "name": "'Butterfly' photocall, Rome Film Festival",
                          "total_item_count": 24,
                          "created_time": "2018-10-19T20:27:26+00:00",
                          "cover_item": {
                            "height": 170,
                            "width": 113,
                            "url": "https://editorial01.shutterstock.com/thumb/9938080a/532b2be1/Shutterstock_9938080a.jpg",
                            "id": "9938080a"
                          }
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "406": {
            "description": "Not Acceptable"
          }
        },
        "security": [
          {
            "basic": []
          },
          {
            "customer_accessCode": []
          }
        ],
        "tags": [
          "editorial"
        ],
        "operationId": "getEditorialLivefeedList",
        "summary": "Get editorial livefeed list"
      }
    },
    "/v2/editorial/livefeeds/{id}": {
      "get": {
        "parameters": [
          {
            "description": "Editorial livefeed ID; must be an URI encoded string",
            "in": "path",
            "name": "id",
            "required": true,
            "example": "2018%2F10%2F15%2FWomen%20of%20the%20Year%20Lunch%20%26%20Awards%2C%20London",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Returns only if the livefeed is available for distribution in a certain country; specify with 3-letter country code",
            "in": "query",
            "name": "country",
            "required": true,
            "example": "USA",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EditorialLivefeed"
                },
                "examples": {
                  "response": {
                    "value": {
                      "id": "2018%2F10%2F19%2F'The%20House%20with%20a%20Clock%20in%20Its%20Walls'%20premiere%2C%20Rome%20Film%20Festival",
                      "name": "'The House with a Clock in Its Walls' premiere, Rome Film Festival",
                      "total_item_count": 100,
                      "cover_item": {
                        "height": 170,
                        "width": 114,
                        "url": "https://editorial01.shutterstock.com/thumb/9938511p/7d1f17d9/Shutterstock_9938511p.jpg",
                        "id": "9938511p"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "406": {
            "description": "Not Acceptable"
          }
        },
        "security": [
          {
            "basic": []
          },
          {
            "customer_accessCode": []
          }
        ],
        "tags": [
          "editorial"
        ],
        "operationId": "getEditorialLivefeed",
        "summary": "Get editorial livefeed"
      }
    },
    "/v2/editorial/livefeeds/{id}/items": {
      "get": {
        "parameters": [
          {
            "description": "Editorial livefeed ID; must be an URI encoded string",
            "in": "path",
            "name": "id",
            "required": true,
            "example": "2018%2F10%2F15%2FWomen%20of%20the%20Year%20Lunch%20%26%20Awards%2C%20London",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Returns only if the livefeed items are available for distribution in a certain country; specify with 3-letter country code",
            "in": "query",
            "name": "country",
            "required": true,
            "example": "USA",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EditorialContentDataList"
                },
                "examples": {
                  "response": {
                    "value": {
                      "data": [
                        {
                          "id": "9938573m",
                          "title": "'The House with a Clock in Its Walls' premiere, Rome Film Festival, Italy - 19 Oct 2018",
                          "caption": "",
                          "description": "Christian Marazziti and Ariadna Romero",
                          "byline": "Maurizio D'Avanzo/IPA/Shutterstock",
                          "keywords": [],
                          "date_taken": "2018-10-19",
                          "categories": [
                            {
                              "name": "Actor"
                            },
                            {
                              "name": "Female"
                            },
                            {
                              "name": "Personality"
                            }
                          ],
                          "aspect": 0.666,
                          "assets": {
                            "thumb_170": {
                              "height": 170,
                              "width": 113,
                              "url": "https://editorial01.shutterstock.com/thumb/9938573m/4d5708ce/Shutterstock_9938573m.jpg"
                            },
                            "thumb_220": {
                              "height": 220,
                              "width": 146,
                              "url": "https://editorial01.shutterstock.com/thumb-220/9938573m/b78aabde/Shutterstock_9938573m.jpg"
                            },
                            "watermark_450": {
                              "height": 450,
                              "width": 300,
                              "url": "https://editorial01.shutterstock.com/wm-preview-450/9938573m/4a9a4add/Shutterstock_9938573m.jpg"
                            },
                            "watermark_1500": {
                              "height": 1500,
                              "width": 1040,
                              "url": "https://editorial01.shutterstock.com/wm-preview-1500/9933285a/ab82fea4/Shutterstock_9933285a.jpg"
                            },
                            "original": {
                              "display_name": "Original",
                              "height": 4928,
                              "width": 3280,
                              "is_licensable": true
                            },
                            "small_jpg": {
                              "display_name": "Small",
                              "height": 500,
                              "width": 332,
                              "is_licensable": true
                            },
                            "medium_jpg": {
                              "display_name": "Med",
                              "height": 1000,
                              "width": 660,
                              "is_licensable": true
                            }
                          }
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "406": {
            "description": "Not Acceptable"
          }
        },
        "security": [
          {
            "basic": []
          },
          {
            "customer_accessCode": []
          }
        ],
        "tags": [
          "editorial"
        ],
        "operationId": "getEditorialLivefeedItems",
        "summary": "Get editorial livefeed items"
      }
    },
    "/v2/contributors": {
      "get": {
        "parameters": [
          {
            "description": "One or more contributor IDs",
            "in": "query",
            "name": "id",
            "required": true,
            "example": [
              800506,
              1653538
            ],
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ContributorProfileDataList"
                },
                "examples": {
                  "response": {
                    "value": {
                      "data": [
                        {
                          "id": "800506",
                          "display_name": "Dave Pusey",
                          "about": "Dave is a self confessed emotional photographer, capturing, keeping and sharing images for the stories of the wild that they convey.",
                          "equipment": [
                            "Both Canon & Nikon"
                          ],
                          "contributor_type": [
                            "illustrator",
                            "videographer"
                          ],
                          "styles": [
                            "black_and_white",
                            "landscape",
                            "nature"
                          ],
                          "subjects": [
                            "animals",
                            "holiday",
                            "nature",
                            "travel",
                            "wildlife"
                          ],
                          "website": "leovantage.com",
                          "location": "za",
                          "portfolio_url": "http://www.shutterstock.com/g/davep",
                          "social_media": {
                            "facebook": "pages/Dave-Pusey-Photography/131399733564475"
                          }
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "customer_accessCode": []
          }
        ],
        "tags": [
          "contributors"
        ],
        "operationId": "getContributorList",
        "summary": "Get details about multiple contributors",
        "description": "This endpoint lists information about one or more contributors, including contributor type, equipment they use and other attributes."
      }
    },
    "/v2/contributors/{contributor_id}": {
      "get": {
        "parameters": [
          {
            "description": "Contributor ID",
            "in": "path",
            "name": "contributor_id",
            "required": true,
            "example": 1653538,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ContributorProfile"
                },
                "examples": {
                  "response": {
                    "value": {
                      "id": "1653538",
                      "display_name": "Mees Kuiper",
                      "about": "A 18 year old photographer living in Amsterdam.",
                      "equipment": [
                        "Nikon D7000",
                        "Nikkor 70-300mm",
                        "Nikkor 24-70mm"
                      ],
                      "contributor_type": [
                        "photographer",
                        "illustrator",
                        "videographer"
                      ],
                      "styles": [],
                      "subjects": [
                        "animals",
                        "buildings",
                        "nature",
                        "people",
                        "wildlife"
                      ],
                      "location": "nl",
                      "portfolio_url": "http://www.shutterstock.com/g/Mees Kuiper",
                      "social_media": {}
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "customer_accessCode": []
          }
        ],
        "tags": [
          "contributors"
        ],
        "operationId": "getContributor",
        "summary": "Get details about a single contributor",
        "description": "This endpoint shows information about a single contributor, including contributor type, equipment they use, and other attributes."
      }
    },
    "/v2/contributors/{contributor_id}/collections": {
      "get": {
        "parameters": [
          {
            "description": "Contributor ID",
            "in": "path",
            "name": "contributor_id",
            "required": true,
            "example": 800506,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Sort order",
            "in": "query",
            "name": "sort",
            "schema": {
              "type": "string",
              "enum": [
                "newest",
                "last_updated",
                "item_count"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CollectionDataList"
                },
                "examples": {
                  "response": {
                    "value": {
                      "data": [
                        {
                          "name": "Lion Cubs",
                          "cover_item": {
                            "id": "87672997",
                            "media_type": "image"
                          },
                          "updated_time": "2014-05-01T05:22:07-04:00",
                          "id": "135931",
                          "total_item_count": 10,
                          "created_time": "2012-04-07T02:07:28-04:00"
                        },
                        {
                          "name": "African Landscapes",
                          "cover_item": {
                            "id": "79489261",
                            "media_type": "image"
                          },
                          "updated_time": "2014-05-01T05:38:34-04:00",
                          "id": "1991564",
                          "total_item_count": 5,
                          "created_time": "2014-05-01T05:23:20-04:00"
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Contributor not found"
          }
        },
        "security": [
          {
            "customer_accessCode": []
          }
        ],
        "tags": [
          "contributors"
        ],
        "operationId": "getContributorCollectionsList",
        "summary": "List contributors' collections",
        "description": "This endpoint lists collections based on contributor ID."
      }
    },
    "/v2/contributors/{contributor_id}/collections/{id}": {
      "get": {
        "parameters": [
          {
            "description": "Contributor ID",
            "in": "path",
            "name": "contributor_id",
            "required": true,
            "example": 800506,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Collection ID that belongs to the contributor",
            "in": "path",
            "name": "id",
            "required": true,
            "example": 1991678,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Collection"
                },
                "examples": {
                  "response": {
                    "value": {
                      "name": "Baby Elephants",
                      "cover_item": {
                        "id": "168592952",
                        "media_type": "image"
                      },
                      "updated_time": "2014-05-01T05:50:21-04:00",
                      "id": "1991678",
                      "total_item_count": 3
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Set not found"
          }
        },
        "security": [
          {
            "customer_accessCode": []
          }
        ],
        "tags": [
          "contributors"
        ],
        "operationId": "getContributorCollections",
        "summary": "Get details about contributors' collections",
        "description": "This endpoint gets more detailed information about a contributor's collection, including its cover image, timestamps for its creation, and most recent update. To get the items in collections, use GET /contributors/{contributor_id}/collections/{id}/items."
      }
    },
    "/v2/contributors/{contributor_id}/collections/{id}/items": {
      "get": {
        "parameters": [
          {
            "description": "Contributor ID",
            "in": "path",
            "name": "contributor_id",
            "required": true,
            "example": 800506,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Collection ID that belongs to the contributor",
            "in": "path",
            "name": "id",
            "required": true,
            "example": 1991678,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Page number",
            "in": "query",
            "name": "page",
            "schema": {
              "type": "integer",
              "minimum": 1,
              "default": 1
            }
          },
          {
            "description": "Number of results per page",
            "in": "query",
            "name": "per_page",
            "schema": {
              "type": "integer",
              "minimum": 1,
              "maximum": 50,
              "default": 20
            }
          },
          {
            "description": "Sort order",
            "in": "query",
            "name": "sort",
            "schema": {
              "type": "string",
              "enum": [
                "newest",
                "oldest"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CollectionItemDataList"
                },
                "examples": {
                  "response": {
                    "value": {
                      "data": [
                        {
                          "added_time": "2014-05-01T05:49:46-04:00",
                          "id": "168592952",
                          "media_type": "image"
                        },
                        {
                          "added_time": "2014-05-01T05:49:59-04:00",
                          "id": "88269310",
                          "media_type": "image"
                        },
                        {
                          "added_time": "2014-05-01T05:50:21-04:00",
                          "id": "94373977",
                          "media_type": "image"
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Set not found"
          }
        },
        "security": [
          {
            "customer_accessCode": []
          }
        ],
        "tags": [
          "contributors"
        ],
        "operationId": "getContributorCollectionItems",
        "summary": "Get the items in contributors' collections",
        "description": "This endpoint lists the IDs of items in a contributor's collection and the date that each was added."
      }
    },
    "/v2/user": {
      "post": {
        "responses": {
          "200": {
            "description": "No response was specified",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserPostResponse"
                }
              }
            }
          },
          "201": {
            "description": "Successfully registered"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "customer_accessCode": []
          }
        ],
        "tags": [
          "users"
        ],
        "operationId": "createUser",
        "summary": "Register user",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserPostRequest"
              },
              "examples": {
                "default": {
                  "value": {
                    "email": "user@domain.com",
                    "username": "userfromdomain",
                    "password": "totallysafepassword"
                  }
                }
              }
            }
          },
          "description": "User details",
          "required": true
        }
      },
      "get": {
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserDetails"
                },
                "examples": {
                  "response": {
                    "value": {
                      "id": "101782699",
                      "username": "yourusername",
                      "full_name": "your name",
                      "first_name": "firstname",
                      "last_name": "lastname",
                      "language": "es",
                      "contributor_id": "212"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "customer_accessCode": [
              "user.view"
            ]
          }
        ],
        "tags": [
          "users"
        ],
        "operationId": "getUser",
        "summary": "Get user details"
      }
    },
    "/v2/user/access_token": {
      "get": {
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AccessTokenDetails"
                },
                "examples": {
                  "response": {
                    "value": {
                      "client_id": "bf6e5dabd4rc1d770dc8",
                      "realm": "customer",
                      "scopes": [
                        "user.view",
                        "user.edit"
                      ],
                      "username": "testuser",
                      "user_id": "120229367",
                      "customer_id": "148363",
                      "expires_in": 361354404
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "customer_accessCode": []
          }
        ],
        "tags": [
          "users"
        ],
        "operationId": "getAccessToken",
        "summary": "Get access token details"
      }
    },
    "/v2/user/subscriptions": {
      "get": {
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SubscriptionDataList"
                },
                "examples": {
                  "response": {
                    "value": {
                      "data": [
                        {
                          "id": "s1729",
                          "expiration_time": "2016-11-17T16:46:36-05:00",
                          "license": "standard",
                          "description": "25-A-Day Subscription",
                          "formats": [
                            {
                              "size": "huge",
                              "format": "jpg",
                              "media_type": "image",
                              "min_resolution": 4000000,
                              "description": "Huge"
                            },
                            {
                              "size": "medium",
                              "format": "jpg",
                              "media_type": "image",
                              "min_resolution": 1000,
                              "description": "Med"
                            },
                            {
                              "size": "supersize",
                              "format": "jpg",
                              "media_type": "image",
                              "min_resolution": 16000000,
                              "description": "Super"
                            },
                            {
                              "size": "small",
                              "format": "jpg",
                              "media_type": "image",
                              "min_resolution": 500,
                              "description": "Small"
                            },
                            {
                              "size": "vector",
                              "format": "eps",
                              "media_type": "image",
                              "description": "Vector"
                            }
                          ]
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "customer_accessCode": [
              "purchases.view"
            ]
          }
        ],
        "tags": [
          "users"
        ],
        "operationId": "getUserSubsciptionList",
        "summary": "List user subscriptions"
      }
    },
    "/v2/test": {
      "get": {
        "parameters": [
          {
            "description": "Text to echo",
            "in": "query",
            "name": "text",
            "schema": {
              "type": "string",
              "default": "ok"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TestEcho"
                },
                "examples": {
                  "response": {
                    "value": {
                      "text": "ok"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "tags": [
          "test"
        ],
        "operationId": "echo",
        "summary": "Echo text"
      }
    },
    "/v2/test/validate": {
      "get": {
        "parameters": [
          {
            "description": "Integer ID",
            "in": "query",
            "name": "id",
            "required": true,
            "example": 123,
            "schema": {
              "type": "integer"
            }
          },
          {
            "description": "List of tags",
            "in": "query",
            "name": "tag",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "description": "User agent",
            "in": "header",
            "name": "user-agent",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TestValidate"
                },
                "examples": {
                  "response": {
                    "value": {
                      "header": {
                        "user-agent": "PostmanRuntime/7.1.1"
                      },
                      "query": {
                        "id": 12
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "tags": [
          "test"
        ],
        "operationId": "validate",
        "summary": "Validate input"
      }
    },
    "/v2/oauth/authorize": {
      "get": {
        "parameters": [
          {
            "description": "Client ID (Consumer Key) of your application",
            "in": "query",
            "name": "client_id",
            "example": "6d097450b209c6dcd859",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "User type to be authorized (usually 'customer')",
            "in": "query",
            "name": "realm",
            "example": "customer",
            "schema": {
              "type": "string",
              "enum": [
                "customer",
                "contributor"
              ],
              "default": "customer"
            }
          },
          {
            "description": "The callback URI to send the request to after authorization; must use a host name that is registered with your application",
            "in": "query",
            "name": "redirect_uri",
            "example": "localhost",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Type of temporary authorization code that will be used to generate an access code; the only valid value is 'code'",
            "in": "query",
            "name": "response_type",
            "example": "code",
            "required": true,
            "schema": {
              "type": "string",
              "enum": [
                "code"
              ]
            }
          },
          {
            "description": "Space-separated list of scopes to be authorized",
            "in": "query",
            "name": "scope",
            "example": "user.view",
            "schema": {
              "type": "string",
              "default": "user.view"
            }
          },
          {
            "description": "Unique value used by the calling app to verify the request",
            "in": "query",
            "name": "state",
            "example": "1540290465000",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "No response was specified"
          },
          "302": {
            "description": "Redirect user to authenticate with Shutterstock",
            "content": {
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuthorizeResponse"
                },
                "examples": {
                  "default": {
                    "description": "Redirect user to authenticate with Shutterstock",
                    "value": "https://accounts.shutterstock.com/login?next=%2Foauth%2Fauthorize%3Fresponse_type%3Dcode%26state%3D1539619928633%26scope%3Dlicenses.create%20licenses.view%20purchases.view%26client_id%3D6d097450b209c6dcd859%26redirect_uri%3Dhttp%3A%2F%2Flocalhost%3A3000%2Fmyapp%2Fauth%2Fcallback%26realm%3Dcustomer"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "x-code-samples": [
          {
            "lang": "shell",
            "source": "curl \"https://api.shutterstock.com/v2/oauth/authorize\" \\ -X GET \\ -G \\ --data-urlencode \"scope=licenses.create licenses.view purchases.view\" \\ --data-urlencode \"state=demo_`date +%s`\" \\ --data-urlencode \"response_type=code\" \\ --data-urlencode \"redirect_uri=http://localhost:3000/callback\" \\ --data-urlencode \"client_id=860bde70bb335163e2e4\""
          },
          {
            "lang": "javascript--nodejs",
            "source": "const request = require(\"request-promise\");\r\n\r\nrequest.get(\"https://api.shutterstock.com/v2/oauth/authorize\", {\r\n  headers: {\r\n    \"User-Agent\": \"request\"\r\n  },\r\n  qs: {\r\n    \"scope\": \"licenses.create licenses.view purchases.view\",\r\n    \"state\": \"demo_\" + Date.now(),\r\n    \"response_type\": \"code\",\r\n    \"redirect_uri\": \"http://localhost:3000/callback\",\r\n    \"client_id\": \"860bde70bb335163e2e4\"\r\n  },\r\n  useQueryString: true\r\n})\r\n.then(res => {\r\n  console.log(res);\r\n});\r\n"
          },
          {
            "lang": "php",
            "source": "$queryFields = [ \"client_id\" => \"860bde70bb335163e2e4\", \"redirect_uri\" => \"http://localhost:3000/callback\", \"response_type\" => \"code\", \"scope\" => \"licenses.create licenses.view purchases.view\", \"state\" => time() ];\n$options = [ CURLOPT_URL => \"https://api.shutterstock.com/v2/oauth/authorize?\" . http_build_query($queryFields), CURLOPT_USERAGENT => \"php/curl\", CURLOPT_RETURNTRANSFER => 1 ];\n$handle = curl_init(); curl_setopt_array($handle, $options); $response = curl_exec($handle); curl_close($handle);\n$decodedResponse = json_decode($response); print_r($decodedResponse);"
          }
        ],
        "tags": [
          "oauth"
        ],
        "operationId": "authorize",
        "summary": "Authorize applications",
        "description": "This endpoint returns a redirect URI (in the 'Location' header) that the customer uses to authorize your application and, together with POST /v2/oauth/access_token, generate an access token that represents that authorization."
      }
    },
    "/v2/oauth/access_token": {
      "post": {
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OauthAccessTokenResponse"
                },
                "examples": {
                  "response": {
                    "value": {
                      "access_token": "v2/NmQwOTc0NTBiMjA5YzZkY2Q4NTkvMTA4OTg1MDk5L2N1c3RvbWVyLzIvZjB2a0RseGo4Rkt6ZjRmVWJNMm10V2VzcHh1NTBlZWJ6andUQU1NeTVYYnNFTDVWOFRJakItS2RnZTlmbEY1Y3haNWdXLUtYc2JhaXo5djk0V0p2QzZUUWZ4c2FNWm41NkdLYUgyVWlCaVUtQTNVMV9YQWpzd3lpblI3SlZEem8wSG1qQ2NzSkJlX3VQTnNXenBIdkd4SXViVi1rRGJTVENCV0g1U3U0RXRJSV9rSm5lQkl5QXlvbm5JN241UUhv",
                      "token_type": "Bearer"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "x-code-samples": [
          {
            "lang": "shell",
            "source": "curl \"https://api.shutterstock.com/v2/oauth/access_token\" \\ -X POST \\ --data-urlencode \"client_id=860bde70bb335163e2e4\" \\ --data-urlencode \"client_secret=225d245d28e5b1a37db7fd4ceb8cdf360a3ae5a7\" \\ --data-urlencode \"grant_type=authorization_code\" \\ --data-urlencode \"code=VaRLQ3rICmWjGr4ciI-GwR\""
          },
          {
            "lang": "javascript--nodejs",
            "source": "const request = require(\"request-promise\");\r\n\r\nconst body = {\r\n  \"client_id\": \"860bde70bb335163e2e4\",\r\n  \"client_secret\": \"225d245d28e5b1a37db7fd4ceb8cdf360a3ae5a7\",\r\n  \"grant_type\": \"authorization_code\",\r\n  \"code\": \"VaRLQ3rICmWjGr4ciI-GwR\"\r\n}\r\n\r\nrequest.post(\"https://api.shutterstock.com/v2/oauth/access_token\", {\r\n  headers: {\r\n    \"User-Agent\": \"request\"\r\n  },\r\n  body: body,\r\n  json: true\r\n})\r\n.then(res => {\r\n  console.log(res);\r\n});\r\n"
          },
          {
            "lang": "php",
            "source": "$body = [ \"client_id\" => \"860bde70bb335163e2e4\", \"client_secret\" => \"225d245d28e5b1a37db7fd4ceb8cdf360a3ae5a7\", \"grant_type\" => \"authorization_code\", \"code\" => \"VaRLQ3rICmWjGr4ciI-GwR\" ]; $encodedBody = json_encode($body);\n$options = [ CURLOPT_URL => \"https://api.shutterstock.com/v2/oauth/access_token\", CURLOPT_CUSTOMREQUEST => \"POST\", CURLOPT_POSTFIELDS => $encodedBody, CURLOPT_USERAGENT => \"php/curl\", CURLOPT_RETURNTRANSFER => 1 ];\n$handle = curl_init(); curl_setopt_array($handle, $options); $response = curl_exec($handle); curl_close($handle);\n$decodedResponse = json_decode($response); print_r($decodedResponse);"
          }
        ],
        "tags": [
          "oauth"
        ],
        "operationId": "createAccessToken",
        "summary": "Get access tokens",
        "description": "This endpoint returns an access token for the specified user and with the specified scopes. The token does not expire until the user changes their password. The body parameters must be encoded as form data.",
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "type": "object",
                "properties": {
                  "client_id": {
                    "description": "Client ID (Consumer Key) of your application",
                    "type": "string"
                  },
                  "client_secret": {
                    "description": "Client Secret (Consumer Secret) of your application",
                    "type": "string"
                  },
                  "code": {
                    "description": "Response code from the /oauth/authorize flow; required if grant_type=authorization_code",
                    "type": "string"
                  },
                  "grant_type": {
                    "description": "Grant type: authorization_code generates user tokens, client_credentials generates short-lived client grants",
                    "type": "string",
                    "enum": [
                      "authorization_code",
                      "client_credentials"
                    ]
                  },
                  "realm": {
                    "description": "User type to be authorized (usually 'consumer')",
                    "type": "string",
                    "enum": [
                      "customer",
                      "contributor"
                    ],
                    "default": "customer"
                  }
                },
                "required": [
                  "client_id",
                  "client_secret",
                  "grant_type"
                ]
              },
              "examples": {
                "default": {
                  "value": {
                    "client_id": "141024g14g28104gff1h"
                  }
                }
              }
            }
          }
        }
      }
    }
  },
  "servers": [
    {
      "url": "https://api.shutterstock.com"
    }
  ],
  "components": {
    "securitySchemes": {
      "basic": {
        "type": "http",
        "scheme": "basic"
      },
      "customer_accessCode": {
        "type": "oauth2",
        "x-shutterstock-realm": "customer",
        "flows": {
          "authorizationCode": {
            "authorizationUrl": "https://accounts.shutterstock.com/oauth/authorize",
            "tokenUrl": "https://accounts.shutterstock.com/oauth/access_token",
            "scopes": {
              "collections.edit": "Grant the ability to create new collections, edit a collection, and modify the contents of a collection",
              "collections.view": "Grant read-only access to a collection and its contents.",
              "earnings.view": "Grant the ability to view a user's current earnings and payouts.",
              "licenses.create": "Grant the ability to download and license media on behalf of the user.",
              "licenses.view": "Grant read-only access to a user's licenses.",
              "media.edit": "Grant the ability to make changes to a user's existing approved media.",
              "media.submit": "Grant the ability to submit a user's uploaded media for review and check their approval states.",
              "media.upload": "Grant the ability to upload media to a user's account.",
              "organization.address": "Grants read-only access to an organization's physical address.",
              "organization.view": "Grants read-only access to an organization's basic information.",
              "purchases.view": "Grant read-only access to a user's purchase history.",
              "reseller.purchase": "Grant the ability for a reseller to purchase products for a user.",
              "reseller.view": "Grant the ability for a reseller to view the products they can sell.",
              "user.address": "Grants read-only access to a user's physical address.",
              "user.edit": "Grants read and write access to all user account information.",
              "user.email": "Grants read-only access to a user's email address.",
              "user.view": "Grants read-only access to a user's basic account information (includes username, id, first and last name). If email is the same as username, it also implies user.email"
            }
          }
        }
      }
    },
    "schemas": {
      "AccessTokenDetails": {
        "description": "Access token details that are currently associated with this user",
        "properties": {
          "client_id": {
            "description": "Client ID that is associated with the user",
            "type": "string"
          },
          "contributor_id": {
            "description": "Contributor ID that is associated with the user",
            "type": "string"
          },
          "customer_id": {
            "description": "Customer ID that is associated with the user",
            "type": "string"
          },
          "expires_in": {
            "description": "Number of seconds until the access token expires; no expiration if this value is null",
            "type": "integer"
          },
          "organization_id": {
            "description": "Organization ID that is associated with the user",
            "type": "string"
          },
          "realm": {
            "description": "Type of access token",
            "enum": [
              "customer",
              "contributor"
            ],
            "type": "string"
          },
          "scopes": {
            "description": "Scopes that this access token provides when used as authentication",
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "user_id": {
            "description": "User ID that is associated with the user",
            "type": "string"
          },
          "username": {
            "description": "User name that is associated with the user",
            "type": "string"
          }
        },
        "type": "object"
      },
      "Album": {
        "description": "Album metadata",
        "properties": {
          "id": {
            "type": "string",
            "description": "The album ID"
          },
          "title": {
            "type": "string",
            "description": "The album title"
          }
        },
        "required": [
          "id",
          "title"
        ],
        "type": "object"
      },
      "Allotment": {
        "description": "Allotment",
        "properties": {
          "downloads_left": {
            "description": "Number of licenses remaining in the subscription",
            "type": "integer"
          },
          "downloads_limit": {
            "description": "Total number of licenses available to this subscription",
            "type": "integer"
          },
          "end_time": {
            "description": "Date the subscription ends, in the format YYYY-MM-ddTHH:mm:ssZ",
            "format": "date-time",
            "type": "string"
          },
          "start_time": {
            "description": "Date the subscription started, in the format YYYY-MM-ddTHH:mm:ssZ",
            "format": "date-time",
            "type": "string"
          }
        },
        "type": "object"
      },
      "Artist": {
        "description": "Artist metadata",
        "properties": {
          "name": {
            "type": "string",
            "description": "The artist's name"
          }
        },
        "required": [
          "name"
        ],
        "type": "object"
      },
      "Audio": {
        "description": "Audio metadata",
        "example": {
          "added_date": "2016-08-16",
          "album": {
            "id": "",
            "title": ""
          },
          "artists": [
            {
              "name": "Klimenko Music"
            }
          ],
          "assets": {
            "clean_audio": {
              "file_size": 35188408
            },
            "preview_mp3": {
              "file_size": 4400203,
              "url": "https://ak.picdn.net/shutterstock/audio/442583/preview/preview.mp3"
            },
            "preview_ogg": {
              "file_size": 4453197,
              "url": "https://ak.picdn.net/shutterstock/audio/442583/preview/preview.ogg"
            },
            "waveform": {
              "file_size": 18778,
              "url": "https://ak.picdn.net/shutterstock/audio/442583/waveform/waveform.png"
            }
          },
          "bpm": 110,
          "contributor": {
            "id": "2847971"
          },
          "description": "Pulsing and feel-good, featuring soaring synthesizer, groovy synth bass drums and synth drums that create a euphoric, upbeat mood.",
          "duration": 183,
          "genres": [
            "Dance/Electronic",
            "Electro Pop",
            "Pop/Rock"
          ],
          "id": "442583",
          "instruments": [
            "Piano",
            "Synth bass",
            "Synth drums",
            "Synthesizer"
          ],
          "is_adult": false,
          "is_instrumental": true,
          "isrc": "",
          "keywords": [
            "celebratory",
            "chic",
            "euphoric",
            "good times",
            "hip",
            "optimistic",
            "party",
            "soaring",
            "upbeat"
          ],
          "language": "en",
          "lyrics": "",
          "media_type": "audio",
          "moods": [
            "Bright",
            "Confident",
            "Fun",
            "Happy",
            "Inspiring",
            "Optimistic",
            "Playful",
            "Sophisticated",
            "Stylish",
            "Uplifting"
          ],
          "published_time": "2016-08-16T14:30:03-04:00",
          "recording_version": "",
          "releases": [],
          "similar_artists": [],
          "title": "Another Tomorrow",
          "updated_time": "2016-08-18T17:59:33-04:00",
          "vocal_description": "",
          "url": "https://www.shutterstock.com/music/track/another-tomorrow/442583"
        },
        "properties": {
          "added_date": {
            "description": "Date this track was added to the Shutterstock library, in the format: YYYY-MM-DD",
            "format": "date",
            "type": "string"
          },
          "affiliate_url": {
            "description": "Affiliate referral link; appears only for registered affiliate partners",
            "type": "string",
            "format": "uri"
          },
          "album": {
            "$ref": "#/components/schemas/Album"
          },
          "artists": {
            "description": "List of artists",
            "items": {
              "$ref": "#/components/schemas/Artist"
            },
            "type": "array"
          },
          "assets": {
            "$ref": "#/components/schemas/AudioAssets"
          },
          "bpm": {
            "description": "BPM (beats per minute) of this track",
            "type": "integer"
          },
          "contributor": {
            "$ref": "#/components/schemas/Contributor"
          },
          "deleted_time": {
            "format": "date-time",
            "type": "string"
          },
          "description": {
            "description": "Description of this track",
            "type": "string"
          },
          "duration": {
            "description": "Duration of this track in seconds",
            "type": "integer"
          },
          "genres": {
            "description": "List of all genres for this track",
            "items": {
              "description": "Genre that is associated with this track",
              "type": "string"
            },
            "type": "array"
          },
          "id": {
            "description": "Shutterstock ID of this track",
            "type": "string"
          },
          "instruments": {
            "description": "List of all instruments that appear in this track",
            "items": {
              "description": "Instrument that appears in this track",
              "type": "string"
            },
            "type": "array"
          },
          "is_adult": {
            "description": "Whether or not this track contains adult content",
            "type": "boolean"
          },
          "is_instrumental": {
            "description": "Whether or not this track is purely instrumental (lacking lyrics)",
            "type": "boolean"
          },
          "isrc": {
            "description": "",
            "type": "string"
          },
          "keywords": {
            "description": "List of all keywords for this track",
            "items": {
              "description": "Keyword for this track",
              "type": "string"
            },
            "type": "array"
          },
          "language": {
            "description": "Language of this track's lyrics",
            "type": "string"
          },
          "lyrics": {
            "description": "Lyrics of this track",
            "type": "string"
          },
          "media_type": {
            "description": "Media type of this track; should always be \"audio\"",
            "type": "string"
          },
          "model_releases": {
            "description": "List of all model releases for this track",
            "items": {
              "$ref": "#/components/schemas/ModelRelease"
            },
            "type": "array"
          },
          "moods": {
            "description": "List of all moods of this track",
            "items": {
              "description": "Mood of this track",
              "type": "string"
            },
            "type": "array"
          },
          "published_time": {
            "description": "Time this track was published, in the format YYYY-MM-DDThh:mm:ssZ",
            "format": "date-time",
            "type": "string"
          },
          "recording_version": {
            "description": "Recording version of this track",
            "type": "string"
          },
          "releases": {
            "description": "List of all releases of this track",
            "items": {
              "description": "Release of this track",
              "type": "string"
            },
            "type": "array"
          },
          "similar_artists": {
            "description": "List of all similar artists of this track",
            "items": {
              "$ref": "#/components/schemas/Artist"
            },
            "type": "array"
          },
          "submitted_time": {
            "description": "Time this track was submitted, in the format YYYY-MM-DDThh:mm:ssZ",
            "format": "date-time",
            "type": "string"
          },
          "title": {
            "description": "Title of this track",
            "type": "string"
          },
          "updated_time": {
            "description": "Time this track was last updated, in the format YYYY-MM-DDThh:mm:ssZ",
            "format": "date-time",
            "type": "string"
          },
          "vocal_description": {
            "description": "Vocal description of this track",
            "type": "string"
          },
          "url": {
            "description": "Link to track information page; included only for certain accounts",
            "type": "string"
          }
        },
        "required": [
          "id",
          "media_type",
          "contributor"
        ],
        "type": "object"
      },
      "AudioAssetDetails": {
        "description": "Audio asset metadata",
        "properties": {
          "file_size": {
            "description": "File size of the track",
            "type": "integer"
          },
          "url": {
            "description": "URL the track is available at",
            "type": "string"
          }
        },
        "type": "object"
      },
      "AudioAssets": {
        "description": "Audio assets",
        "properties": {
          "album_art": {
            "$ref": "#/components/schemas/AudioAssetDetails"
          },
          "clean_audio": {
            "$ref": "#/components/schemas/AudioAssetDetails"
          },
          "original_audio": {
            "$ref": "#/components/schemas/AudioAssetDetails"
          },
          "preview_mp3": {
            "$ref": "#/components/schemas/AudioAssetDetails"
          },
          "preview_ogg": {
            "$ref": "#/components/schemas/AudioAssetDetails"
          },
          "waveform": {
            "$ref": "#/components/schemas/AudioAssetDetails"
          }
        },
        "type": "object"
      },
      "AudioDataList": {
        "description": "List of tracks",
        "example": {
          "data": [
            {
              "added_date": "2016-04-12",
              "album": {
                "id": "",
                "title": ""
              },
              "artists": [
                {
                  "name": "Fin Productions"
                }
              ],
              "assets": {
                "clean_audio": {
                  "file_size": 30760372
                },
                "preview_mp3": {
                  "file_size": 3846606,
                  "url": "https://ak.picdn.net/shutterstock/audio/434750/preview/preview.mp3"
                },
                "preview_ogg": {
                  "file_size": 4402608,
                  "url": "https://ak.picdn.net/shutterstock/audio/434750/preview/preview.ogg"
                },
                "waveform": {
                  "file_size": 19822,
                  "url": "https://ak.picdn.net/shutterstock/audio/434750/waveform/waveform.png"
                }
              },
              "bpm": 100,
              "contributor": {
                "id": "2847971"
              },
              "description": "Pulsing and feel-good, featuring slick electric guitar, synthesizer, bass, electronic drum pads and drums that create a positive, celebratory mood.",
              "duration": 160,
              "genres": [
                "Dance/Electronic",
                "Electro Pop",
                "Pop/Rock"
              ],
              "id": "434750",
              "instruments": [
                "Bass",
                "Drums",
                "Electric guitar",
                "Pads",
                "Percussion",
                "Synthesizer"
              ],
              "is_adult": false,
              "is_instrumental": true,
              "isrc": "",
              "keywords": [
                "breezy",
                "celebration",
                "festive",
                "good times",
                "hopeful",
                "optimistic",
                "party",
                "positive",
                "reflective"
              ],
              "language": "en",
              "lyrics": "",
              "media_type": "audio",
              "moods": [
                "Bright",
                "Confident",
                "Fun",
                "Happy",
                "Inspiring",
                "Optimistic",
                "Playful",
                "Sophisticated",
                "Stylish",
                "Uplifting"
              ],
              "published_time": "2016-04-12T17:45:29-04:00",
              "recording_version": "",
              "releases": [],
              "similar_artists": [],
              "title": "Fresh Love",
              "updated_time": "2016-08-18T18:03:11-04:00",
              "vocal_description": ""
            }
          ]
        },
        "properties": {
          "data": {
            "description": "Tracks",
            "items": {
              "$ref": "#/components/schemas/Audio"
            },
            "type": "array"
          },
          "errors": {
            "description": "Error list; appears only if there was an error",
            "items": {
              "$ref": "#/components/schemas/Error"
            },
            "type": "array"
          },
          "message": {
            "description": "Server-generated message, if any",
            "type": "string"
          },
          "page": {
            "description": "Current page that is returned",
            "type": "integer"
          },
          "per_page": {
            "description": "Number of results per page",
            "type": "integer"
          },
          "total_count": {
            "description": "Total count of all results across all pages",
            "type": "integer"
          }
        }
      },
      "AudioSearchResults": {
        "description": "Audio search results",
        "properties": {
          "data": {
            "description": "List of tracks",
            "items": {
              "$ref": "#/components/schemas/Audio"
            },
            "type": "array"
          },
          "message": {
            "description": "Server-generated message, if any",
            "type": "string"
          },
          "page": {
            "description": "Current page that is returned",
            "type": "integer"
          },
          "per_page": {
            "description": "Number of results per page",
            "type": "integer"
          },
          "total_count": {
            "description": "Total count of all results across all pages",
            "type": "integer"
          }
        },
        "required": [
          "data",
          "total_count",
          "search_id"
        ],
        "type": "object"
      },
      "AuthorizeResponse": {
        "description": "Response to Authorize requests",
        "properties": {
          "body": {
            "description": "HTML redirect URL that contains the application authorization 'code'",
            "type": "string"
          }
        },
        "required": [
          "body"
        ],
        "type": "object"
      },
      "Category": {
        "description": "Category information",
        "properties": {
          "id": {
            "description": "Category ID",
            "type": "string"
          },
          "name": {
            "description": "Category name",
            "type": "string"
          }
        },
        "type": "object"
      },
      "CategoryDataList": {
        "description": "List of categories",
        "properties": {
          "data": {
            "description": "Categories",
            "items": {
              "$ref": "#/components/schemas/Category"
            },
            "type": "array"
          },
          "errors": {
            "description": "Error list; appears only if there was an error",
            "items": {
              "$ref": "#/components/schemas/Error"
            },
            "type": "array"
          },
          "message": {
            "description": "Server-generated message, if any",
            "type": "string"
          },
          "page": {
            "description": "The current page of results",
            "type": "integer"
          },
          "per_page": {
            "description": "The number of results per page",
            "type": "integer"
          },
          "total_count": {
            "description": "The total number of results across all pages",
            "type": "integer"
          }
        }
      },
      "Collection": {
        "description": "Collection metadata",
        "properties": {
          "cover_item": {
            "$ref": "#/components/schemas/CollectionItem"
          },
          "created_time": {
            "description": "When the collection was created",
            "format": "date-time",
            "type": "string"
          },
          "id": {
            "description": "The collection ID",
            "type": "string"
          },
          "items_updated_time": {
            "description": "The last time this collection's items were updated",
            "format": "date-time",
            "type": "string"
          },
          "name": {
            "description": "The name of the collection",
            "type": "string"
          },
          "share_code": {
            "description": "A code that can be used to share the collection (optional)",
            "type": "string"
          },
          "share_url": {
            "description": "The browser URL that can be used to share the collection (optional)",
            "type": "string"
          },
          "total_item_count": {
            "description": "The number of items in the collection",
            "type": "integer"
          },
          "updated_time": {
            "description": "The last time the collection was update (other than changes to the items in it)",
            "format": "date-time",
            "type": "string"
          }
        },
        "required": [
          "id",
          "name",
          "total_item_count"
        ],
        "type": "object"
      },
      "CollectionCreateRequest": {
        "description": "Collection creation request",
        "example": {
          "name": "Test Collection 19cf"
        },
        "properties": {
          "name": {
            "description": "The name of the collection",
            "type": "string"
          }
        },
        "required": [
          "name"
        ],
        "type": "object"
      },
      "CollectionCreateResponse": {
        "description": "Create collection response",
        "example": {
          "id": "48433105"
        },
        "properties": {
          "id": {
            "description": "ID of the new collection",
            "type": "string"
          }
        },
        "required": [
          "id"
        ],
        "type": "object"
      },
      "CollectionDataList": {
        "description": "List of collections",
        "example": {
          "data": [
            {
              "created_time": "2014-11-05T19:29:56-05:00",
              "id": "5747953",
              "name": "Test Collection cdad",
              "total_item_count": 0,
              "updated_time": "2014-11-05T19:29:56-05:00"
            },
            {
              "created_time": "2014-11-05T19:29:56-05:00",
              "id": "5747955",
              "name": "Test Collection ff5f",
              "total_item_count": 0,
              "updated_time": "2014-11-05T19:29:56-05:00"
            },
            {
              "created_time": "2014-11-05T19:29:58-05:00",
              "id": "5747957",
              "name": "Updated Collection ebc4",
              "total_item_count": 0,
              "updated_time": "2014-11-05T19:29:58-05:00"
            },
            {
              "created_time": "2014-11-05T19:32:13-05:00",
              "id": "5747971",
              "name": "Test Collection 0072",
              "total_item_count": 0,
              "updated_time": "2014-11-05T19:32:13-05:00"
            },
            {
              "created_time": "2014-11-05T19:32:13-05:00",
              "id": "5747973",
              "name": "Test Collection d332",
              "total_item_count": 0,
              "updated_time": "2014-11-05T19:32:13-05:00"
            }
          ]
        },
        "properties": {
          "data": {
            "description": "Collections",
            "items": {
              "$ref": "#/components/schemas/Collection"
            },
            "type": "array"
          },
          "errors": {
            "description": "Error list; appears only if there was an error",
            "items": {
              "$ref": "#/components/schemas/Error"
            },
            "type": "array"
          },
          "message": {
            "description": "Server-generated message, if any",
            "type": "string"
          },
          "page": {
            "description": "The current page of results",
            "type": "integer"
          },
          "per_page": {
            "description": "The number of results per page",
            "type": "integer"
          },
          "total_count": {
            "description": "The total number of results across all pages",
            "type": "integer"
          }
        }
      },
      "CollectionItem": {
        "description": "Collection item metadata",
        "properties": {
          "added_time": {
            "description": "The date the item was added to the collection",
            "format": "date-time",
            "type": "string"
          },
          "id": {
            "description": "ID of the item",
            "type": "string"
          },
          "media_type": {
            "description": "The media type of the item, such as image, video, or audio",
            "type": "string"
          }
        },
        "required": [
          "id"
        ],
        "type": "object"
      },
      "CollectionItemDataList": {
        "description": "List of collections",
        "example": {
          "data": [
            {
              "added_time": "2016-08-18T18:52:59-04:00",
              "id": "76688182",
              "media_type": "audio"
            },
            {
              "added_time": "2016-08-18T18:52:59-04:00",
              "id": "40005859",
              "media_type": "audio"
            }
          ],
          "page": 1,
          "per_page": 100
        },
        "properties": {
          "data": {
            "description": "Collections",
            "items": {
              "$ref": "#/components/schemas/CollectionItem"
            },
            "type": "array"
          },
          "errors": {
            "description": "Error list; appears only if there was an error",
            "items": {
              "$ref": "#/components/schemas/Error"
            },
            "type": "array"
          },
          "message": {
            "description": "Server-generated message, if any",
            "type": "string"
          },
          "page": {
            "description": "The current page of results",
            "type": "integer"
          },
          "per_page": {
            "description": "The number of results per page",
            "type": "integer"
          },
          "total_count": {
            "description": "The total number of results across all pages",
            "type": "integer"
          }
        }
      },
      "CollectionItemRequest": {
        "description": "Request to get the list of collection items",
        "properties": {
          "items": {
            "description": "List of items",
            "items": {
              "$ref": "#/components/schemas/CollectionItem"
            },
            "type": "array"
          }
        },
        "required": [
          "items"
        ],
        "type": "object"
      },
      "CollectionUpdateRequest": {
        "description": "Collection update request",
        "example": {
          "name": "My collection with a new name"
        },
        "properties": {
          "name": {
            "description": "The new name of the collection",
            "type": "string"
          }
        },
        "required": [
          "name"
        ],
        "type": "object"
      },
      "Contributor": {
        "description": "Contributor",
        "properties": {
          "id": {
            "description": "ID of the contributor",
            "type": "string"
          }
        },
        "required": [
          "id"
        ],
        "type": "object"
      },
      "ContributorProfile": {
        "description": "Contributor profile",
        "properties": {
          "about": {
            "description": "Short description of the contributors' library",
            "type": "string"
          },
          "contributor_type": {
            "description": "Type of content that the contributor specializes in (photographer, illustrator, etc)",
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "display_name": {
            "description": "Preferred name to be displayed for the contributor",
            "type": "string"
          },
          "equipment": {
            "description": "List of equipment used by the contributor (Canon EOS 5D Mark II, etc)",
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "id": {
            "description": "Contributor ID",
            "type": "string"
          },
          "location": {
            "description": "Country code representing the contributors' locale",
            "type": "string"
          },
          "portfolio_url": {
            "description": "Web URL for the contributors' profile",
            "type": "string"
          },
          "social_media": {
            "$ref": "#/components/schemas/ContributorProfileSocialMedia"
          },
          "styles": {
            "description": "List of styles that the contributor specializes in (lifestyle, mixed media, etc)",
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "subjects": {
            "description": "Generic list of subjects for contributors' work (food_and_drink, holiday, people, etc)",
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "website": {
            "description": "Personal website for the contributor",
            "type": "string"
          }
        },
        "required": [
          "id"
        ],
        "type": "object"
      },
      "ContributorProfileDataList": {
        "description": "List of contributor profiles",
        "properties": {
          "data": {
            "description": "Conributor profiles",
            "items": {
              "$ref": "#/components/schemas/ContributorProfile"
            },
            "type": "array"
          },
          "errors": {
            "description": "Error list; appears only if there was an error",
            "items": {
              "$ref": "#/components/schemas/Error"
            },
            "type": "array"
          },
          "message": {
            "description": "Error message",
            "type": "string"
          },
          "page": {
            "description": "Page of response",
            "type": "integer"
          },
          "per_page": {
            "description": "Number of contributors per page",
            "type": "integer"
          },
          "total_count": {
            "description": "Total count of contributors for this request",
            "type": "integer"
          }
        }
      },
      "ContributorProfileSocialMedia": {
        "description": "Contributor profile on social media",
        "properties": {
          "facebook": {
            "description": "Facebook link for contributor",
            "type": "string"
          },
          "google_plus": {
            "description": "Google+ link for contributor",
            "type": "string"
          },
          "linkedin": {
            "description": "LinkedIn link for contributor",
            "type": "string"
          },
          "pinterest": {
            "description": "Pinterest page for contributor",
            "type": "string"
          },
          "tumblr": {
            "description": "Tumblr link for contributor",
            "type": "string"
          },
          "twitter": {
            "description": "Twitter link for contributor",
            "type": "string"
          }
        },
        "type": "object"
      },
      "Cookie": {
        "description": "Cookie object",
        "properties": {
          "name": {
            "description": "The name of the cookie",
            "type": "string"
          },
          "value": {
            "description": "The value of the cookie",
            "type": "string"
          }
        },
        "required": [
          "name",
          "value"
        ],
        "type": "object"
      },
      "DownloadHistory": {
        "description": "Information about a downloaded media item. Applicable for all media types, only one of 'audio', 'image' or 'video' will be in a single DownloadHistory object",
        "properties": {
          "audio": {
            "$ref": "#/components/schemas/DownloadHistoryMediaDetails"
          },
          "download_time": {
            "description": "Date the media was downloaded the first time, in the format YYYY-MM-DDThh:mm:ssZ",
            "format": "date-time",
            "type": "string"
          },
          "id": {
            "description": "ID of the download",
            "type": "string"
          },
          "image": {
            "$ref": "#/components/schemas/DownloadHistoryMediaDetails"
          },
          "is_downloadable": {
            "description": "Specifies if the media is downloadable via its respective downloads endpoint",
            "type": "boolean"
          },
          "license": {
            "description": "The name of the license of this download",
            "type": "string"
          },
          "metadata": {
            "description": "Any metadata that was passed in the original licensing call",
            "type": "object"
          },
          "subscription_id": {
            "description": "ID of the subscription used to perform this download",
            "type": "string"
          },
          "user": {
            "$ref": "#/components/schemas/DownloadHistoryUserDetails"
          },
          "video": {
            "$ref": "#/components/schemas/DownloadHistoryMediaDetails"
          }
        },
        "required": [
          "id",
          "download_time",
          "license"
        ],
        "type": "object"
      },
      "DownloadHistoryDataList": {
        "description": "List of download events",
        "properties": {
          "data": {
            "description": "Download events",
            "items": {
              "$ref": "#/components/schemas/DownloadHistory"
            },
            "type": "array"
          },
          "errors": {
            "description": "Error list; appears only if there was an error",
            "items": {
              "$ref": "#/components/schemas/Error"
            },
            "type": "array"
          },
          "message": {
            "description": "Server-generated message, if any",
            "type": "string"
          },
          "page": {
            "description": "The current page of results",
            "type": "integer"
          },
          "per_page": {
            "description": "The number of results per page",
            "type": "integer"
          },
          "total_count": {
            "description": "The total number of results across all pages",
            "type": "integer"
          }
        }
      },
      "DownloadHistoryFormatDetails": {
        "description": "Information about the format of the download",
        "properties": {
          "format": {
            "description": "The format of the downloaded media",
            "type": "string"
          },
          "size": {
            "description": "The size of the downloaded media",
            "type": "string"
          }
        },
        "type": "object"
      },
      "DownloadHistoryMediaDetails": {
        "description": "Information about the downloaded media",
        "properties": {
          "format": {
            "$ref": "#/components/schemas/DownloadHistoryFormatDetails"
          },
          "id": {
            "description": "ID of the download history media details",
            "type": "string"
          }
        },
        "required": [
          "id"
        ],
        "type": "object"
      },
      "DownloadHistoryUserDetails": {
        "description": "Information about a user",
        "properties": {
          "username": {
            "description": "The name of the user who downloaded the item",
            "type": "string"
          }
        },
        "required": [
          "username"
        ],
        "type": "object"
      },
      "EditorialAssets": {
        "description": "Asset information, including size and thumbnail URLs",
        "properties": {
          "original": {
            "$ref": "#/components/schemas/ImageSizeDetails"
          },
          "thumb_170": {
            "$ref": "#/components/schemas/Thumbnail"
          },
          "thumb_220": {
            "$ref": "#/components/schemas/Thumbnail"
          },
          "watermark_450": {
            "$ref": "#/components/schemas/Thumbnail"
          },
          "watermark_1500": {
            "$ref": "#/components/schemas/Thumbnail"
          },
          "small_jpg": {
            "$ref": "#/components/schemas/ImageSizeDetails"
          },
          "medium_jpg": {
            "$ref": "#/components/schemas/ImageSizeDetails"
          }
        },
        "type": "object"
      },
      "EditorialCategory": {
        "description": "Editorial category names",
        "properties": {
          "name": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "EditorialContent": {
        "description": "Metadata about editorial content",
        "properties": {
          "aspect": {
            "type": "number"
          },
          "assets": {
            "$ref": "#/components/schemas/EditorialAssets"
          },
          "byline": {
            "type": "string"
          },
          "caption": {
            "type": "string"
          },
          "categories": {
            "description": "List of categories",
            "items": {
              "$ref": "#/components/schemas/EditorialCategory"
            },
            "type": "array"
          },
          "date_taken": {
            "format": "date",
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "id": {
            "type": "string"
          },
          "keywords": {
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "title": {
            "type": "string"
          }
        },
        "required": [
          "id"
        ],
        "type": "object"
      },
      "EditorialContentDataList": {
        "description": "List of editorial items",
        "properties": {
          "data": {
            "description": "Editorial items",
            "items": {
              "$ref": "#/components/schemas/EditorialContent"
            },
            "type": "array"
          },
          "errors": {
            "description": "Error list; appears only if there was an error",
            "items": {
              "$ref": "#/components/schemas/Error"
            },
            "type": "array"
          },
          "message": {
            "description": "Optional error message",
            "type": "string"
          },
          "page": {
            "description": "Current page of the response",
            "type": "integer"
          },
          "per_page": {
            "description": "Number of results per page",
            "type": "integer"
          },
          "total_count": {
            "description": "Total count of all results",
            "type": "integer"
          }
        }
      },
      "EditorialCoverItem": {
        "description": "Cover image for editorial livefeed",
        "properties": {
          "height": {
            "type": "integer"
          },
          "id": {
            "type": "string"
          },
          "url": {
            "type": "string"
          },
          "width": {
            "type": "integer"
          }
        },
        "required": [
          "id",
          "url"
        ],
        "type": "object"
      },
      "EditorialLivefeed": {
        "description": "Metadata about editorial livefeed",
        "properties": {
          "cover_item": {
            "$ref": "#/components/schemas/EditorialCoverItem"
          },
          "created_time": {
            "description": "When the livefeed was initially created",
            "format": "date-time",
            "type": "string"
          },
          "id": {
            "description": "Livefeed ID",
            "type": "string"
          },
          "name": {
            "description": "Name of the livefeed",
            "type": "string"
          },
          "total_item_count": {
            "description": "Total count of items in the livefeed",
            "type": "integer"
          }
        },
        "required": [
          "id",
          "name",
          "total_item_count"
        ],
        "type": "object"
      },
      "EditorialLivefeedList": {
        "description": "List of editorial livefeeds",
        "properties": {
          "data": {
            "description": "Editorial livefeeds",
            "items": {
              "$ref": "#/components/schemas/EditorialLivefeed"
            },
            "type": "array"
          },
          "message": {
            "description": "Optional error message",
            "type": "string"
          },
          "page": {
            "description": "Current page of the response",
            "type": "integer"
          },
          "per_page": {
            "description": "Number of results per page",
            "type": "integer"
          },
          "total_count": {
            "description": "Total count of all results",
            "type": "integer"
          }
        },
        "required": [
          "data",
          "total_count"
        ],
        "type": "object"
      },
      "EditorialSearchResults": {
        "description": "Editorial search results",
        "properties": {
          "data": {
            "description": "Editorial items",
            "items": {
              "$ref": "#/components/schemas/EditorialContent"
            },
            "type": "array"
          },
          "message": {
            "description": "Optional error message",
            "type": "string"
          },
          "next": {
            "description": "Cursor value that represents the next page of results",
            "type": "string"
          },
          "page": {
            "description": "Current page of the response",
            "type": "integer"
          },
          "per_page": {
            "description": "Number of results per page",
            "type": "integer"
          },
          "prev": {
            "description": "Cursor value that represents the previous page of results",
            "type": "string"
          },
          "search_id": {
            "description": "Unique identifier for the search request",
            "type": "string"
          },
          "total_count": {
            "description": "Total count of all results",
            "type": "integer"
          }
        },
        "required": [
          "data",
          "total_count"
        ],
        "type": "object"
      },
      "Error": {
        "description": "Error object",
        "properties": {
          "code": {
            "description": "The error code of this error",
            "type": "string"
          },
          "data": {
            "description": "Debugging information about the error",
            "type": "string"
          },
          "items": {
            "description": "A list of items that produced the error",
            "items": {
              "type": "object"
            },
            "type": "array"
          },
          "message": {
            "description": "Specific details about this error",
            "type": "string"
          },
          "path": {
            "description": "Internal code reference to the source of the error",
            "type": "string"
          }
        },
        "required": [
          "message"
        ],
        "type": "object"
      },
      "FeaturedCollection": {
        "description": "Featured collection metadata",
        "properties": {
          "cover_item": {
            "$ref": "#/components/schemas/FeaturedCollectionCoverItem"
          },
          "created_time": {
            "description": "Date that the collection was created, format in YYYY-MM-DDThh:mm:ssT",
            "format": "date-time",
            "type": "string"
          },
          "hero_item": {
            "$ref": "#/components/schemas/FeaturedCollectionCoverItem",
            "description": "Top-level item that is meant as a cover image, as the first image seen to represent the collection"
          },
          "id": {
            "description": "Collection ID",
            "type": "string"
          },
          "items_updated_time": {
            "description": "Date that an item in the collection was last added or removed, in the format YYYY-MM-DDThh:mm:ssZ",
            "format": "date-time",
            "type": "string"
          },
          "name": {
            "description": "Name of the collection",
            "type": "string"
          },
          "share_url": {
            "description": "Unique share url for the collection",
            "type": "string"
          },
          "total_item_count": {
            "description": "Total number of items in the collection",
            "type": "integer"
          },
          "updated_time": {
            "description": "Date that the collection was last modified, in the format YYYY-MM-DDThh:mm:ssZ",
            "format": "date-time",
            "type": "string"
          }
        },
        "required": [
          "id",
          "name",
          "total_item_count"
        ],
        "type": "object"
      },
      "FeaturedCollectionCoverItem": {
        "description": "Featured collection cover item metadata",
        "properties": {
          "url": {
            "description": "URL of the collection cover item",
            "type": "string"
          }
        },
        "required": [
          "url"
        ],
        "type": "object"
      },
      "FeaturedCollectionDataList": {
        "description": "List of featured collections",
        "properties": {
          "data": {
            "description": "Featured collections",
            "items": {
              "$ref": "#/components/schemas/FeaturedCollection"
            },
            "type": "array"
          },
          "errors": {
            "description": "Error list; appears only if there was an error",
            "items": {
              "$ref": "#/components/schemas/Error"
            },
            "type": "array"
          },
          "message": {
            "description": "Server-generated message, if any",
            "type": "string"
          },
          "page": {
            "description": "Current page that is returned",
            "type": "integer"
          },
          "per_page": {
            "description": "Number of results per page",
            "type": "integer"
          },
          "total_count": {
            "description": "Total count of all results across all pages",
            "type": "integer"
          }
        }
      },
      "Image": {
        "description": "Information about an image",
        "properties": {
          "added_date": {
            "description": "Date that the image was added by the contributor, in the format YYYY-MM-DD",
            "format": "date",
            "type": "string"
          },
          "affiliate_url": {
            "description": "Affiliate referral link; appears only for registered affiliate partners",
            "type": "string",
            "format": "uri"
          },
          "aspect": {
            "description": "Aspect ratio of the image",
            "type": "number"
          },
          "assets": {
            "$ref": "#/components/schemas/ImageAssets",
            "description": "Image asset information"
          },
          "categories": {
            "description": "Categories that this image is a part of",
            "items": {
              "$ref": "#/components/schemas/Category"
            },
            "type": "array"
          },
          "contributor": {
            "$ref": "#/components/schemas/Contributor"
          },
          "description": {
            "description": "Detailed description of the image",
            "type": "string"
          },
          "has_model_release": {
            "description": "Indicates whether there are model releases for the image",
            "type": "boolean"
          },
          "has_property_release": {
            "description": "Indicates whether there are property releases for the image",
            "type": "boolean"
          },
          "id": {
            "description": "Image ID",
            "type": "string"
          },
          "image_type": {
            "description": "Type of image",
            "type": "string"
          },
          "is_adult": {
            "description": "Whether or not this image contains adult content",
            "type": "boolean"
          },
          "is_editorial": {
            "description": "Whether or not this image is editorial content",
            "type": "boolean"
          },
          "is_illustration": {
            "description": "Whether or not this image is an illustration",
            "type": "boolean"
          },
          "keywords": {
            "description": "Keywords associated with the content of this image",
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "media_type": {
            "description": "Media type of this image, should always be \"image\"",
            "type": "string"
          },
          "model_releases": {
            "description": "List of model releases",
            "items": {
              "$ref": "#/components/schemas/ModelRelease"
            },
            "type": "array"
          },
          "models": {
            "description": "List of models",
            "items": {
              "$ref": "#/components/schemas/Model"
            },
            "type": "array"
          },
          "releases": {
            "description": "List of all releases of this image",
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "url": {
            "description": "Link to image information page; included only for certain accounts",
            "type": "string"
          }
        },
        "required": [
          "id",
          "media_type",
          "contributor"
        ],
        "type": "object"
      },
      "ImageAssets": {
        "description": "Image asset information",
        "properties": {
          "huge_jpg": {
            "$ref": "#/components/schemas/ImageSizeDetails"
          },
          "huge_tiff": {
            "$ref": "#/components/schemas/ImageSizeDetails"
          },
          "large_thumb": {
            "$ref": "#/components/schemas/Thumbnail"
          },
          "medium_jpg": {
            "$ref": "#/components/schemas/ImageSizeDetails"
          },
          "preview": {
            "$ref": "#/components/schemas/Thumbnail"
          },
          "preview_1000": {
            "$ref": "#/components/schemas/Thumbnail"
          },
          "preview_1500": {
            "$ref": "#/components/schemas/Thumbnail"
          },
          "small_jpg": {
            "$ref": "#/components/schemas/ImageSizeDetails"
          },
          "small_thumb": {
            "$ref": "#/components/schemas/Thumbnail"
          },
          "supersize_jpg": {
            "$ref": "#/components/schemas/ImageSizeDetails"
          },
          "supersize_tiff": {
            "$ref": "#/components/schemas/ImageSizeDetails"
          },
          "vector_eps": {
            "$ref": "#/components/schemas/ImageSizeDetails"
          }
        },
        "type": "object"
      },
      "ImageCreateRequest": {
        "description": "Image data for upload",
        "properties": {
          "base64_image": {
            "description": "A Base64 encoded jpeg or png",
            "type": "string"
          }
        },
        "required": [
          "base64_image"
        ],
        "type": "object"
      },
      "ImageCreateResponse": {
        "description": "Image upload information",
        "properties": {
          "id": {
            "type": "string"
          }
        },
        "required": [
          "id"
        ],
        "type": "object"
      },
      "ImageDataList": {
        "description": "List of images",
        "properties": {
          "data": {
            "description": "Images",
            "items": {
              "$ref": "#/components/schemas/Image"
            },
            "type": "array"
          },
          "errors": {
            "description": "Error list; appears only if there was an error",
            "items": {
              "$ref": "#/components/schemas/Error"
            },
            "type": "array"
          },
          "message": {
            "description": "Server-generated message, if any",
            "type": "string"
          },
          "page": {
            "description": "Current page that is returned",
            "type": "integer"
          },
          "per_page": {
            "description": "Number of results per page",
            "type": "integer"
          },
          "total_count": {
            "description": "Total count of all results across all pages",
            "type": "integer"
          }
        }
      },
      "ImageSearchResults": {
        "description": "Image search results",
        "properties": {
          "data": {
            "description": "List of images",
            "items": {
              "$ref": "#/components/schemas/Image"
            },
            "type": "array"
          },
          "message": {
            "description": "Server-generated message, if any",
            "type": "string"
          },
          "page": {
            "description": "Current page that is returned",
            "type": "integer"
          },
          "per_page": {
            "description": "Number of results per page",
            "type": "integer"
          },
          "search_id": {
            "description": "Unique identifier for the search request",
            "type": "string"
          },
          "spellcheck_info": {
            "description": "Returns information if search phrase has potentially been mistyped or another query would lead to better search results",
            "type": "object"
          },
          "total_count": {
            "description": "Total count of all results across all pages",
            "type": "integer"
          }
        },
        "required": [
          "data",
          "total_count",
          "search_id"
        ],
        "type": "object"
      },
      "ImageSizeDetails": {
        "description": "Image size information",
        "properties": {
          "display_name": {
            "description": "Display name of this image size",
            "type": "string"
          },
          "dpi": {
            "type": "integer"
          },
          "file_size": {
            "description": "File size (in bytes) of this image size",
            "type": "integer"
          },
          "format": {
            "description": "Format of this image size",
            "type": "string"
          },
          "height": {
            "description": "Height of this image size",
            "type": "integer"
          },
          "is_licensable": {
            "description": "Whether or not this image can be licensed in this image size",
            "type": "boolean"
          },
          "width": {
            "description": "Width of this image size",
            "type": "integer"
          }
        },
        "type": "object"
      },
      "LicenseAgreement": {
        "description": "Metadata about a license agreement",
        "properties": {
          "description": {
            "type": "string"
          },
          "license": {
            "type": "string"
          },
          "media_type": {
            "description": "Type of media, such as image or video",
            "type": "string"
          },
          "metadata": {
            "$ref": "#/components/schemas/SubscriptionMetadata"
          },
          "price_per_download": {
            "$ref": "#/components/schemas/Price"
          }
        },
        "type": "object"
      },
      "LicenseAudio": {
        "description": "An audio licensing item",
        "properties": {
          "audio_id": {
            "description": "ID of the track being licensed",
            "type": "string"
          },
          "license": {
            "description": "Type of license",
            "enum": [
              "audio_standard",
              "audio_enhanced",
              "audio_platform"
            ],
            "type": "string"
          },
          "search_id": {
            "description": "ID of the search that led to this licensing event",
            "type": "string"
          }
        },
        "required": [
          "audio_id"
        ],
        "type": "object"
      },
      "LicenseAudioRequest": {
        "description": "License audio tracks",
        "example": {
          "audio": [
            {
              "audio_id": "1"
            }
          ]
        },
        "properties": {
          "audio": {
            "description": "List of audio tracks to license",
            "items": {
              "$ref": "#/components/schemas/LicenseAudio"
            },
            "type": "array"
          }
        },
        "required": [
          "audio"
        ],
        "type": "object"
      },
      "LicenseAudioResult": {
        "description": "The response to a licensing request for an audio track",
        "properties": {
          "audio_id": {
            "description": "ID of the track that was licensed",
            "type": "string"
          },
          "download": {
            "$ref": "#/components/schemas/Url"
          },
          "error": {
            "description": "Error information if applicable",
            "type": "string"
          }
        },
        "required": [
          "audio_id"
        ],
        "type": "object"
      },
      "LicenseAudioResultDataList": {
        "description": "List of audio license results",
        "example": {
          "data": [
            {
              "audio_id": "1",
              "download": {
                "url": "http://download2.dev.shutterstock.com/gatekeeper/abc/original.wav"
              }
            }
          ]
        },
        "properties": {
          "data": {
            "description": "License results",
            "items": {
              "$ref": "#/components/schemas/LicenseAudioResult"
            },
            "type": "array"
          },
          "errors": {
            "description": "Error list; appears only if there was an error",
            "items": {
              "$ref": "#/components/schemas/Error"
            },
            "type": "array"
          },
          "message": {
            "description": "Server-generated message, if any",
            "type": "string"
          },
          "page": {
            "description": "Current page that is returned",
            "type": "integer"
          },
          "per_page": {
            "description": "Number of results per page",
            "type": "integer"
          },
          "total_count": {
            "description": "Total count of all results across all pages",
            "type": "integer"
          }
        }
      },
      "LicenseEditorialContent": {
        "description": "Individual editorial content to license",
        "properties": {
          "editorial_id": {
            "description": "Editorial ID",
            "type": "string"
          },
          "license": {
            "description": "License agreement to use for licensing",
            "type": "string"
          },
          "metadata": {
            "description": "Optional custom metdata to attach to the license",
            "type": "object"
          },
          "size": {
            "description": "Asset size to download, default is original",
            "default": "original",
            "enum": [
              "small",
              "medium",
              "original"
            ],
            "type": "string"
          }
        },
        "required": [
          "editorial_id",
          "license"
        ],
        "type": "object"
      },
      "LicenseEditorialContentRequest": {
        "description": "License editorial content request",
        "properties": {
          "country": {
            "description": "3-letter country code for where the editorial content will be distributed; this mandatory value is used for rights checks",
            "type": "string",
            "example": "USA"
          },
          "editorial": {
            "description": "Editorial content to license",
            "items": {
              "$ref": "#/components/schemas/LicenseEditorialContent"
            },
            "type": "array"
          }
        },
        "required": [
          "country",
          "editorial"
        ],
        "type": "object"
      },
      "LicenseEditorialContentResult": {
        "description": "The response to a licensing request for editorial content",
        "properties": {
          "allotment_charge": {
            "description": "For pre-paid plans, how many allotments were used for the item license",
            "type": "integer"
          },
          "download": {
            "$ref": "#/components/schemas/Url",
            "description": "Information that is needed to download the image"
          },
          "editorial_id": {
            "description": "Editorial ID",
            "type": "string"
          },
          "error": {
            "type": "string"
          }
        },
        "required": [
          "editorial_id"
        ],
        "type": "object"
      },
      "LicenseEditorialContentResultDataList": {
        "description": "List of editorial license results",
        "properties": {
          "data": {
            "description": "License results",
            "items": {
              "$ref": "#/components/schemas/LicenseEditorialContentResult"
            },
            "type": "array"
          },
          "errors": {
            "description": "Error list; appears only if there was an error",
            "items": {
              "$ref": "#/components/schemas/Error"
            },
            "type": "array"
          },
          "message": {
            "description": "Optional error message",
            "type": "string"
          },
          "page": {
            "description": "Current page of the response",
            "type": "integer"
          },
          "per_page": {
            "description": "Number of results per page",
            "type": "integer"
          },
          "total_count": {
            "description": "Total count of all results",
            "type": "integer"
          }
        }
      },
      "LicenseFormat": {
        "description": "A description of a license",
        "properties": {
          "description": {
            "description": "Description of the license",
            "type": "string"
          },
          "format": {
            "description": "Format or extension of the media, such as mpeg for videos or jpeg for images",
            "type": "string"
          },
          "media_type": {
            "description": "Media type of the license",
            "enum": [
              "image",
              "video",
              "audio",
              "editorial"
            ],
            "type": "string"
          },
          "min_resolution": {
            "description": "Width of the media, in pixels, allowed by this license",
            "type": "integer"
          },
          "size": {
            "description": "Keyword that details the size of the media, such as hd or sd for video, huge or vector for images",
            "type": "string"
          }
        },
        "type": "object"
      },
      "LicenseImage": {
        "description": "Data required to license an image",
        "properties": {
          "auth_cookie": {
            "$ref": "#/components/schemas/Cookie",
            "description": "Cookie object"
          },
          "editorial_acknowledgement": {
            "description": "Set to true to acknowledge the editorial agreement",
            "type": "boolean"
          },
          "format": {
            "description": "Image format to download",
            "enum": [
              "jpg",
              "eps"
            ],
            "type": "string"
          },
          "image_id": {
            "description": "Image ID",
            "type": "string"
          },
          "metadata": {
            "description": "For enterprise downloads, the custom metadata",
            "type": "object"
          },
          "price": {
            "description": "For revenue-sharing transactions, the final cost to the end customer",
            "type": "number"
          },
          "search_id": {
            "description": "ID of the search that led to this licensing transaction",
            "type": "string"
          },
          "show_modal": {
            "description": "(Deprecated)",
            "type": "boolean"
          },
          "size": {
            "description": "Image size to download",
            "enum": [
              "small",
              "medium",
              "huge",
              "vector"
            ],
            "type": "string"
          },
          "subscription_id": {
            "description": "ID of the subscription to use for the download.",
            "type": "string"
          },
          "verification_code": {
            "description": "(Deprecated)",
            "type": "string"
          }
        },
        "required": [
          "image_id"
        ],
        "type": "object"
      },
      "LicenseImageRequest": {
        "description": "Image license request data",
        "properties": {
          "images": {
            "description": "Images to create licenses for",
            "items": {
              "$ref": "#/components/schemas/LicenseImage"
            },
            "type": "array"
          }
        },
        "required": [
          "images"
        ],
        "type": "object"
      },
      "LicenseImageResult": {
        "description": "The response to a licensing request for an image",
        "properties": {
          "allotment_charge": {
            "description": "Number of allotments that this licensing event used",
            "type": "integer"
          },
          "download": {
            "$ref": "#/components/schemas/Url",
            "description": "Information that is needed to download the image"
          },
          "error": {
            "description": "Error message, appears only if there was an error",
            "type": "string"
          },
          "image_id": {
            "description": "Image ID that was licensed",
            "type": "string"
          },
          "price": {
            "$ref": "#/components/schemas/Price",
            "description": "Wholesale price information; only for rev-share partners"
          }
        },
        "required": [
          "image_id"
        ],
        "type": "object"
      },
      "LicenseImageResultDataList": {
        "description": "List of information about licensed images",
        "properties": {
          "data": {
            "description": "License results",
            "items": {
              "$ref": "#/components/schemas/LicenseImageResult"
            },
            "type": "array"
          },
          "errors": {
            "description": "Error list; appears only if there was an error",
            "items": {
              "$ref": "#/components/schemas/Error"
            },
            "type": "array"
          },
          "message": {
            "description": "Server-generated message, if any",
            "type": "string"
          },
          "page": {
            "description": "Current page that is returned",
            "type": "integer"
          },
          "per_page": {
            "description": "Number of results per page",
            "type": "integer"
          },
          "total_count": {
            "description": "Total count of all results across all pages",
            "type": "integer"
          }
        }
      },
      "LicenseVideo": {
        "description": "Data required to license a video",
        "example": {
          "size": "hd",
          "subscription_id": "s8241143",
          "video_id": "2140697"
        },
        "properties": {
          "auth_cookie": {
            "$ref": "#/components/schemas/Cookie"
          },
          "editorial_acknowledgement": {
            "description": "Whether or not this item is editorial content",
            "type": "boolean"
          },
          "metadata": {
            "description": "Metadata about this video license",
            "type": "object"
          },
          "price": {
            "description": "Retail price amount; only for rev-share partners",
            "type": "number"
          },
          "search_id": {
            "description": "ID of the search that led to this licensing event",
            "type": "string"
          },
          "show_modal": {
            "description": "(Deprecated)",
            "type": "boolean"
          },
          "size": {
            "description": "Size of the video being licensed",
            "enum": [
              "web",
              "sd",
              "hd",
              "4k"
            ],
            "type": "string"
          },
          "subscription_id": {
            "description": "ID of the subscription used for this license",
            "type": "string"
          },
          "video_id": {
            "description": "ID of the video being licensed",
            "type": "string"
          }
        },
        "required": [
          "video_id"
        ],
        "type": "object"
      },
      "LicenseVideoRequest": {
        "description": "List of videos to license",
        "properties": {
          "videos": {
            "description": "Videos to license",
            "items": {
              "$ref": "#/components/schemas/LicenseVideo"
            },
            "type": "array"
          }
        },
        "required": [
          "videos"
        ],
        "type": "object"
      },
      "LicenseVideoResult": {
        "description": "The response to a licensing request for a video",
        "properties": {
          "allotment_charge": {
            "description": "Number of allotments that this licensing event used",
            "type": "integer"
          },
          "download": {
            "$ref": "#/components/schemas/Url"
          },
          "error": {
            "description": "Potential error that occurred during licensing",
            "type": "string"
          },
          "price": {
            "$ref": "#/components/schemas/Price",
            "description": "Wholesale price information; only for rev-share partners only"
          },
          "video_id": {
            "description": "ID of the video that was licensed",
            "type": "string"
          }
        },
        "required": [
          "video_id"
        ],
        "type": "object"
      },
      "LicenseVideoResultDataList": {
        "description": "List of license results",
        "properties": {
          "data": {
            "description": "License results",
            "items": {
              "$ref": "#/components/schemas/LicenseVideoResult"
            },
            "type": "array"
          },
          "errors": {
            "description": "Error list; appears only if there was an error",
            "items": {
              "$ref": "#/components/schemas/Error"
            },
            "type": "array"
          },
          "message": {
            "description": "Server-generated message, if any",
            "type": "string"
          },
          "page": {
            "description": "Current page that is returned",
            "type": "integer"
          },
          "per_page": {
            "description": "Number of results per page",
            "type": "integer"
          },
          "total_count": {
            "description": "Total count of all results across all pages",
            "type": "integer"
          }
        }
      },
      "Model": {
        "description": "Model",
        "properties": {
          "id": {
            "description": "ID of the model",
            "type": "string"
          }
        },
        "required": [
          "id"
        ],
        "type": "object"
      },
      "ModelRelease": {
        "description": "Model and property release metadata",
        "properties": {
          "id": {
            "description": "ID of the model or property release",
            "type": "string"
          }
        },
        "type": "object"
      },
      "OauthAccessTokenResponse": {
        "description": "Access token response to client apps",
        "properties": {
          "access_token": {
            "description": "Access token that can be used for future requests",
            "type": "string"
          },
          "expires_in": {
            "description": "Number of seconds before token expires (tokens generated via `authorization_code` do not expire)",
            "type": "integer"
          },
          "token_type": {
            "default": "Bearer",
            "description": "Type of token",
            "type": "string"
          }
        },
        "required": [
          "access_token",
          "token_type"
        ],
        "type": "object"
      },
      "Price": {
        "description": "Price",
        "properties": {
          "local_amount": {
            "description": "Dollar amount of the calculated rev-share price in the currency local_currency",
            "type": "number"
          },
          "local_currency": {
            "description": "Currency of the rev-share price that was calculated",
            "type": "string"
          }
        },
        "type": "object"
      },
      "Recommendation": {
        "description": "Media Recommendation",
        "properties": {
          "id": {
            "description": "Media ID",
            "type": "string"
          }
        },
        "required": [
          "id"
        ],
        "type": "object"
      },
      "RecommendationDataList": {
        "description": "List of recommended images",
        "properties": {
          "data": {
            "description": "Recommended images",
            "items": {
              "$ref": "#/components/schemas/Recommendation"
            },
            "type": "array"
          },
          "errors": {
            "description": "Error list; appears only if there was an error",
            "items": {
              "$ref": "#/components/schemas/Error"
            },
            "type": "array"
          },
          "message": {
            "description": "Server-generated message, if any",
            "type": "string"
          },
          "page": {
            "description": "Current page that is returned",
            "type": "integer"
          },
          "per_page": {
            "description": "Number of results per page",
            "type": "integer"
          },
          "total_count": {
            "description": "Total count of all results across all pages",
            "type": "integer"
          }
        }
      },
      "RedownloadImage": {
        "description": "Data required to redownload an image",
        "properties": {
          "auth_cookie": {
            "$ref": "#/components/schemas/Cookie"
          },
          "show_modal": {
            "description": "(Deprecated)",
            "type": "boolean"
          },
          "size": {
            "description": "Size of the image",
            "enum": [
              "small",
              "medium",
              "huge",
              "supersize"
            ],
            "type": "string"
          },
          "verification_code": {
            "description": "(Deprecated)",
            "type": "string"
          }
        },
        "type": "object"
      },
      "RedownloadVideo": {
        "description": "Data required to redownload a video",
        "properties": {
          "auth_cookie": {
            "$ref": "#/components/schemas/Cookie"
          },
          "show_modal": {
            "description": "(Deprecated)",
            "type": "boolean"
          },
          "verification_code": {
            "description": "The verification code to use to redownload the video",
            "type": "string"
          }
        },
        "type": "object"
      },
      "Subscription": {
        "description": "Subscription",
        "properties": {
          "allotment": {
            "$ref": "#/components/schemas/Allotment"
          },
          "description": {
            "description": "Description of the subscription",
            "type": "string"
          },
          "expiration_time": {
            "description": "Date the subscription ends, in the format YYYY-MM-ddTHH:mm:ssZ",
            "format": "date-time",
            "type": "string"
          },
          "formats": {
            "description": "List of formats that are licensable for the subscription",
            "items": {
              "$ref": "#/components/schemas/LicenseFormat"
            },
            "type": "array"
          },
          "id": {
            "description": "Unique internal identifier for the subscription",
            "type": "string"
          },
          "license": {
            "description": "Internal identifier for the type of subscription",
            "type": "string"
          },
          "metadata": {
            "$ref": "#/components/schemas/SubscriptionMetadata"
          },
          "price_per_download": {
            "$ref": "#/components/schemas/Price"
          }
        },
        "required": [
          "id"
        ],
        "type": "object"
      },
      "SubscriptionDataList": {
        "description": "List of subscriptions",
        "properties": {
          "data": {
            "description": "Subscriptions retrieved from this user",
            "items": {
              "$ref": "#/components/schemas/Subscription"
            },
            "type": "array"
          },
          "errors": {
            "description": "Error list; appears only if there was an error",
            "items": {
              "$ref": "#/components/schemas/Error"
            },
            "type": "array"
          },
          "message": {
            "description": "Optional error message",
            "type": "string"
          },
          "page": {
            "description": "Current page that is being queried",
            "type": "integer"
          },
          "per_page": {
            "description": "Amount of subscriptions to show per page",
            "type": "integer"
          },
          "total_count": {
            "description": "Total number of subscriptions for this user",
            "type": "integer"
          }
        }
      },
      "SubscriptionMetadata": {
        "description": "Subscription Metadata",
        "type": "object"
      },
      "TestEcho": {
        "description": "Text to echo in the response",
        "properties": {
          "text": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "TestValidate": {
        "description": "Validation results",
        "properties": {
          "header": {
            "$ref": "#/components/schemas/TestValidateHeader",
            "description": "Headers as included in the request"
          },
          "query": {
            "$ref": "#/components/schemas/TestValidateQuery",
            "description": "Query as included in the request"
          }
        },
        "type": "object"
      },
      "TestValidateHeader": {
        "description": "Validation results",
        "properties": {
          "user-agent": {
            "description": "User agent to expect in the response",
            "type": "string"
          }
        },
        "type": "object"
      },
      "TestValidateQuery": {
        "description": "Validation results",
        "properties": {
          "id": {
            "description": "Integer ID that was passed in the request",
            "type": "integer"
          },
          "tag": {
            "description": "List of tags that were passed in the request",
            "items": {
              "type": "string"
            },
            "type": "array"
          }
        },
        "required": [
          "id"
        ],
        "type": "object"
      },
      "Thumbnail": {
        "description": "Image thumbnail information",
        "properties": {
          "height": {
            "description": "Height in pixels of the image thumbnail",
            "type": "integer"
          },
          "url": {
            "description": "Direct URL to the image",
            "type": "string"
          },
          "width": {
            "description": "Width in pixels of the image thumbnail",
            "type": "integer"
          }
        },
        "required": [
          "url",
          "height",
          "width"
        ],
        "type": "object"
      },
      "UpdatedMedia": {
        "description": "Information about a piece of updated media",
        "properties": {
          "id": {
            "description": "ID of the media",
            "type": "string"
          },
          "updated_time": {
            "description": "Date the media was updated",
            "format": "date-time",
            "type": "string"
          },
          "updates": {
            "description": "List of updates",
            "items": {
              "type": "string"
            },
            "type": "array"
          }
        },
        "required": [
          "id",
          "updated_time",
          "updates"
        ],
        "type": "object"
      },
      "UpdatedMediaDataList": {
        "description": "List of updated media",
        "properties": {
          "data": {
            "description": "Updated media items",
            "items": {
              "$ref": "#/components/schemas/UpdatedMedia"
            },
            "type": "array"
          },
          "errors": {
            "description": "Error list; appears only if there was an error",
            "items": {
              "$ref": "#/components/schemas/Error"
            },
            "type": "array"
          },
          "message": {
            "description": "Server-generated message, if any",
            "type": "string"
          },
          "page": {
            "description": "Current page that is returned",
            "type": "integer"
          },
          "per_page": {
            "description": "Number of results per page",
            "type": "integer"
          },
          "total_count": {
            "description": "Total count of all results across all pages",
            "type": "integer"
          }
        }
      },
      "Url": {
        "description": "URL Object",
        "properties": {
          "url": {
            "description": "URL that can be used to download the unwatermarked, licensed asset",
            "type": "string"
          }
        },
        "required": [
          "url"
        ],
        "type": "object"
      },
      "Urls": {
        "description": "URLs object",
        "properties": {
          "urls": {
            "description": "List of URLs",
            "items": {
              "type": "string"
            },
            "type": "array"
          }
        },
        "required": [
          "urls"
        ],
        "type": "object"
      },
      "UserDetails": {
        "description": "User details",
        "properties": {
          "contributor_id": {
            "description": "Unique internal identifier of the user, as a contributor",
            "type": "string"
          },
          "customer_id": {
            "description": "Unique internal identifier of the user, as a purchaser",
            "type": "string"
          },
          "email": {
            "description": "Email address of the user",
            "type": "string"
          },
          "first_name": {
            "description": "First name of the user",
            "type": "string"
          },
          "full_name": {
            "description": "Full name including first, middle, and last name of the user",
            "type": "string"
          },
          "id": {
            "description": "Unique internal identifier for the user, not tied to contributor or purchasing customer",
            "type": "string"
          },
          "is_premier": {
            "description": "True if the user has access to the Premier collection, false otherwise",
            "type": "boolean"
          },
          "is_premier_parent": {
            "description": "True if the user has access to the Premier collection and also has child users",
            "type": "boolean"
          },
          "language": {
            "description": "Main language of the user account",
            "type": "string"
          },
          "last_name": {
            "description": "Last name of the user",
            "type": "string"
          },
          "only_enhanced_license": {
            "description": "True if the user has an enterprise license, false otherwise",
            "type": "boolean"
          },
          "only_sensitive_use": {
            "description": "True if the user has access to sensitive use only, false otherwise",
            "type": "boolean"
          },
          "organization_id": {
            "description": "Unique internal identifier for the user's organization, specific to Premier users",
            "type": "string"
          },
          "premier_permissions": {
            "description": "List of permissions allowed through the Premier client",
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "username": {
            "description": "User name associated to the user",
            "type": "string"
          }
        },
        "type": "object"
      },
      "UserPostRequest": {
        "description": "Data required to create a user",
        "properties": {
          "email": {
            "description": "Email address for the new user",
            "type": "string"
          },
          "password": {
            "description": "Password for the new user",
            "type": "string"
          },
          "username": {
            "description": "User name for the new user",
            "type": "string"
          }
        },
        "required": [
          "email",
          "password"
        ],
        "type": "object"
      },
      "UserPostResponse": {
        "description": "The response to a request to create a user",
        "properties": {
          "id": {
            "description": "Unique internal identifier for user",
            "type": "string"
          }
        },
        "required": [
          "id"
        ],
        "type": "object"
      },
      "Video": {
        "description": "Information about a video",
        "properties": {
          "added_date": {
            "description": "Date this video was added to the Shutterstock library, in the format YYYY-MM-DD",
            "format": "date",
            "type": "string"
          },
          "affiliate_url": {
            "description": "Affiliate referral link; appears only for registered affiliate partners",
            "type": "string",
            "format": "uri"
          },
          "aspect": {
            "description": "Aspect ratio of this video in decimal format",
            "type": "number"
          },
          "aspect_ratio": {
            "description": "Aspect ratio of the video",
            "type": "string"
          },
          "assets": {
            "$ref": "#/components/schemas/VideoAssets"
          },
          "categories": {
            "description": "List of categories",
            "items": {
              "$ref": "#/components/schemas/Category"
            },
            "type": "array"
          },
          "contributor": {
            "$ref": "#/components/schemas/Contributor"
          },
          "description": {
            "description": "Description of this video",
            "type": "string"
          },
          "duration": {
            "description": "Duration of this video, in seconds",
            "type": "number"
          },
          "has_model_release": {
            "description": "Whether or not this video has been released for use by the model appearing in it",
            "type": "boolean"
          },
          "has_property_release": {
            "description": "Whether or not this video has received a release to show the landmark or property appearing in it",
            "type": "boolean"
          },
          "id": {
            "description": "ID of the video",
            "type": "string"
          },
          "is_adult": {
            "description": "Whether or not this video contains adult content",
            "type": "boolean"
          },
          "is_editorial": {
            "description": "Whether or not this video is editorial content",
            "type": "boolean"
          },
          "keywords": {
            "description": "Keywords associated with the content of this video",
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "media_type": {
            "description": "Media type of this video, should always be \"video\"",
            "type": "string"
          },
          "models": {
            "description": "List of models in this video",
            "items": {
              "$ref": "#/components/schemas/Model"
            },
            "type": "array"
          },
          "url": {
            "description": "Link to video information page; included only for certain accounts",
            "type": "string"
          }
        },
        "required": [
          "id",
          "media_type",
          "contributor"
        ],
        "type": "object"
      },
      "VideoAssets": {
        "description": "Video asset information",
        "properties": {
          "4k": {
            "$ref": "#/components/schemas/VideoSizeDetails"
          },
          "hd": {
            "$ref": "#/components/schemas/VideoSizeDetails"
          },
          "preview_jpg": {
            "$ref": "#/components/schemas/Url"
          },
          "preview_mp4": {
            "$ref": "#/components/schemas/Url"
          },
          "preview_webm": {
            "$ref": "#/components/schemas/Url"
          },
          "sd": {
            "$ref": "#/components/schemas/VideoSizeDetails"
          },
          "thumb_jpg": {
            "$ref": "#/components/schemas/Url"
          },
          "thumb_jpgs": {
            "$ref": "#/components/schemas/Urls"
          },
          "thumb_mp4": {
            "$ref": "#/components/schemas/Url"
          },
          "thumb_webm": {
            "$ref": "#/components/schemas/Url"
          },
          "web": {
            "$ref": "#/components/schemas/VideoSizeDetails"
          }
        },
        "type": "object"
      },
      "VideoDataList": {
        "description": "List of videos",
        "properties": {
          "data": {
            "description": "Videos",
            "items": {
              "$ref": "#/components/schemas/Video"
            },
            "type": "array"
          },
          "errors": {
            "description": "Error list; appears only if there was an error",
            "items": {
              "$ref": "#/components/schemas/Error"
            },
            "type": "array"
          },
          "message": {
            "description": "Server-generated message, if any",
            "type": "string"
          },
          "page": {
            "description": "Current page that is returned",
            "type": "integer"
          },
          "per_page": {
            "description": "Number of results per page",
            "type": "integer"
          },
          "total_count": {
            "description": "Total count of all results across all pages",
            "type": "integer"
          }
        }
      },
      "VideoSearchResults": {
        "description": "Video search results",
        "properties": {
          "data": {
            "description": "List of videos",
            "items": {
              "$ref": "#/components/schemas/Video"
            },
            "type": "array"
          },
          "message": {
            "description": "Server-generated message, if any",
            "type": "string"
          },
          "page": {
            "description": "Current page that is returned",
            "type": "integer"
          },
          "per_page": {
            "description": "Number of results per page",
            "type": "integer"
          },
          "total_count": {
            "description": "Total count of all results across all pages",
            "type": "integer"
          }
        },
        "required": [
          "data",
          "total_count",
          "search_id"
        ],
        "type": "object"
      },
      "VideoSizeDetails": {
        "description": "Video asset information",
        "properties": {
          "display_name": {
            "description": "Display name of this video size",
            "type": "string"
          },
          "file_size": {
            "description": "File size (in bytes) of this video size",
            "type": "integer"
          },
          "format": {
            "description": "Format of this video size",
            "type": "string"
          },
          "fps": {
            "description": "Frames per second of this video size",
            "type": "number"
          },
          "height": {
            "description": "Height of this video size",
            "type": "integer"
          },
          "is_licensable": {
            "description": "Whether or not videos can be licensed in this video size",
            "type": "boolean"
          },
          "width": {
            "description": "Width of this video size",
            "type": "integer"
          }
        },
        "type": "object"
      }
    }
  }
}
